"use strict";
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, egret;
!function(t) {
    var e = function() {
        function e() {
            t.$error(1014)
        }
        return e.get = function(t) {
            return -1 > t && (t = -1),
            t > 1 && (t = 1),
            function(e) {
                return 0 == t ? e : 0 > t ? e * (e * -t + 1 + t) : e * ((2 - e) * t + (1 - t))
            }
        }
        ,
        e.getPowIn = function(t) {
            return function(e) {
                return Math.pow(e, t)
            }
        }
        ,
        e.getPowOut = function(t) {
            return function(e) {
                return 1 - Math.pow(1 - e, t)
            }
        }
        ,
        e.getPowInOut = function(t) {
            return function(e) {
                return (e *= 2) < 1 ? .5 * Math.pow(e, t) : 1 - .5 * Math.abs(Math.pow(2 - e, t))
            }
        }
        ,
        e.sineIn = function(t) {
            return 1 - Math.cos(t * Math.PI / 2)
        }
        ,
        e.sineOut = function(t) {
            return Math.sin(t * Math.PI / 2)
        }
        ,
        e.sineInOut = function(t) {
            return -.5 * (Math.cos(Math.PI * t) - 1)
        }
        ,
        e.getBackIn = function(t) {
            return function(e) {
                return e * e * ((t + 1) * e - t)
            }
        }
        ,
        e.getBackOut = function(t) {
            return function(e) {
                return --e * e * ((t + 1) * e + t) + 1
            }
        }
        ,
        e.getBackInOut = function(t) {
            return t *= 1.525,
            function(e) {
                return (e *= 2) < 1 ? .5 * (e * e * ((t + 1) * e - t)) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
            }
        }
        ,
        e.circIn = function(t) {
            return -(Math.sqrt(1 - t * t) - 1)
        }
        ,
        e.circOut = function(t) {
            return Math.sqrt(1 - --t * t)
        }
        ,
        e.circInOut = function(t) {
            return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        }
        ,
        e.bounceIn = function(t) {
            return 1 - e.bounceOut(1 - t)
        }
        ,
        e.bounceOut = function(t) {
            return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }
        ,
        e.bounceInOut = function(t) {
            return .5 > t ? .5 * e.bounceIn(2 * t) : .5 * e.bounceOut(2 * t - 1) + .5
        }
        ,
        e.getElasticIn = function(t, e) {
            var r = 2 * Math.PI;
            return function(i) {
                if (0 == i || 1 == i)
                    return i;
                var n = e / r * Math.asin(1 / t);
                return -(t * Math.pow(2, 10 * (i -= 1)) * Math.sin((i - n) * r / e))
            }
        }
        ,
        e.getElasticOut = function(t, e) {
            var r = 2 * Math.PI;
            return function(i) {
                if (0 == i || 1 == i)
                    return i;
                var n = e / r * Math.asin(1 / t);
                return t * Math.pow(2, -10 * i) * Math.sin((i - n) * r / e) + 1
            }
        }
        ,
        e.getElasticInOut = function(t, e) {
            var r = 2 * Math.PI;
            return function(i) {
                var n = e / r * Math.asin(1 / t);
                return (i *= 2) < 1 ? -.5 * (t * Math.pow(2, 10 * (i -= 1)) * Math.sin((i - n) * r / e)) : t * Math.pow(2, -10 * (i -= 1)) * Math.sin((i - n) * r / e) * .5 + 1
            }
        }
        ,
        e.quadIn = e.getPowIn(2),
        e.quadOut = e.getPowOut(2),
        e.quadInOut = e.getPowInOut(2),
        e.cubicIn = e.getPowIn(3),
        e.cubicOut = e.getPowOut(3),
        e.cubicInOut = e.getPowInOut(3),
        e.quartIn = e.getPowIn(4),
        e.quartOut = e.getPowOut(4),
        e.quartInOut = e.getPowInOut(4),
        e.quintIn = e.getPowIn(5),
        e.quintOut = e.getPowOut(5),
        e.quintInOut = e.getPowInOut(5),
        e.backIn = e.getBackIn(1.7),
        e.backOut = e.getBackOut(1.7),
        e.backInOut = e.getBackInOut(1.7),
        e.elasticIn = e.getElasticIn(1, .3),
        e.elasticOut = e.getElasticOut(1, .3),
        e.elasticInOut = e.getElasticInOut(1, .3 * 1.5),
        e
    }();
    t.Ease = e,
    __reflect(e.prototype, "egret.Ease")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(t, r, i) {
            var n = e.call(this) || this;
            return n._target = null,
            n._useTicks = !1,
            n.ignoreGlobalPause = !1,
            n.loop = !1,
            n.pluginData = null,
            n._steps = null,
            n.paused = !1,
            n.duration = 0,
            n._prevPos = -1,
            n.position = null,
            n._prevPosition = 0,
            n._stepPosition = 0,
            n.passive = !1,
            n.initialize(t, r, i),
            n
        }
        return __extends(r, e),
        r.get = function(t, e, i, n) {
            return void 0 === i && (i = null),
            void 0 === n && (n = !1),
            n && r.removeTweens(t),
            new r(t,e,i)
        }
        ,
        r.removeTweens = function(t) {
            if (t.tween_count) {
                for (var e = r._tweens, i = e.length - 1; i >= 0; i--)
                    e[i]._target == t && (e[i].paused = !0,
                    e.splice(i, 1));
                t.tween_count = 0
            }
        }
        ,
        r.pauseTweens = function(e) {
            if (e.tween_count)
                for (var r = t.Tween._tweens, i = r.length - 1; i >= 0; i--)
                    r[i]._target == e && (r[i].paused = !0)
        }
        ,
        r.resumeTweens = function(e) {
            if (e.tween_count)
                for (var r = t.Tween._tweens, i = r.length - 1; i >= 0; i--)
                    r[i]._target == e && (r[i].paused = !1)
        }
        ,
        r.tick = function(t, e) {
            void 0 === e && (e = !1);
            var i = t - r._lastTime;
            r._lastTime = t;
            for (var n = r._tweens.concat(), a = n.length - 1; a >= 0; a--) {
                var s = n[a];
                e && !s.ignoreGlobalPause || s.paused || s.$tick(s._useTicks ? 1 : i)
            }
            return !1
        }
        ,
        r._register = function(e, i) {
            var n = e._target
              , a = r._tweens;
            if (i)
                n && (n.tween_count = n.tween_count > 0 ? n.tween_count + 1 : 1),
                a.push(e),
                r._inited || (r._lastTime = t.getTimer(),
                t.ticker.$startTick(r.tick, null),
                r._inited = !0);
            else {
                n && n.tween_count--;
                for (var s = a.length; s--; )
                    if (a[s] == e)
                        return void a.splice(s, 1)
            }
        }
        ,
        r.removeAllTweens = function() {
            for (var t = r._tweens, e = 0, i = t.length; i > e; e++) {
                var n = t[e];
                n.paused = !0,
                n._target.tween_count = 0
            }
            t.length = 0
        }
        ,
        r.prototype.initialize = function(t, e, i) {
            this._target = t,
            e && (this._useTicks = e.useTicks,
            this.ignoreGlobalPause = e.ignoreGlobalPause,
            this.loop = e.loop,
            e.onChange && this.addEventListener("change", e.onChange, e.onChangeObj),
            e.override && r.removeTweens(t)),
            this.pluginData = i || {},
            this._curQueueProps = {},
            this._initQueueProps = {},
            this._steps = [],
            e && e.paused ? this.paused = !0 : r._register(this, !0),
            e && null != e.position && this.setPosition(e.position, r.NONE)
        }
        ,
        r.prototype.setPosition = function(t, e) {
            void 0 === e && (e = 1),
            0 > t && (t = 0);
            var r = t
              , i = !1;
            if (r >= this.duration)
                if (this.loop) {
                    var n = r % this.duration;
                    r = r > 0 && 0 === n ? this.duration : n
                } else
                    r = this.duration,
                    i = !0;
            if (r == this._prevPos)
                return i;
            i && this.setPaused(!0);
            var a = this._prevPos;
            if (this.position = this._prevPos = r,
            this._prevPosition = t,
            this._target && this._steps.length > 0) {
                for (var s = this._steps.length, o = -1, l = 0; s > l && !("step" == this._steps[l].type && (o = l,
                this._steps[l].t <= r && this._steps[l].t + this._steps[l].d >= r)); l++)
                    ;
                for (var l = 0; s > l; l++)
                    if ("action" == this._steps[l].type)
                        0 != e && (this._useTicks ? this._runAction(this._steps[l], r, r) : 1 == e && a > r ? (a != this.duration && this._runAction(this._steps[l], a, this.duration),
                        this._runAction(this._steps[l], 0, r, !0)) : this._runAction(this._steps[l], a, r));
                    else if ("step" == this._steps[l].type && o == l) {
                        var h = this._steps[o];
                        this._updateTargetProps(h, Math.min((this._stepPosition = r - h.t) / h.d, 1))
                    }
            }
            return this.dispatchEventWith("change"),
            i
        }
        ,
        r.prototype._runAction = function(t, e, r, i) {
            void 0 === i && (i = !1);
            var n = e
              , a = r;
            e > r && (n = r,
            a = e);
            var s = t.t;
            (s == a || s > n && a > s || i && s == e) && t.f.apply(t.o, t.p)
        }
        ,
        r.prototype._updateTargetProps = function(t, e) {
            var i, n, a, s, o, l;
            if (t || 1 != e) {
                if (this.passive = !!t.v,
                this.passive)
                    return;
                t.e && (e = t.e(e, 0, 1, 1)),
                i = t.p0,
                n = t.p1
            } else
                this.passive = !1,
                i = n = this._curQueueProps;
            for (var h in this._initQueueProps) {
                null == (s = i[h]) && (i[h] = s = this._initQueueProps[h]),
                null == (o = n[h]) && (n[h] = o = s),
                a = s == o || 0 == e || 1 == e || "number" != typeof s ? 1 == e ? o : s : s + (o - s) * e;
                var u = !1;
                if (l = r._plugins[h])
                    for (var c = 0, f = l.length; f > c; c++) {
                        var d = l[c].tween(this, h, a, i, n, e, !!t && i == n, !t);
                        d == r.IGNORE ? u = !0 : a = d
                    }
                u || (this._target[h] = a)
            }
        }
        ,
        r.prototype.setPaused = function(t) {
            return this.paused == t ? this : (this.paused = t,
            r._register(this, !t),
            this)
        }
        ,
        r.prototype._cloneProps = function(t) {
            var e = {};
            for (var r in t)
                e[r] = t[r];
            return e
        }
        ,
        r.prototype._addStep = function(t) {
            return t.d > 0 && (t.type = "step",
            this._steps.push(t),
            t.t = this.duration,
            this.duration += t.d),
            this
        }
        ,
        r.prototype._appendQueueProps = function(t) {
            var e, i, n, a, s;
            for (var o in t)
                if (void 0 === this._initQueueProps[o]) {
                    if (i = this._target[o],
                    e = r._plugins[o])
                        for (n = 0,
                        a = e.length; a > n; n++)
                            i = e[n].init(this, o, i);
                    this._initQueueProps[o] = this._curQueueProps[o] = void 0 === i ? null : i
                } else
                    i = this._curQueueProps[o];
            for (var o in t) {
                if (i = this._curQueueProps[o],
                e = r._plugins[o])
                    for (s = s || {},
                    n = 0,
                    a = e.length; a > n; n++)
                        e[n].step && e[n].step(this, o, i, t[o], s);
                this._curQueueProps[o] = t[o]
            }
            return s && this._appendQueueProps(s),
            this._curQueueProps
        }
        ,
        r.prototype._addAction = function(t) {
            return t.t = this.duration,
            t.type = "action",
            this._steps.push(t),
            this
        }
        ,
        r.prototype._set = function(t, e) {
            for (var r in t)
                e[r] = t[r]
        }
        ,
        r.prototype.wait = function(t, e) {
            if (null == t || 0 >= t)
                return this;
            var r = this._cloneProps(this._curQueueProps);
            return this._addStep({
                d: t,
                p0: r,
                p1: r,
                v: e
            })
        }
        ,
        r.prototype.to = function(t, e, r) {
            return void 0 === r && (r = void 0),
            (isNaN(e) || 0 > e) && (e = 0),
            this._addStep({
                d: e || 0,
                p0: this._cloneProps(this._curQueueProps),
                e: r,
                p1: this._cloneProps(this._appendQueueProps(t))
            }),
            this.set(t)
        }
        ,
        r.prototype.call = function(t, e, r) {
            return void 0 === e && (e = void 0),
            void 0 === r && (r = void 0),
            this._addAction({
                f: t,
                p: r ? r : [],
                o: e ? e : this._target
            })
        }
        ,
        r.prototype.set = function(t, e) {
            return void 0 === e && (e = null),
            this._appendQueueProps(t),
            this._addAction({
                f: this._set,
                o: this,
                p: [t, e ? e : this._target]
            })
        }
        ,
        r.prototype.play = function(t) {
            return t || (t = this),
            this.call(t.setPaused, t, [!1])
        }
        ,
        r.prototype.pause = function(t) {
            return t || (t = this),
            this.call(t.setPaused, t, [!0])
        }
        ,
        r.prototype.$tick = function(t) {
            this.paused || this.setPosition(this._prevPosition + t)
        }
        ,
        r.NONE = 0,
        r.LOOP = 1,
        r.REVERSE = 2,
        r._tweens = [],
        r.IGNORE = {},
        r._plugins = {},
        r._inited = !1,
        r._lastTime = 0,
        r
    }(t.EventDispatcher);
    t.Tween = e,
    __reflect(e.prototype, "egret.Tween")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e;
    !function(e) {
        function r(e) {
            if ("function" == typeof e)
                return e;
            var r = t.Ease[e];
            return "function" == typeof r ? r : null
        }
        function i(t, e, r, i) {
            var n = t.prototype;
            n.__meta__ = n.__meta__ || {},
            n.__meta__[e] = r,
            i && (n.__defaultProperty__ = e)
        }
        var n = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.name = "",
                e
            }
            return __extends(e, t),
            e
        }(t.EventDispatcher);
        e.BasePath = n,
        __reflect(n.prototype, "egret.tween.BasePath");
        var a = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.props = void 0,
                e.duration = 500,
                e.ease = void 0,
                e
            }
            return __extends(e, t),
            e
        }(n);
        e.To = a,
        __reflect(a.prototype, "egret.tween.To");
        var s = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.duration = 500,
                e.passive = void 0,
                e
            }
            return __extends(e, t),
            e
        }(n);
        e.Wait = s,
        __reflect(s.prototype, "egret.tween.Wait");
        var o = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.props = void 0,
                e
            }
            return __extends(e, t),
            e
        }(n);
        e.Set = o,
        __reflect(o.prototype, "egret.tween.Set");
        var l = function(t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.delta = 0,
                e
            }
            return __extends(e, t),
            e
        }(n);
        e.Tick = l,
        __reflect(l.prototype, "egret.tween.Tick");
        var h = function(e) {
            function i() {
                var t = e.call(this) || this;
                return t.isStop = !1,
                t
            }
            return __extends(i, e),
            Object.defineProperty(i.prototype, "props", {
                get: function() {
                    return this._props
                },
                set: function(t) {
                    this._props = t
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(i.prototype, "target", {
                get: function() {
                    return this._target
                },
                set: function(t) {
                    this._target = t
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(i.prototype, "paths", {
                get: function() {
                    return this._paths
                },
                set: function(t) {
                    this._paths = t || []
                },
                enumerable: !0,
                configurable: !0
            }),
            i.prototype.play = function(t) {
                this.tween ? (this.tween.setPaused(!1),
                this.isStop && void 0 == t && (t = 0,
                this.isStop = !1),
                void 0 !== t && null !== t && this.tween.setPosition(t)) : this.createTween(t)
            }
            ,
            i.prototype.pause = function() {
                this.tween && this.tween.setPaused(!0)
            }
            ,
            i.prototype.stop = function() {
                this.pause(),
                this.isStop = !0
            }
            ,
            i.prototype.createTween = function(e) {
                this.tween = t.Tween.get(this._target, this._props),
                this._paths && this.applyPaths(),
                void 0 !== e && null !== e && this.tween.setPosition(e)
            }
            ,
            i.prototype.applyPaths = function() {
                for (var t = 0; t < this._paths.length; t++) {
                    var e = this._paths[t];
                    this.applyPath(e)
                }
            }
            ,
            i.prototype.applyPath = function(t) {
                var e = this;
                t instanceof a ? this.tween.to(t.props, t.duration, r(t.ease)) : t instanceof s ? this.tween.wait(t.duration, t.passive) : t instanceof o ? this.tween.set(t.props) : t instanceof l && this.tween.$tick(t.delta),
                this.tween.call(function() {
                    return e.pathComplete(t)
                })
            }
            ,
            i.prototype.pathComplete = function(t) {
                t.dispatchEventWith("complete"),
                this.dispatchEventWith("pathComplete", !1, t);
                var e = this._paths.indexOf(t);
                e >= 0 && e === this._paths.length - 1 && this.dispatchEventWith("complete")
            }
            ,
            i
        }(t.EventDispatcher);
        e.TweenItem = h,
        __reflect(h.prototype, "egret.tween.TweenItem"),
        i(h, "paths", "Array", !0);
        var u = function(t) {
            function e() {
                var e = t.call(this) || this;
                return e.completeCount = 0,
                e
            }
            return __extends(e, t),
            Object.defineProperty(e.prototype, "items", {
                get: function() {
                    return this._items
                },
                set: function(t) {
                    this.completeCount = 0,
                    this.registerEvent(!1),
                    this._items = t,
                    this.registerEvent(!0)
                },
                enumerable: !0,
                configurable: !0
            }),
            e.prototype.registerEvent = function(t) {
                var e = this;
                this._items && this._items.forEach(function(r) {
                    t ? r.addEventListener("complete", e.itemComplete, e) : r.removeEventListener("complete", e.itemComplete, e)
                })
            }
            ,
            e.prototype.play = function(t) {
                if (this._items)
                    for (var e = 0; e < this._items.length; e++) {
                        var r = this._items[e];
                        r.play(t)
                    }
            }
            ,
            e.prototype.pause = function() {
                if (this._items)
                    for (var t = 0; t < this._items.length; t++) {
                        var e = this._items[t];
                        e.pause()
                    }
            }
            ,
            e.prototype.stop = function() {
                if (this._items)
                    for (var t = 0; t < this._items.length; t++) {
                        var e = this._items[t];
                        e.stop()
                    }
            }
            ,
            e.prototype.itemComplete = function(t) {
                var e = t.currentTarget;
                this.completeCount++,
                this.dispatchEventWith("itemComplete", !1, e),
                this.completeCount === this.items.length && (this.dispatchEventWith("complete"),
                this.completeCount = 0)
            }
            ,
            e
        }(t.EventDispatcher);
        e.TweenGroup = u,
        __reflect(u.prototype, "egret.tween.TweenGroup"),
        i(u, "items", "Array", !0)
    }(e = t.tween || (t.tween = {}))
}(egret || (egret = {}));
var __extends = this && this.__extends || function() {
    var t = Object.setPrototypeOf || {
        __proto__: []
    }instanceof Array && function(t, e) {
        t.__proto__ = e
    }
    || function(t, e) {
        for (var r in e)
            e.hasOwnProperty(r) && (t[r] = e[r])
    }
    ;
    return function(e, r) {
        function i() {
            this.constructor = e
        }
        t(e, r),
        e.prototype = null === r ? Object.create(r) : (i.prototype = r.prototype,
        new i)
    }
}(), dragonBones;
!function(t) {}(dragonBones || (dragonBones = {}));
var dragonBones;
if (function(t) {
    var e = function() {
        function e(r) {
            this._clock = new t.WorldClock,
            this._events = [],
            this._objects = [],
            this._eventManager = null,
            this._eventManager = r,
            console.info("DragonBones: " + e.VERSION + "\nWebsite: http://dragonbones.com/\nSource and Demo: https://github.com/DragonBones/")
        }
        return e.prototype.advanceTime = function(e) {
            if (this._objects.length > 0) {
                for (var r = 0, i = this._objects; r < i.length; r++) {
                    var n = i[r];
                    n.returnToPool()
                }
                this._objects.length = 0
            }
            if (this._clock.advanceTime(e),
            this._events.length > 0) {
                for (var a = 0; a < this._events.length; ++a) {
                    var s = this._events[a]
                      , o = s.armature;
                    null !== o._armatureData && (o.eventDispatcher.dispatchDBEvent(s.type, s),
                    s.type === t.EventObject.SOUND_EVENT && this._eventManager.dispatchDBEvent(s.type, s)),
                    this.bufferObject(s)
                }
                this._events.length = 0
            }
        }
        ,
        e.prototype.bufferEvent = function(t) {
            this._events.indexOf(t) < 0 && this._events.push(t)
        }
        ,
        e.prototype.bufferObject = function(t) {
            this._objects.indexOf(t) < 0 && this._objects.push(t)
        }
        ,
        Object.defineProperty(e.prototype, "clock", {
            get: function() {
                return this._clock
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "eventManager", {
            get: function() {
                return this._eventManager
            },
            enumerable: !0,
            configurable: !0
        }),
        e.VERSION = "5.6.300",
        e.yDown = !0,
        e.debug = !1,
        e.debugDraw = !1,
        e.webAssembly = !1,
        e
    }();
    t.DragonBones = e
}(dragonBones || (dragonBones = {})),
"undefined" == typeof global)
    var global = window;
console.warn || (console.warn = function() {}
),
console.assert || (console.assert = function() {}
),
Date.now || (Date.now = function() {
    return (new Date).getTime()
}
);
var __extends = function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}, dragonBones;
!function(t) {
    var e = function() {
        function t() {
            this.hashCode = t._hashCode++,
            this._isInPool = !1
        }
        return t._returnObject = function(e) {
            var r = String(e.constructor)
              , i = r in t._maxCountMap ? t._maxCountMap[r] : t._defaultMaxCount
              , n = t._poolsMap[r] = t._poolsMap[r] || [];
            n.length < i && (e._isInPool ? console.warn("The object is already in the pool.") : (e._isInPool = !0,
            n.push(e)))
        }
        ,
        t.toString = function() {
            throw new Error
        }
        ,
        t.setMaxCount = function(e, r) {
            if ((0 > r || r !== r) && (r = 0),
            null !== e) {
                var i = String(e)
                  , n = i in t._poolsMap ? t._poolsMap[i] : null;
                null !== n && n.length > r && (n.length = r),
                t._maxCountMap[i] = r
            } else {
                t._defaultMaxCount = r;
                for (var i in t._poolsMap) {
                    var n = t._poolsMap[i];
                    n.length > r && (n.length = r),
                    i in t._maxCountMap && (t._maxCountMap[i] = r)
                }
            }
        }
        ,
        t.clearPool = function(e) {
            if (void 0 === e && (e = null),
            null !== e) {
                var r = String(e)
                  , i = r in t._poolsMap ? t._poolsMap[r] : null;
                null !== i && i.length > 0 && (i.length = 0)
            } else
                for (var n in t._poolsMap) {
                    var i = t._poolsMap[n];
                    i.length = 0
                }
        }
        ,
        t.borrowObject = function(e) {
            var r = String(e)
              , i = r in t._poolsMap ? t._poolsMap[r] : null;
            if (null !== i && i.length > 0) {
                var n = i.pop();
                return n._isInPool = !1,
                n
            }
            var a = new e;
            return a._onClear(),
            a
        }
        ,
        t.prototype.returnToPool = function() {
            this._onClear(),
            t._returnObject(this)
        }
        ,
        t._hashCode = 0,
        t._defaultMaxCount = 3e3,
        t._maxCountMap = {},
        t._poolsMap = {},
        t
    }();
    t.BaseObject = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t, e, r, i, n, a) {
            void 0 === t && (t = 1),
            void 0 === e && (e = 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = 1),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            this.a = t,
            this.b = e,
            this.c = r,
            this.d = i,
            this.tx = n,
            this.ty = a
        }
        return t.prototype.toString = function() {
            return "[object dragonBones.Matrix] a:" + this.a + " b:" + this.b + " c:" + this.c + " d:" + this.d + " tx:" + this.tx + " ty:" + this.ty
        }
        ,
        t.prototype.copyFrom = function(t) {
            return this.a = t.a,
            this.b = t.b,
            this.c = t.c,
            this.d = t.d,
            this.tx = t.tx,
            this.ty = t.ty,
            this
        }
        ,
        t.prototype.copyFromArray = function(t, e) {
            return void 0 === e && (e = 0),
            this.a = t[e],
            this.b = t[e + 1],
            this.c = t[e + 2],
            this.d = t[e + 3],
            this.tx = t[e + 4],
            this.ty = t[e + 5],
            this
        }
        ,
        t.prototype.identity = function() {
            return this.a = this.d = 1,
            this.b = this.c = 0,
            this.tx = this.ty = 0,
            this
        }
        ,
        t.prototype.concat = function(t) {
            var e = this.a * t.a
              , r = 0
              , i = 0
              , n = this.d * t.d
              , a = this.tx * t.a + t.tx
              , s = this.ty * t.d + t.ty;
            return (0 !== this.b || 0 !== this.c) && (e += this.b * t.c,
            r += this.b * t.d,
            i += this.c * t.a,
            n += this.c * t.b),
            (0 !== t.b || 0 !== t.c) && (r += this.a * t.b,
            i += this.d * t.c,
            a += this.ty * t.c,
            s += this.tx * t.b),
            this.a = e,
            this.b = r,
            this.c = i,
            this.d = n,
            this.tx = a,
            this.ty = s,
            this
        }
        ,
        t.prototype.invert = function() {
            var t = this.a
              , e = this.b
              , r = this.c
              , i = this.d
              , n = this.tx
              , a = this.ty;
            if (0 === e && 0 === r)
                return this.b = this.c = 0,
                0 === t || 0 === i ? this.a = this.b = this.tx = this.ty = 0 : (t = this.a = 1 / t,
                i = this.d = 1 / i,
                this.tx = -t * n,
                this.ty = -i * a),
                this;
            var s = t * i - e * r;
            if (0 === s)
                return this.a = this.d = 1,
                this.b = this.c = 0,
                this.tx = this.ty = 0,
                this;
            s = 1 / s;
            var o = this.a = i * s;
            return e = this.b = -e * s,
            r = this.c = -r * s,
            i = this.d = t * s,
            this.tx = -(o * n + r * a),
            this.ty = -(e * n + i * a),
            this
        }
        ,
        t.prototype.transformPoint = function(t, e, r, i) {
            void 0 === i && (i = !1),
            r.x = this.a * t + this.c * e,
            r.y = this.b * t + this.d * e,
            i || (r.x += this.tx,
            r.y += this.ty)
        }
        ,
        t.prototype.transformRectangle = function(t, e) {
            void 0 === e && (e = !1);
            var r = this.a
              , i = this.b
              , n = this.c
              , a = this.d
              , s = e ? 0 : this.tx
              , o = e ? 0 : this.ty
              , l = t.x
              , h = t.y
              , u = l + t.width
              , c = h + t.height
              , f = r * l + n * h + s
              , d = i * l + a * h + o
              , p = r * u + n * h + s
              , _ = i * u + a * h + o
              , m = r * u + n * c + s
              , g = i * u + a * c + o
              , y = r * l + n * c + s
              , v = i * l + a * c + o
              , b = 0;
            f > p && (b = f,
            f = p,
            p = b),
            m > y && (b = m,
            m = y,
            y = b),
            t.x = Math.floor(m > f ? f : m),
            t.width = Math.ceil((p > y ? p : y) - t.x),
            d > _ && (b = d,
            d = _,
            _ = b),
            g > v && (b = g,
            g = v,
            v = b),
            t.y = Math.floor(g > d ? d : g),
            t.height = Math.ceil((_ > v ? _ : v) - t.y)
        }
        ,
        t
    }();
    t.Matrix = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t, e, r, i, n, a) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 1),
            void 0 === a && (a = 1),
            this.x = t,
            this.y = e,
            this.skew = r,
            this.rotation = i,
            this.scaleX = n,
            this.scaleY = a
        }
        return t.normalizeRadian = function(t) {
            return t = (t + Math.PI) % (2 * Math.PI),
            t += t > 0 ? -Math.PI : Math.PI
        }
        ,
        t.prototype.toString = function() {
            return "[object dragonBones.Transform] x:" + this.x + " y:" + this.y + " skewX:" + 180 * this.skew / Math.PI + " skewY:" + 180 * this.rotation / Math.PI + " scaleX:" + this.scaleX + " scaleY:" + this.scaleY
        }
        ,
        t.prototype.copyFrom = function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.skew = t.skew,
            this.rotation = t.rotation,
            this.scaleX = t.scaleX,
            this.scaleY = t.scaleY,
            this
        }
        ,
        t.prototype.identity = function() {
            return this.x = this.y = 0,
            this.skew = this.rotation = 0,
            this.scaleX = this.scaleY = 1,
            this
        }
        ,
        t.prototype.add = function(t) {
            return this.x += t.x,
            this.y += t.y,
            this.skew += t.skew,
            this.rotation += t.rotation,
            this.scaleX *= t.scaleX,
            this.scaleY *= t.scaleY,
            this
        }
        ,
        t.prototype.minus = function(t) {
            return this.x -= t.x,
            this.y -= t.y,
            this.skew -= t.skew,
            this.rotation -= t.rotation,
            this.scaleX /= t.scaleX,
            this.scaleY /= t.scaleY,
            this
        }
        ,
        t.prototype.fromMatrix = function(e) {
            var r = this.scaleX
              , i = this.scaleY
              , n = t.PI_Q;
            this.x = e.tx,
            this.y = e.ty,
            this.rotation = Math.atan(e.b / e.a);
            var a = Math.atan(-e.c / e.d);
            return this.scaleX = this.rotation > -n && this.rotation < n ? e.a / Math.cos(this.rotation) : e.b / Math.sin(this.rotation),
            this.scaleY = a > -n && n > a ? e.d / Math.cos(a) : -e.c / Math.sin(a),
            r >= 0 && this.scaleX < 0 && (this.scaleX = -this.scaleX,
            this.rotation = this.rotation - Math.PI),
            i >= 0 && this.scaleY < 0 && (this.scaleY = -this.scaleY,
            a -= Math.PI),
            this.skew = a - this.rotation,
            this
        }
        ,
        t.prototype.toMatrix = function(t) {
            return 0 === this.rotation ? (t.a = 1,
            t.b = 0) : (t.a = Math.cos(this.rotation),
            t.b = Math.sin(this.rotation)),
            0 === this.skew ? (t.c = -t.b,
            t.d = t.a) : (t.c = -Math.sin(this.skew + this.rotation),
            t.d = Math.cos(this.skew + this.rotation)),
            1 !== this.scaleX && (t.a *= this.scaleX,
            t.b *= this.scaleX),
            1 !== this.scaleY && (t.c *= this.scaleY,
            t.d *= this.scaleY),
            t.tx = this.x,
            t.ty = this.y,
            this
        }
        ,
        t.PI = Math.PI,
        t.PI_D = 2 * Math.PI,
        t.PI_H = Math.PI / 2,
        t.PI_Q = Math.PI / 4,
        t.RAD_DEG = 180 / Math.PI,
        t.DEG_RAD = Math.PI / 180,
        t
    }();
    t.Transform = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t, e, r, i, n, a, s, o) {
            void 0 === t && (t = 1),
            void 0 === e && (e = 1),
            void 0 === r && (r = 1),
            void 0 === i && (i = 1),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            void 0 === o && (o = 0),
            this.alphaMultiplier = t,
            this.redMultiplier = e,
            this.greenMultiplier = r,
            this.blueMultiplier = i,
            this.alphaOffset = n,
            this.redOffset = a,
            this.greenOffset = s,
            this.blueOffset = o
        }
        return t.prototype.copyFrom = function(t) {
            this.alphaMultiplier = t.alphaMultiplier,
            this.redMultiplier = t.redMultiplier,
            this.greenMultiplier = t.greenMultiplier,
            this.blueMultiplier = t.blueMultiplier,
            this.alphaOffset = t.alphaOffset,
            this.redOffset = t.redOffset,
            this.greenOffset = t.greenOffset,
            this.blueOffset = t.blueOffset
        }
        ,
        t.prototype.identity = function() {
            this.alphaMultiplier = this.redMultiplier = this.greenMultiplier = this.blueMultiplier = 1,
            this.alphaOffset = this.redOffset = this.greenOffset = this.blueOffset = 0
        }
        ,
        t
    }();
    t.ColorTransform = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this.x = t,
            this.y = e
        }
        return t.prototype.copyFrom = function(t) {
            this.x = t.x,
            this.y = t.y
        }
        ,
        t.prototype.clear = function() {
            this.x = this.y = 0
        }
        ,
        t
    }();
    t.Point = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t, e, r, i) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            this.x = t,
            this.y = e,
            this.width = r,
            this.height = i
        }
        return t.prototype.copyFrom = function(t) {
            this.x = t.x,
            this.y = t.y,
            this.width = t.width,
            this.height = t.height
        }
        ,
        t.prototype.clear = function() {
            this.x = this.y = 0,
            this.width = this.height = 0
        }
        ,
        t
    }();
    t.Rectangle = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.ints = [],
            e.floats = [],
            e.strings = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.UserData]"
        }
        ,
        e.prototype._onClear = function() {
            this.ints.length = 0,
            this.floats.length = 0,
            this.strings.length = 0
        }
        ,
        e.prototype.addInt = function(t) {
            this.ints.push(t)
        }
        ,
        e.prototype.addFloat = function(t) {
            this.floats.push(t)
        }
        ,
        e.prototype.addString = function(t) {
            this.strings.push(t)
        }
        ,
        e.prototype.getInt = function(t) {
            return void 0 === t && (t = 0),
            t >= 0 && t < this.ints.length ? this.ints[t] : 0
        }
        ,
        e.prototype.getFloat = function(t) {
            return void 0 === t && (t = 0),
            t >= 0 && t < this.floats.length ? this.floats[t] : 0
        }
        ,
        e.prototype.getString = function(t) {
            return void 0 === t && (t = 0),
            t >= 0 && t < this.strings.length ? this.strings[t] : ""
        }
        ,
        e
    }(t.BaseObject);
    t.UserData = e;
    var r = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.data = null,
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.ActionData]"
        }
        ,
        e.prototype._onClear = function() {
            null !== this.data && this.data.returnToPool(),
            this.type = 0,
            this.name = "",
            this.bone = null,
            this.slot = null,
            this.data = null
        }
        ,
        e
    }(t.BaseObject);
    t.ActionData = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.frameIndices = [],
            e.cachedFrames = [],
            e.armatureNames = [],
            e.armatures = {},
            e.userData = null,
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.DragonBonesData]"
        }
        ,
        e.prototype._onClear = function() {
            for (var t in this.armatures)
                this.armatures[t].returnToPool(),
                delete this.armatures[t];
            null !== this.userData && this.userData.returnToPool(),
            this.autoSearch = !1,
            this.frameRate = 0,
            this.version = "",
            this.name = "",
            this.stage = null,
            this.frameIndices.length = 0,
            this.cachedFrames.length = 0,
            this.armatureNames.length = 0,
            this.binary = null,
            this.intArray = null,
            this.floatArray = null,
            this.frameIntArray = null,
            this.frameFloatArray = null,
            this.frameArray = null,
            this.timelineArray = null,
            this.userData = null
        }
        ,
        e.prototype.addArmature = function(t) {
            return t.name in this.armatures ? void console.warn("Same armature: " + t.name) : (t.parent = this,
            this.armatures[t.name] = t,
            void this.armatureNames.push(t.name))
        }
        ,
        e.prototype.getArmature = function(t) {
            return t in this.armatures ? this.armatures[t] : null
        }
        ,
        e.prototype.dispose = function() {
            console.warn("已废弃"),
            this.returnToPool()
        }
        ,
        e
    }(t.BaseObject);
    t.DragonBonesData = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.aabb = new t.Rectangle,
            r.animationNames = [],
            r.sortedBones = [],
            r.sortedSlots = [],
            r.defaultActions = [],
            r.actions = [],
            r.bones = {},
            r.slots = {},
            r.constraints = {},
            r.skins = {},
            r.animations = {},
            r.canvas = null,
            r.userData = null,
            r
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.ArmatureData]"
        }
        ,
        r.prototype._onClear = function() {
            for (var t = 0, e = this.defaultActions; t < e.length; t++) {
                var r = e[t];
                r.returnToPool()
            }
            for (var i = 0, n = this.actions; i < n.length; i++) {
                var r = n[i];
                r.returnToPool()
            }
            for (var a in this.bones)
                this.bones[a].returnToPool(),
                delete this.bones[a];
            for (var a in this.slots)
                this.slots[a].returnToPool(),
                delete this.slots[a];
            for (var a in this.constraints)
                this.constraints[a].returnToPool(),
                delete this.constraints[a];
            for (var a in this.skins)
                this.skins[a].returnToPool(),
                delete this.skins[a];
            for (var a in this.animations)
                this.animations[a].returnToPool(),
                delete this.animations[a];
            null !== this.canvas && this.canvas.returnToPool(),
            null !== this.userData && this.userData.returnToPool(),
            this.type = 0,
            this.frameRate = 0,
            this.cacheFrameRate = 0,
            this.scale = 1,
            this.name = "",
            this.aabb.clear(),
            this.animationNames.length = 0,
            this.sortedBones.length = 0,
            this.sortedSlots.length = 0,
            this.defaultActions.length = 0,
            this.actions.length = 0,
            this.defaultSkin = null,
            this.defaultAnimation = null,
            this.canvas = null,
            this.userData = null,
            this.parent = null
        }
        ,
        r.prototype.sortBones = function() {
            var t = this.sortedBones.length;
            if (!(0 >= t)) {
                var e = this.sortedBones.concat()
                  , r = 0
                  , i = 0;
                for (this.sortedBones.length = 0; t > i; ) {
                    var n = e[r++];
                    if (r >= t && (r = 0),
                    !(this.sortedBones.indexOf(n) >= 0)) {
                        var a = !1;
                        for (var s in this.constraints) {
                            var o = this.constraints[s];
                            if (o.root === n && this.sortedBones.indexOf(o.target) < 0) {
                                a = !0;
                                break
                            }
                        }
                        a || null !== n.parent && this.sortedBones.indexOf(n.parent) < 0 || (this.sortedBones.push(n),
                        i++)
                    }
                }
            }
        }
        ,
        r.prototype.cacheFrames = function(t) {
            if (!(this.cacheFrameRate > 0)) {
                this.cacheFrameRate = t;
                for (var e in this.animations)
                    this.animations[e].cacheFrames(this.cacheFrameRate)
            }
        }
        ,
        r.prototype.setCacheFrame = function(t, e) {
            var r = this.parent.cachedFrames
              , i = r.length;
            return r.length += 10,
            r[i] = t.a,
            r[i + 1] = t.b,
            r[i + 2] = t.c,
            r[i + 3] = t.d,
            r[i + 4] = t.tx,
            r[i + 5] = t.ty,
            r[i + 6] = e.rotation,
            r[i + 7] = e.skew,
            r[i + 8] = e.scaleX,
            r[i + 9] = e.scaleY,
            i
        }
        ,
        r.prototype.getCacheFrame = function(t, e, r) {
            var i = this.parent.cachedFrames;
            t.a = i[r],
            t.b = i[r + 1],
            t.c = i[r + 2],
            t.d = i[r + 3],
            t.tx = i[r + 4],
            t.ty = i[r + 5],
            e.rotation = i[r + 6],
            e.skew = i[r + 7],
            e.scaleX = i[r + 8],
            e.scaleY = i[r + 9],
            e.x = t.tx,
            e.y = t.ty
        }
        ,
        r.prototype.addBone = function(t) {
            return t.name in this.bones ? void console.warn("Same bone: " + t.name) : (this.bones[t.name] = t,
            void this.sortedBones.push(t))
        }
        ,
        r.prototype.addSlot = function(t) {
            return t.name in this.slots ? void console.warn("Same slot: " + t.name) : (this.slots[t.name] = t,
            void this.sortedSlots.push(t))
        }
        ,
        r.prototype.addConstraint = function(t) {
            return t.name in this.constraints ? void console.warn("Same constraint: " + t.name) : void (this.constraints[t.name] = t)
        }
        ,
        r.prototype.addSkin = function(t) {
            return t.name in this.skins ? void console.warn("Same skin: " + t.name) : (t.parent = this,
            this.skins[t.name] = t,
            null === this.defaultSkin && (this.defaultSkin = t),
            void ("default" === t.name && (this.defaultSkin = t)))
        }
        ,
        r.prototype.addAnimation = function(t) {
            return t.name in this.animations ? void console.warn("Same animation: " + t.name) : (t.parent = this,
            this.animations[t.name] = t,
            this.animationNames.push(t.name),
            void (null === this.defaultAnimation && (this.defaultAnimation = t)))
        }
        ,
        r.prototype.addAction = function(t, e) {
            e ? this.defaultActions.push(t) : this.actions.push(t)
        }
        ,
        r.prototype.getBone = function(t) {
            return t in this.bones ? this.bones[t] : null
        }
        ,
        r.prototype.getSlot = function(t) {
            return t in this.slots ? this.slots[t] : null
        }
        ,
        r.prototype.getConstraint = function(t) {
            return t in this.constraints ? this.constraints[t] : null
        }
        ,
        r.prototype.getSkin = function(t) {
            return t in this.skins ? this.skins[t] : null
        }
        ,
        r.prototype.getMesh = function(t, e, r) {
            var i = this.getSkin(t);
            return null === i ? null : i.getDisplay(e, r)
        }
        ,
        r.prototype.getAnimation = function(t) {
            return t in this.animations ? this.animations[t] : null
        }
        ,
        r
    }(t.BaseObject);
    t.ArmatureData = e;
    var r = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.transform = new t.Transform,
            r.userData = null,
            r
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.BoneData]"
        }
        ,
        r.prototype._onClear = function() {
            null !== this.userData && this.userData.returnToPool(),
            this.inheritTranslation = !1,
            this.inheritRotation = !1,
            this.inheritScale = !1,
            this.inheritReflection = !1,
            this.type = 0,
            this.length = 0,
            this.name = "",
            this.transform.identity(),
            this.userData = null,
            this.parent = null
        }
        ,
        r
    }(t.BaseObject);
    t.BoneData = r;
    var i = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.SurfaceData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 1,
            this.segmentX = 0,
            this.segmentY = 0,
            this.vertices.length = 0
        }
        ,
        e
    }(r);
    t.SurfaceData = i;
    var n = function(e) {
        function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.color = null,
            t.userData = null,
            t
        }
        return __extends(r, e),
        r.createColor = function() {
            return new t.ColorTransform
        }
        ,
        r.toString = function() {
            return "[class dragonBones.SlotData]"
        }
        ,
        r.prototype._onClear = function() {
            null !== this.userData && this.userData.returnToPool(),
            this.blendMode = 0,
            this.displayIndex = 0,
            this.zOrder = 0,
            this.name = "",
            this.color = null,
            this.userData = null,
            this.parent = null
        }
        ,
        r.DEFAULT_COLOR = new t.ColorTransform,
        r
    }(t.BaseObject);
    t.SlotData = n
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.CanvasData]"
        }
        ,
        e.prototype._onClear = function() {
            this.hasBackground = !1,
            this.color = 0,
            this.x = 0,
            this.y = 0,
            this.width = 0,
            this.height = 0
        }
        ,
        e
    }(t.BaseObject);
    t.CanvasData = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.displays = {},
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.SkinData]"
        }
        ,
        e.prototype._onClear = function() {
            for (var t in this.displays) {
                for (var e = this.displays[t], r = 0, i = e; r < i.length; r++) {
                    var n = i[r];
                    null !== n && n.returnToPool()
                }
                delete this.displays[t]
            }
            this.name = "",
            this.parent = null
        }
        ,
        e.prototype.addDisplay = function(t, e) {
            t in this.displays || (this.displays[t] = []),
            null !== e && (e.parent = this);
            var r = this.displays[t];
            r.push(e)
        }
        ,
        e.prototype.getDisplay = function(t, e) {
            var r = this.getDisplays(t);
            if (null !== r)
                for (var i = 0, n = r; i < n.length; i++) {
                    var a = n[i];
                    if (null !== a && a.name === e)
                        return a
                }
            return null
        }
        ,
        e.prototype.getDisplays = function(t) {
            return t in this.displays ? this.displays[t] : null
        }
        ,
        e
    }(t.BaseObject);
    t.SkinData = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            this.order = 0,
            this.name = "",
            this.type = 0,
            this.target = null,
            this.root = null,
            this.bone = null
        }
        ,
        e
    }(t.BaseObject);
    t.ConstraintData = e;
    var r = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.IKConstraintData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.scaleEnabled = !1,
            this.bendPositive = !1,
            this.weight = 1
        }
        ,
        e
    }(e);
    t.IKConstraintData = r;
    var i = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.bones = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.PathConstraintData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.pathSlot = null,
            this.pathDisplayData = null,
            this.bones.length = 0,
            this.positionMode = 0,
            this.spacingMode = 1,
            this.rotateMode = 1,
            this.position = 0,
            this.spacing = 0,
            this.rotateOffset = 0,
            this.rotateMix = 0,
            this.translateMix = 0
        }
        ,
        e.prototype.AddBone = function(t) {
            this.bones.push(t)
        }
        ,
        e
    }(e);
    t.PathConstraintData = i
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t() {
            this.weight = null
        }
        return t.prototype.clear = function() {
            this.isShared || null === this.weight || this.weight.returnToPool(),
            this.isShared = !1,
            this.inheritDeform = !1,
            this.offset = 0,
            this.data = null,
            this.weight = null
        }
        ,
        t.prototype.shareFrom = function(t) {
            this.isShared = !0,
            this.offset = t.offset,
            this.weight = t.weight
        }
        ,
        t
    }();
    t.VerticesData = e;
    var r = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.transform = new t.Transform,
            r
        }
        return __extends(r, e),
        r.prototype._onClear = function() {
            this.name = "",
            this.path = "",
            this.transform.identity(),
            this.parent = null
        }
        ,
        r
    }(t.BaseObject);
    t.DisplayData = r;
    var i = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.pivot = new t.Point,
            r
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.ImageDisplayData]"
        }
        ,
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this.type = 0,
            this.pivot.clear(),
            this.texture = null
        }
        ,
        r
    }(r);
    t.ImageDisplayData = i;
    var n = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.actions = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.ArmatureDisplayData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this);
            for (var e = 0, r = this.actions; e < r.length; e++) {
                var i = r[e];
                i.returnToPool()
            }
            this.type = 1,
            this.inheritAnimation = !1,
            this.actions.length = 0,
            this.armature = null
        }
        ,
        e.prototype.addAction = function(t) {
            this.actions.push(t)
        }
        ,
        e
    }(r);
    t.ArmatureDisplayData = n;
    var a = function(t) {
        function r() {
            var r = null !== t && t.apply(this, arguments) || this;
            return r.vertices = new e,
            r
        }
        return __extends(r, t),
        r.toString = function() {
            return "[class dragonBones.MeshDisplayData]"
        }
        ,
        r.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 2,
            this.vertices.clear(),
            this.texture = null
        }
        ,
        r
    }(r);
    t.MeshDisplayData = a;
    var s = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.boundingBox = null,
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.BoundingBoxDisplayData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            null !== this.boundingBox && this.boundingBox.returnToPool(),
            this.type = 3,
            this.boundingBox = null
        }
        ,
        e
    }(r);
    t.BoundingBoxDisplayData = s;
    var o = function(t) {
        function r() {
            var r = null !== t && t.apply(this, arguments) || this;
            return r.vertices = new e,
            r.curveLengths = [],
            r
        }
        return __extends(r, t),
        r.toString = function() {
            return "[class dragonBones.PathDisplayData]"
        }
        ,
        r.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 4,
            this.closed = !1,
            this.constantSpeed = !1,
            this.vertices.clear(),
            this.curveLengths.length = 0
        }
        ,
        r
    }(r);
    t.PathDisplayData = o;
    var l = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.bones = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.WeightData]"
        }
        ,
        e.prototype._onClear = function() {
            this.count = 0,
            this.offset = 0,
            this.bones.length = 0
        }
        ,
        e.prototype.addBone = function(t) {
            this.bones.push(t)
        }
        ,
        e
    }(t.BaseObject);
    t.WeightData = l
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            this.color = 0,
            this.width = 0,
            this.height = 0
        }
        ,
        e
    }(t.BaseObject);
    t.BoundingBoxData = e;
    var r = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.RectangleBoundingBoxData]"
        }
        ,
        e._computeOutCode = function(t, e, r, i, n, a) {
            var s = 0;
            return r > t ? s |= 1 : t > n && (s |= 2),
            i > e ? s |= 4 : e > a && (s |= 8),
            s
        }
        ,
        e.rectangleIntersectsSegment = function(t, r, i, n, a, s, o, l, h, u, c) {
            void 0 === h && (h = null),
            void 0 === u && (u = null),
            void 0 === c && (c = null);
            var f = t > a && o > t && r > s && l > r
              , d = i > a && o > i && n > s && l > n;
            if (f && d)
                return -1;
            for (var p = 0, _ = e._computeOutCode(t, r, a, s, o, l), m = e._computeOutCode(i, n, a, s, o, l); ; ) {
                if (0 === (_ | m)) {
                    p = 2;
                    break
                }
                if (0 !== (_ & m))
                    break;
                var g = 0
                  , y = 0
                  , v = 0
                  , b = 0 !== _ ? _ : m;
                0 !== (4 & b) ? (g = t + (i - t) * (s - r) / (n - r),
                y = s,
                null !== c && (v = .5 * -Math.PI)) : 0 !== (8 & b) ? (g = t + (i - t) * (l - r) / (n - r),
                y = l,
                null !== c && (v = .5 * Math.PI)) : 0 !== (2 & b) ? (y = r + (n - r) * (o - t) / (i - t),
                g = o,
                null !== c && (v = 0)) : 0 !== (1 & b) && (y = r + (n - r) * (a - t) / (i - t),
                g = a,
                null !== c && (v = Math.PI)),
                b === _ ? (t = g,
                r = y,
                _ = e._computeOutCode(t, r, a, s, o, l),
                null !== c && (c.x = v)) : (i = g,
                n = y,
                m = e._computeOutCode(i, n, a, s, o, l),
                null !== c && (c.y = v))
            }
            return p && (f ? (p = 2,
            null !== h && (h.x = i,
            h.y = n),
            null !== u && (u.x = i,
            u.y = i),
            null !== c && (c.x = c.y + Math.PI)) : d ? (p = 1,
            null !== h && (h.x = t,
            h.y = r),
            null !== u && (u.x = t,
            u.y = r),
            null !== c && (c.y = c.x + Math.PI)) : (p = 3,
            null !== h && (h.x = t,
            h.y = r),
            null !== u && (u.x = i,
            u.y = n))),
            p
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 0
        }
        ,
        e.prototype.containsPoint = function(t, e) {
            var r = .5 * this.width;
            if (t >= -r && r >= t) {
                var i = .5 * this.height;
                if (e >= -i && i >= e)
                    return !0
            }
            return !1
        }
        ,
        e.prototype.intersectsSegment = function(t, r, i, n, a, s, o) {
            void 0 === a && (a = null),
            void 0 === s && (s = null),
            void 0 === o && (o = null);
            var l = .5 * this.width
              , h = .5 * this.height
              , u = e.rectangleIntersectsSegment(t, r, i, n, -l, -h, l, h, a, s, o);
            return u
        }
        ,
        e
    }(e);
    t.RectangleBoundingBoxData = r;
    var i = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.EllipseData]"
        }
        ,
        e.ellipseIntersectsSegment = function(t, e, r, i, n, a, s, o, l, h, u) {
            void 0 === l && (l = null),
            void 0 === h && (h = null),
            void 0 === u && (u = null);
            var c = s / o
              , f = c * c;
            e *= c,
            i *= c;
            var d = r - t
              , p = i - e
              , _ = Math.sqrt(d * d + p * p)
              , m = d / _
              , g = p / _
              , y = (n - t) * m + (a - e) * g
              , v = y * y
              , b = t * t + e * e
              , w = s * s
              , T = w - b + v
              , D = 0;
            if (T >= 0) {
                var S = Math.sqrt(T)
                  , E = y - S
                  , A = y + S
                  , x = 0 > E ? -1 : _ >= E ? 0 : 1
                  , P = 0 > A ? -1 : _ >= A ? 0 : 1
                  , C = x * P;
                if (0 > C)
                    return -1;
                0 === C && (-1 === x ? (D = 2,
                r = t + A * m,
                i = (e + A * g) / c,
                null !== l && (l.x = r,
                l.y = i),
                null !== h && (h.x = r,
                h.y = i),
                null !== u && (u.x = Math.atan2(i / w * f, r / w),
                u.y = u.x + Math.PI)) : 1 === P ? (D = 1,
                t += E * m,
                e = (e + E * g) / c,
                null !== l && (l.x = t,
                l.y = e),
                null !== h && (h.x = t,
                h.y = e),
                null !== u && (u.x = Math.atan2(e / w * f, t / w),
                u.y = u.x + Math.PI)) : (D = 3,
                null !== l && (l.x = t + E * m,
                l.y = (e + E * g) / c,
                null !== u && (u.x = Math.atan2(l.y / w * f, l.x / w))),
                null !== h && (h.x = t + A * m,
                h.y = (e + A * g) / c,
                null !== u && (u.y = Math.atan2(h.y / w * f, h.x / w)))))
            }
            return D
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 1
        }
        ,
        e.prototype.containsPoint = function(t, e) {
            var r = .5 * this.width;
            if (t >= -r && r >= t) {
                var i = .5 * this.height;
                if (e >= -i && i >= e)
                    return e *= r / i,
                    Math.sqrt(t * t + e * e) <= r
            }
            return !1
        }
        ,
        e.prototype.intersectsSegment = function(t, r, i, n, a, s, o) {
            void 0 === a && (a = null),
            void 0 === s && (s = null),
            void 0 === o && (o = null);
            var l = e.ellipseIntersectsSegment(t, r, i, n, 0, 0, .5 * this.width, .5 * this.height, a, s, o);
            return l
        }
        ,
        e
    }(e);
    t.EllipseBoundingBoxData = i;
    var n = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.PolygonBoundingBoxData]"
        }
        ,
        e.polygonIntersectsSegment = function(t, e, r, i, n, a, s, o) {
            void 0 === a && (a = null),
            void 0 === s && (s = null),
            void 0 === o && (o = null),
            t === r && (t = r + 1e-6),
            e === i && (e = i + 1e-6);
            for (var l = n.length, h = t - r, u = e - i, c = t * i - e * r, f = 0, d = n[l - 2], p = n[l - 1], _ = 0, m = 0, g = 0, y = 0, v = 0, b = 0, w = 0; l > w; w += 2) {
                var T = n[w]
                  , D = n[w + 1];
                d === T && (d = T + 1e-4),
                p === D && (p = D + 1e-4);
                var S = d - T
                  , E = p - D
                  , A = d * D - p * T
                  , x = h * E - u * S
                  , P = (c * S - h * A) / x;
                if ((P >= d && T >= P || P >= T && d >= P) && (0 === h || P >= t && r >= P || P >= r && t >= P)) {
                    var C = (c * E - u * A) / x;
                    if ((C >= p && D >= C || C >= D && p >= C) && (0 === u || C >= e && i >= C || C >= i && e >= C)) {
                        if (null === s) {
                            g = P,
                            y = C,
                            v = P,
                            b = C,
                            f++,
                            null !== o && (o.x = Math.atan2(D - p, T - d) - .5 * Math.PI,
                            o.y = o.x);
                            break
                        }
                        var O = P - t;
                        0 > O && (O = -O),
                        0 === f ? (_ = O,
                        m = O,
                        g = P,
                        y = C,
                        v = P,
                        b = C,
                        null !== o && (o.x = Math.atan2(D - p, T - d) - .5 * Math.PI,
                        o.y = o.x)) : (_ > O && (_ = O,
                        g = P,
                        y = C,
                        null !== o && (o.x = Math.atan2(D - p, T - d) - .5 * Math.PI)),
                        O > m && (m = O,
                        v = P,
                        b = C,
                        null !== o && (o.y = Math.atan2(D - p, T - d) - .5 * Math.PI))),
                        f++
                    }
                }
                d = T,
                p = D
            }
            return 1 === f ? (null !== a && (a.x = g,
            a.y = y),
            null !== s && (s.x = g,
            s.y = y),
            null !== o && (o.y = o.x + Math.PI)) : f > 1 && (f++,
            null !== a && (a.x = g,
            a.y = y),
            null !== s && (s.x = v,
            s.y = b)),
            f
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.type = 2,
            this.x = 0,
            this.y = 0,
            this.vertices.length = 0
        }
        ,
        e.prototype.containsPoint = function(t, e) {
            var r = !1;
            if (t >= this.x && t <= this.width && e >= this.y && e <= this.height)
                for (var i = 0, n = this.vertices.length, a = n - 2; n > i; i += 2) {
                    var s = this.vertices[a + 1]
                      , o = this.vertices[i + 1];
                    if (e > o && s >= e || e > s && o >= e) {
                        var l = this.vertices[a]
                          , h = this.vertices[i];
                        t > (e - o) * (l - h) / (s - o) + h && (r = !r)
                    }
                    a = i
                }
            return r
        }
        ,
        e.prototype.intersectsSegment = function(t, i, n, a, s, o, l) {
            void 0 === s && (s = null),
            void 0 === o && (o = null),
            void 0 === l && (l = null);
            var h = 0;
            return 0 !== r.rectangleIntersectsSegment(t, i, n, a, this.x, this.y, this.x + this.width, this.y + this.height, null, null, null) && (h = e.polygonIntersectsSegment(t, i, n, a, this.vertices, s, o, l)),
            h
        }
        ,
        e
    }(e);
    t.PolygonBoundingBoxData = n
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.cachedFrames = [],
            e.boneTimelines = {},
            e.surfaceTimelines = {},
            e.slotTimelines = {},
            e.constraintTimelines = {},
            e.animationTimelines = {},
            e.boneCachedFrameIndices = {},
            e.slotCachedFrameIndices = {},
            e.actionTimeline = null,
            e.zOrderTimeline = null,
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.AnimationData]"
        }
        ,
        e.prototype._onClear = function() {
            for (var t in this.boneTimelines) {
                for (var e = 0, r = this.boneTimelines[t]; e < r.length; e++) {
                    var i = r[e];
                    i.returnToPool()
                }
                delete this.boneTimelines[t]
            }
            for (var t in this.surfaceTimelines) {
                for (var n = 0, a = this.surfaceTimelines[t]; n < a.length; n++) {
                    var i = a[n];
                    i.returnToPool()
                }
                delete this.surfaceTimelines[t]
            }
            for (var t in this.slotTimelines) {
                for (var s = 0, o = this.slotTimelines[t]; s < o.length; s++) {
                    var i = o[s];
                    i.returnToPool()
                }
                delete this.slotTimelines[t]
            }
            for (var t in this.constraintTimelines) {
                for (var l = 0, h = this.constraintTimelines[t]; l < h.length; l++) {
                    var i = h[l];
                    i.returnToPool()
                }
                delete this.constraintTimelines[t]
            }
            for (var t in this.animationTimelines) {
                for (var u = 0, c = this.animationTimelines[t]; u < c.length; u++) {
                    var i = c[u];
                    i.returnToPool()
                }
                delete this.animationTimelines[t]
            }
            for (var t in this.boneCachedFrameIndices)
                delete this.boneCachedFrameIndices[t];
            for (var t in this.slotCachedFrameIndices)
                delete this.slotCachedFrameIndices[t];
            null !== this.actionTimeline && this.actionTimeline.returnToPool(),
            null !== this.zOrderTimeline && this.zOrderTimeline.returnToPool(),
            this.frameIntOffset = 0,
            this.frameFloatOffset = 0,
            this.frameOffset = 0,
            this.frameCount = 0,
            this.playTimes = 0,
            this.duration = 0,
            this.scale = 1,
            this.fadeInTime = 0,
            this.cacheFrameRate = 0,
            this.name = "",
            this.cachedFrames.length = 0,
            this.actionTimeline = null,
            this.zOrderTimeline = null,
            this.parent = null
        }
        ,
        e.prototype.cacheFrames = function(t) {
            if (!(this.cacheFrameRate > 0)) {
                this.cacheFrameRate = Math.max(Math.ceil(t * this.scale), 1);
                var e = Math.ceil(this.cacheFrameRate * this.duration) + 1;
                this.cachedFrames.length = e;
                for (var r = 0, i = this.cacheFrames.length; i > r; ++r)
                    this.cachedFrames[r] = !1;
                for (var n = 0, a = this.parent.sortedBones; n < a.length; n++) {
                    for (var s = a[n], o = new Array(e), r = 0, i = o.length; i > r; ++r)
                        o[r] = -1;
                    this.boneCachedFrameIndices[s.name] = o
                }
                for (var l = 0, h = this.parent.sortedSlots; l < h.length; l++) {
                    for (var u = h[l], o = new Array(e), r = 0, i = o.length; i > r; ++r)
                        o[r] = -1;
                    this.slotCachedFrameIndices[u.name] = o
                }
            }
        }
        ,
        e.prototype.addBoneTimeline = function(t, e) {
            var r = t.name in this.boneTimelines ? this.boneTimelines[t.name] : this.boneTimelines[t.name] = [];
            r.indexOf(e) < 0 && r.push(e)
        }
        ,
        e.prototype.addSurfaceTimeline = function(t, e) {
            var r = t.name in this.surfaceTimelines ? this.surfaceTimelines[t.name] : this.surfaceTimelines[t.name] = [];
            r.indexOf(e) < 0 && r.push(e)
        }
        ,
        e.prototype.addSlotTimeline = function(t, e) {
            var r = t.name in this.slotTimelines ? this.slotTimelines[t.name] : this.slotTimelines[t.name] = [];
            r.indexOf(e) < 0 && r.push(e)
        }
        ,
        e.prototype.addConstraintTimeline = function(t, e) {
            var r = t.name in this.constraintTimelines ? this.constraintTimelines[t.name] : this.constraintTimelines[t.name] = [];
            r.indexOf(e) < 0 && r.push(e)
        }
        ,
        e.prototype.addAnimationTimeline = function(t, e) {
            var r = t in this.animationTimelines ? this.animationTimelines[t] : this.animationTimelines[t] = [];
            r.indexOf(e) < 0 && r.push(e)
        }
        ,
        e.prototype.getBoneTimelines = function(t) {
            return t in this.boneTimelines ? this.boneTimelines[t] : null
        }
        ,
        e.prototype.getSurfaceTimelines = function(t) {
            return t in this.surfaceTimelines ? this.surfaceTimelines[t] : null
        }
        ,
        e.prototype.getSlotTimelines = function(t) {
            return t in this.slotTimelines ? this.slotTimelines[t] : null
        }
        ,
        e.prototype.getConstraintTimelines = function(t) {
            return t in this.constraintTimelines ? this.constraintTimelines[t] : null
        }
        ,
        e.prototype.getAnimationTimelines = function(t) {
            return t in this.animationTimelines ? this.animationTimelines[t] : null
        }
        ,
        e.prototype.getBoneCachedFrameIndices = function(t) {
            return t in this.boneCachedFrameIndices ? this.boneCachedFrameIndices[t] : null
        }
        ,
        e.prototype.getSlotCachedFrameIndices = function(t) {
            return t in this.slotCachedFrameIndices ? this.slotCachedFrameIndices[t] : null
        }
        ,
        e
    }(t.BaseObject);
    t.AnimationData = e;
    var r = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.TimelineData]"
        }
        ,
        e.prototype._onClear = function() {
            this.type = 10,
            this.offset = 0,
            this.frameIndicesOffset = -1
        }
        ,
        e
    }(t.BaseObject);
    t.TimelineData = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.boneMask = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.AnimationConfig]"
        }
        ,
        e.prototype._onClear = function() {
            this.pauseFadeOut = !0,
            this.fadeOutMode = 4,
            this.fadeOutTweenType = 1,
            this.fadeOutTime = -1,
            this.actionEnabled = !0,
            this.additiveBlending = !1,
            this.displayControl = !0,
            this.pauseFadeIn = !0,
            this.resetToPose = !0,
            this.fadeInTweenType = 1,
            this.playTimes = -1,
            this.layer = 0,
            this.position = 0,
            this.duration = -1,
            this.timeScale = -100,
            this.weight = 1,
            this.fadeInTime = -1,
            this.autoFadeOutTime = -1,
            this.name = "",
            this.animation = "",
            this.group = "",
            this.boneMask.length = 0
        }
        ,
        e.prototype.clear = function() {
            this._onClear()
        }
        ,
        e.prototype.copyFrom = function(t) {
            this.pauseFadeOut = t.pauseFadeOut,
            this.fadeOutMode = t.fadeOutMode,
            this.autoFadeOutTime = t.autoFadeOutTime,
            this.fadeOutTweenType = t.fadeOutTweenType,
            this.actionEnabled = t.actionEnabled,
            this.additiveBlending = t.additiveBlending,
            this.displayControl = t.displayControl,
            this.pauseFadeIn = t.pauseFadeIn,
            this.resetToPose = t.resetToPose,
            this.playTimes = t.playTimes,
            this.layer = t.layer,
            this.position = t.position,
            this.duration = t.duration,
            this.timeScale = t.timeScale,
            this.fadeInTime = t.fadeInTime,
            this.fadeOutTime = t.fadeOutTime,
            this.fadeInTweenType = t.fadeInTweenType,
            this.weight = t.weight,
            this.name = t.name,
            this.animation = t.animation,
            this.group = t.group,
            this.boneMask.length = t.boneMask.length;
            for (var e = 0, r = this.boneMask.length; r > e; ++e)
                this.boneMask[e] = t.boneMask[e]
        }
        ,
        e.prototype.containsBoneMask = function(t) {
            return 0 === this.boneMask.length || this.boneMask.indexOf(t) >= 0
        }
        ,
        e.prototype.addBoneMask = function(t, e, r) {
            void 0 === r && (r = !0);
            var i = t.getBone(e);
            if (null !== i && (this.boneMask.indexOf(e) < 0 && this.boneMask.push(e),
            r))
                for (var n = 0, a = t.getBones(); n < a.length; n++) {
                    var s = a[n];
                    this.boneMask.indexOf(s.name) < 0 && i.contains(s) && this.boneMask.push(s.name)
                }
        }
        ,
        e.prototype.removeBoneMask = function(t, e, r) {
            void 0 === r && (r = !0);
            var i = this.boneMask.indexOf(e);
            if (i >= 0 && this.boneMask.splice(i, 1),
            r) {
                var n = t.getBone(e);
                if (null !== n)
                    if (this.boneMask.length > 0)
                        for (var a = 0, s = t.getBones(); a < s.length; a++) {
                            var o = s[a]
                              , l = this.boneMask.indexOf(o.name);
                            l >= 0 && n.contains(o) && this.boneMask.splice(l, 1)
                        }
                    else
                        for (var h = 0, u = t.getBones(); h < u.length; h++) {
                            var o = u[h];
                            o !== n && (n.contains(o) || this.boneMask.push(o.name))
                        }
            }
        }
        ,
        e
    }(t.BaseObject);
    t.AnimationConfig = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.textures = {},
            e
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            for (var t in this.textures)
                this.textures[t].returnToPool(),
                delete this.textures[t];
            this.autoSearch = !1,
            this.width = 0,
            this.height = 0,
            this.scale = 1,
            this.name = "",
            this.imagePath = ""
        }
        ,
        e.prototype.copyFrom = function(t) {
            this.autoSearch = t.autoSearch,
            this.scale = t.scale,
            this.width = t.width,
            this.height = t.height,
            this.name = t.name,
            this.imagePath = t.imagePath;
            for (var e in this.textures)
                this.textures[e].returnToPool(),
                delete this.textures[e];
            for (var e in t.textures) {
                var r = this.createTexture();
                r.copyFrom(t.textures[e]),
                this.textures[e] = r
            }
        }
        ,
        e.prototype.addTexture = function(t) {
            return t.name in this.textures ? void console.warn("Same texture: " + t.name) : (t.parent = this,
            void (this.textures[t.name] = t))
        }
        ,
        e.prototype.getTexture = function(t) {
            return t in this.textures ? this.textures[t] : null
        }
        ,
        e
    }(t.BaseObject);
    t.TextureAtlasData = e;
    var r = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.region = new t.Rectangle,
            r.frame = null,
            r
        }
        return __extends(r, e),
        r.createRectangle = function() {
            return new t.Rectangle
        }
        ,
        r.prototype._onClear = function() {
            this.rotated = !1,
            this.name = "",
            this.region.clear(),
            this.parent = null,
            this.frame = null
        }
        ,
        r.prototype.copyFrom = function(t) {
            this.rotated = t.rotated,
            this.name = t.name,
            this.region.copyFrom(t.region),
            this.parent = t.parent,
            null === this.frame && null !== t.frame ? this.frame = r.createRectangle() : null !== this.frame && null === t.frame && (this.frame = null),
            null !== this.frame && null !== t.frame && this.frame.copyFrom(t.frame)
        }
        ,
        r
    }(t.BaseObject);
    t.TextureData = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.vertices = [],
            e.bones = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.DeformVertices]"
        }
        ,
        e.prototype._onClear = function() {
            this.verticesDirty = !1,
            this.vertices.length = 0,
            this.bones.length = 0,
            this.verticesData = null
        }
        ,
        e.prototype.init = function(t, e) {
            if (this.verticesData = t,
            null !== this.verticesData) {
                var r = 0;
                r = null !== this.verticesData.weight ? 2 * this.verticesData.weight.count : 2 * this.verticesData.data.intArray[this.verticesData.offset + 0],
                this.verticesDirty = !0,
                this.vertices.length = r,
                this.bones.length = 0;
                for (var i = 0, n = this.vertices.length; n > i; ++i)
                    this.vertices[i] = 0;
                if (null !== this.verticesData.weight)
                    for (var i = 0, n = this.verticesData.weight.bones.length; n > i; ++i) {
                        var a = e.getBone(this.verticesData.weight.bones[i].name);
                        this.bones.push(a)
                    }
            } else
                this.verticesDirty = !1,
                this.vertices.length = 0,
                this.bones.length = 0,
                this.verticesData = null
        }
        ,
        e.prototype.isBonesUpdate = function() {
            for (var t = 0, e = this.bones; t < e.length; t++) {
                var r = e[t];
                if (null !== r && r._childrenTransformDirty)
                    return !0
            }
            return !1
        }
        ,
        e
    }(t.BaseObject);
    t.DeformVertices = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._bones = [],
            t._slots = [],
            t._constraints = [],
            t._actions = [],
            t._animation = null,
            t._proxy = null,
            t._replaceTextureAtlasData = null,
            t._clock = null,
            t
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.Armature]"
        }
        ,
        r._onSortSlots = function(t, e) {
            return t._zOrder > e._zOrder ? 1 : -1
        }
        ,
        r.prototype._onClear = function() {
            null !== this._clock && this._clock.remove(this);
            for (var t = 0, e = this._bones; t < e.length; t++) {
                var r = e[t];
                r.returnToPool()
            }
            for (var i = 0, n = this._slots; i < n.length; i++) {
                var a = n[i];
                a.returnToPool()
            }
            for (var s = 0, o = this._constraints; s < o.length; s++) {
                var l = o[s];
                l.returnToPool()
            }
            for (var h = 0, u = this._actions; h < u.length; h++) {
                var c = u[h];
                c.returnToPool()
            }
            null !== this._animation && this._animation.returnToPool(),
            null !== this._proxy && this._proxy.dbClear(),
            null !== this._replaceTextureAtlasData && this._replaceTextureAtlasData.returnToPool(),
            this.inheritAnimation = !0,
            this.userData = null,
            this._lockUpdate = !1,
            this._slotsDirty = !0,
            this._zOrderDirty = !1,
            this._flipX = !1,
            this._flipY = !1,
            this._cacheFrameIndex = -1,
            this._bones.length = 0,
            this._slots.length = 0,
            this._constraints.length = 0,
            this._actions.length = 0,
            this._armatureData = null,
            this._animation = null,
            this._proxy = null,
            this._display = null,
            this._replaceTextureAtlasData = null,
            this._replacedTexture = null,
            this._dragonBones = null,
            this._clock = null,
            this._parent = null
        }
        ,
        r.prototype._sortZOrder = function(t, e) {
            var r = this._armatureData.sortedSlots
              , i = null === t;
            if (this._zOrderDirty || !i) {
                for (var n = 0, a = r.length; a > n; ++n) {
                    var s = i ? n : t[e + n];
                    if (!(0 > s || s >= a)) {
                        var o = r[s]
                          , l = this.getSlot(o.name);
                        null !== l && l._setZorder(n)
                    }
                }
                this._slotsDirty = !0,
                this._zOrderDirty = !i
            }
        }
        ,
        r.prototype._addBone = function(t) {
            this._bones.indexOf(t) < 0 && this._bones.push(t)
        }
        ,
        r.prototype._addSlot = function(t) {
            this._slots.indexOf(t) < 0 && this._slots.push(t)
        }
        ,
        r.prototype._addConstraint = function(t) {
            this._constraints.indexOf(t) < 0 && this._constraints.push(t)
        }
        ,
        r.prototype._bufferAction = function(t, e) {
            this._actions.indexOf(t) < 0 && (e ? this._actions.push(t) : this._actions.unshift(t))
        }
        ,
        r.prototype.dispose = function() {
            null !== this._armatureData && (this._lockUpdate = !0,
            this._dragonBones.bufferObject(this))
        }
        ,
        r.prototype.init = function(e, r, i, n) {
            null === this._armatureData && (this._armatureData = e,
            this._animation = t.BaseObject.borrowObject(t.Animation),
            this._proxy = r,
            this._display = i,
            this._dragonBones = n,
            this._proxy.dbInit(this),
            this._animation.init(this),
            this._animation.animations = this._armatureData.animations)
        }
        ,
        r.prototype.advanceTime = function(t) {
            if (!this._lockUpdate) {
                if (null === this._armatureData)
                    return void console.warn("The armature has been disposed.");
                if (null === this._armatureData.parent)
                    return void console.warn("The armature data has been disposed.\nPlease make sure dispose armature before call factory.clear().");
                var e = this._cacheFrameIndex;
                if (this._animation.advanceTime(t),
                this._slotsDirty && (this._slotsDirty = !1,
                this._slots.sort(r._onSortSlots)),
                this._cacheFrameIndex < 0 || this._cacheFrameIndex !== e) {
                    var i = 0
                      , n = 0;
                    for (i = 0,
                    n = this._bones.length; n > i; ++i)
                        this._bones[i].update(this._cacheFrameIndex);
                    for (i = 0,
                    n = this._slots.length; n > i; ++i)
                        this._slots[i].update(this._cacheFrameIndex)
                }
                if (this._actions.length > 0) {
                    this._lockUpdate = !0;
                    for (var a = 0, s = this._actions; a < s.length; a++) {
                        var o = s[a]
                          , l = o.actionData;
                        if (null !== l && 0 === l.type)
                            if (null !== o.slot) {
                                var h = o.slot.childArmature;
                                null !== h && h.animation.fadeIn(l.name)
                            } else if (null !== o.bone)
                                for (var u = 0, c = this.getSlots(); u < c.length; u++) {
                                    var f = c[u];
                                    if (f.parent === o.bone) {
                                        var h = f.childArmature;
                                        null !== h && h.animation.fadeIn(l.name)
                                    }
                                }
                            else
                                this._animation.fadeIn(l.name);
                        o.returnToPool()
                    }
                    this._actions.length = 0,
                    this._lockUpdate = !1
                }
                this._proxy.dbUpdate()
            }
        }
        ,
        r.prototype.invalidUpdate = function(t, e) {
            if (void 0 === t && (t = null),
            void 0 === e && (e = !1),
            null !== t && t.length > 0) {
                var r = this.getBone(t);
                if (null !== r && (r.invalidUpdate(),
                e))
                    for (var i = 0, n = this._slots; i < n.length; i++) {
                        var a = n[i];
                        a.parent === r && a.invalidUpdate()
                    }
            } else {
                for (var s = 0, o = this._bones; s < o.length; s++) {
                    var r = o[s];
                    r.invalidUpdate()
                }
                if (e)
                    for (var l = 0, h = this._slots; l < h.length; l++) {
                        var a = h[l];
                        a.invalidUpdate()
                    }
            }
        }
        ,
        r.prototype.containsPoint = function(t, e) {
            for (var r = 0, i = this._slots; r < i.length; r++) {
                var n = i[r];
                if (n.containsPoint(t, e))
                    return n
            }
            return null
        }
        ,
        r.prototype.intersectsSegment = function(t, e, r, i, n, a, s) {
            void 0 === n && (n = null),
            void 0 === a && (a = null),
            void 0 === s && (s = null);
            for (var o = t === r, l = 0, h = 0, u = 0, c = 0, f = 0, d = 0, p = 0, _ = 0, m = null, g = null, y = 0, v = this._slots; y < v.length; y++) {
                var b = v[y]
                  , w = b.intersectsSegment(t, e, r, i, n, a, s);
                if (w > 0) {
                    if (null === n && null === a) {
                        m = b;
                        break
                    }
                    if (null !== n) {
                        var T = o ? n.y - e : n.x - t;
                        0 > T && (T = -T),
                        (null === m || l > T) && (l = T,
                        u = n.x,
                        c = n.y,
                        m = b,
                        s && (p = s.x))
                    }
                    if (null !== a) {
                        var T = a.x - t;
                        0 > T && (T = -T),
                        (null === g || T > h) && (h = T,
                        f = a.x,
                        d = a.y,
                        g = b,
                        null !== s && (_ = s.y))
                    }
                }
            }
            return null !== m && null !== n && (n.x = u,
            n.y = c,
            null !== s && (s.x = p)),
            null !== g && null !== a && (a.x = f,
            a.y = d,
            null !== s && (s.y = _)),
            m
        }
        ,
        r.prototype.getBone = function(t) {
            for (var e = 0, r = this._bones; e < r.length; e++) {
                var i = r[e];
                if (i.name === t)
                    return i
            }
            return null
        }
        ,
        r.prototype.getBoneByDisplay = function(t) {
            var e = this.getSlotByDisplay(t);
            return null !== e ? e.parent : null
        }
        ,
        r.prototype.getSlot = function(t) {
            for (var e = 0, r = this._slots; e < r.length; e++) {
                var i = r[e];
                if (i.name === t)
                    return i
            }
            return null
        }
        ,
        r.prototype.getSlotByDisplay = function(t) {
            if (null !== t)
                for (var e = 0, r = this._slots; e < r.length; e++) {
                    var i = r[e];
                    if (i.display === t)
                        return i
                }
            return null
        }
        ,
        r.prototype.getBones = function() {
            return this._bones
        }
        ,
        r.prototype.getSlots = function() {
            return this._slots
        }
        ,
        Object.defineProperty(r.prototype, "flipX", {
            get: function() {
                return this._flipX
            },
            set: function(t) {
                this._flipX !== t && (this._flipX = t,
                this.invalidUpdate())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "flipY", {
            get: function() {
                return this._flipY
            },
            set: function(t) {
                this._flipY !== t && (this._flipY = t,
                this.invalidUpdate())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "cacheFrameRate", {
            get: function() {
                return this._armatureData.cacheFrameRate
            },
            set: function(t) {
                if (this._armatureData.cacheFrameRate !== t) {
                    this._armatureData.cacheFrames(t);
                    for (var e = 0, r = this._slots; e < r.length; e++) {
                        var i = r[e]
                          , n = i.childArmature;
                        null !== n && (n.cacheFrameRate = t)
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "name", {
            get: function() {
                return this._armatureData.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "armatureData", {
            get: function() {
                return this._armatureData
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animation", {
            get: function() {
                return this._animation
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "proxy", {
            get: function() {
                return this._proxy
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "eventDispatcher", {
            get: function() {
                return this._proxy
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "display", {
            get: function() {
                return this._display
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "replacedTexture", {
            get: function() {
                return this._replacedTexture
            },
            set: function(t) {
                if (this._replacedTexture !== t) {
                    null !== this._replaceTextureAtlasData && (this._replaceTextureAtlasData.returnToPool(),
                    this._replaceTextureAtlasData = null),
                    this._replacedTexture = t;
                    for (var e = 0, r = this._slots; e < r.length; e++) {
                        var i = r[e];
                        i.invalidUpdate(),
                        i.update(-1)
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "clock", {
            get: function() {
                return this._clock
            },
            set: function(t) {
                if (this._clock !== t) {
                    null !== this._clock && this._clock.remove(this),
                    this._clock = t,
                    this._clock && this._clock.add(this);
                    for (var e = 0, r = this._slots; e < r.length; e++) {
                        var i = r[e]
                          , n = i.childArmature;
                        null !== n && (n.clock = this._clock)
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "parent", {
            get: function() {
                return this._parent
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.replaceTexture = function(t) {
            this.replacedTexture = t
        }
        ,
        r.prototype.hasEventListener = function(t) {
            return console.warn("Deprecated."),
            this._proxy.hasDBEventListener(t)
        }
        ,
        r.prototype.addEventListener = function(t, e, r) {
            console.warn("Deprecated."),
            this._proxy.addDBEventListener(t, e, r)
        }
        ,
        r.prototype.removeEventListener = function(t, e, r) {
            console.warn("Deprecated."),
            this._proxy.removeDBEventListener(t, e, r)
        }
        ,
        r.prototype.enableAnimationCache = function(t) {
            console.warn("Deprecated."),
            this.cacheFrameRate = t
        }
        ,
        r.prototype.getDisplay = function() {
            return this._display
        }
        ,
        r
    }(t.BaseObject);
    t.Armature = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.globalTransformMatrix = new t.Matrix,
            r.global = new t.Transform,
            r.offset = new t.Transform,
            r
        }
        return __extends(r, e),
        r.prototype._onClear = function() {
            this.globalTransformMatrix.identity(),
            this.global.identity(),
            this.offset.identity(),
            this.origin = null,
            this.userData = null,
            this._globalDirty = !1,
            this._armature = null
        }
        ,
        r.prototype.updateGlobalTransform = function() {
            this._globalDirty && (this._globalDirty = !1,
            this.global.fromMatrix(this.globalTransformMatrix))
        }
        ,
        Object.defineProperty(r.prototype, "armature", {
            get: function() {
                return this._armature
            },
            enumerable: !0,
            configurable: !0
        }),
        r._helpMatrix = new t.Matrix,
        r._helpTransform = new t.Transform,
        r._helpPoint = new t.Point,
        r
    }(t.BaseObject);
    t.TransformObject = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.animationPose = new t.Transform,
            r._blendState = new t.BlendState,
            r
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.Bone]"
        }
        ,
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this.offsetMode = 1,
            this.animationPose.identity(),
            this._transformDirty = !1,
            this._childrenTransformDirty = !1,
            this._localDirty = !0,
            this._hasConstraint = !1,
            this._visible = !0,
            this._cachedFrameIndex = -1,
            this._blendState.clear(),
            this._boneData = null,
            this._parent = null,
            this._cachedFrameIndices = null
        }
        ,
        r.prototype._updateGlobalTransformMatrix = function(e) {
            var r = this._boneData
              , i = this.global
              , n = this.globalTransformMatrix
              , a = this.origin
              , s = this.offset
              , o = this.animationPose
              , l = this._parent
              , h = this._armature.flipX
              , u = this._armature.flipY === t.DragonBones.yDown
              , c = null !== l
              , f = 0;
            if (1 === this.offsetMode ? null !== a ? (i.x = a.x + s.x + o.x,
            i.y = a.y + s.y + o.y,
            i.skew = a.skew + s.skew + o.skew,
            i.rotation = a.rotation + s.rotation + o.rotation,
            i.scaleX = a.scaleX * s.scaleX * o.scaleX,
            i.scaleY = a.scaleY * s.scaleY * o.scaleY) : i.copyFrom(s).add(o) : 0 === this.offsetMode ? null !== a ? i.copyFrom(a).add(o) : i.copyFrom(o) : (c = !1,
            i.copyFrom(s)),
            c) {
                var d = 0 === l._boneData.type ? l.globalTransformMatrix : l._getGlobalTransformMatrix(i.x, i.y);
                if (r.inheritScale)
                    r.inheritRotation || (l.updateGlobalTransform(),
                    f = h && u ? i.rotation - (l.global.rotation + Math.PI) : h ? i.rotation + l.global.rotation + Math.PI : u ? i.rotation + l.global.rotation : i.rotation - l.global.rotation,
                    i.rotation = f),
                    i.toMatrix(n),
                    n.concat(d),
                    r.inheritTranslation ? (i.x = n.tx,
                    i.y = n.ty) : (n.tx = i.x,
                    n.ty = i.y),
                    e ? i.fromMatrix(n) : this._globalDirty = !0;
                else {
                    if (r.inheritTranslation) {
                        var p = i.x
                          , _ = i.y;
                        i.x = d.a * p + d.c * _ + d.tx,
                        i.y = d.b * p + d.d * _ + d.ty
                    } else
                        h && (i.x = -i.x),
                        u && (i.y = -i.y);
                    r.inheritRotation ? (l.updateGlobalTransform(),
                    f = l.global.scaleX < 0 ? i.rotation + l.global.rotation + Math.PI : i.rotation + l.global.rotation,
                    d.a * d.d - d.b * d.c < 0 && (f -= 2 * i.rotation,
                    (h !== u || r.inheritReflection) && (i.skew += Math.PI)),
                    i.rotation = f) : (h || u) && (h && u ? f = i.rotation + Math.PI : (f = h ? Math.PI - i.rotation : -i.rotation,
                    i.skew += Math.PI),
                    i.rotation = f),
                    i.toMatrix(n)
                }
            } else
                (h || u) && (h && (i.x = -i.x),
                u && (i.y = -i.y),
                h && u ? f = i.rotation + Math.PI : (f = h ? Math.PI - i.rotation : -i.rotation,
                i.skew += Math.PI),
                i.rotation = f),
                i.toMatrix(n)
        }
        ,
        r.prototype.init = function(t, e) {
            null === this._boneData && (this._boneData = t,
            this._armature = e,
            null !== this._boneData.parent && (this._parent = this._armature.getBone(this._boneData.parent.name)),
            this._armature._addBone(this),
            this.origin = this._boneData.transform)
        }
        ,
        r.prototype.update = function(t) {
            if (this._blendState.dirty = !1,
            t >= 0 && null !== this._cachedFrameIndices) {
                var e = this._cachedFrameIndices[t];
                if (e >= 0 && this._cachedFrameIndex === e)
                    this._transformDirty = !1;
                else if (e >= 0)
                    this._transformDirty = !0,
                    this._cachedFrameIndex = e;
                else {
                    if (this._hasConstraint)
                        for (var r = 0, i = this._armature._constraints; r < i.length; r++) {
                            var n = i[r];
                            n._root === this && n.update()
                        }
                    this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty ? (this._transformDirty = !0,
                    this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1,
                    this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0,
                    this._cachedFrameIndex = -1)
                }
            } else {
                if (this._hasConstraint)
                    for (var a = 0, s = this._armature._constraints; a < s.length; a++) {
                        var n = s[a];
                        n._root === this && n.update()
                    }
                (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && (t = -1,
                this._transformDirty = !0,
                this._cachedFrameIndex = -1)
            }
            if (this._transformDirty)
                if (this._transformDirty = !1,
                this._childrenTransformDirty = !0,
                this._cachedFrameIndex < 0) {
                    var o = t >= 0;
                    this._localDirty && this._updateGlobalTransformMatrix(o),
                    o && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global))
                } else
                    this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);
            else
                this._childrenTransformDirty && (this._childrenTransformDirty = !1);
            this._localDirty = !0
        }
        ,
        r.prototype.updateByConstraint = function() {
            this._localDirty && (this._localDirty = !1,
            (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && this._updateGlobalTransformMatrix(!0),
            this._transformDirty = !0)
        }
        ,
        r.prototype.invalidUpdate = function() {
            this._transformDirty = !0
        }
        ,
        r.prototype.contains = function(t) {
            if (t === this)
                return !1;
            for (var e = t; e !== this && null !== e; )
                e = e.parent;
            return e === this
        }
        ,
        Object.defineProperty(r.prototype, "boneData", {
            get: function() {
                return this._boneData
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "visible", {
            get: function() {
                return this._visible
            },
            set: function(t) {
                if (this._visible !== t) {
                    this._visible = t;
                    for (var e = 0, r = this._armature.getSlots(); e < r.length; e++) {
                        var i = r[e];
                        i.parent === this && i._updateVisible()
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "name", {
            get: function() {
                return this._boneData.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "parent", {
            get: function() {
                return this._parent
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.getBones = function() {
            console.warn("Deprecated.");
            for (var t = new Array, e = 0, r = this._armature.getBones(); e < r.length; e++) {
                var i = r[e];
                i.parent === this && t.push(i)
            }
            return t
        }
        ,
        r.prototype.getSlots = function() {
            console.warn("Deprecated.");
            for (var t = new Array, e = 0, r = this._armature.getSlots(); e < r.length; e++) {
                var i = r[e];
                i.parent === this && t.push(i)
            }
            return t
        }
        ,
        Object.defineProperty(r.prototype, "slot", {
            get: function() {
                console.warn("Deprecated.");
                for (var t = 0, e = this._armature.getSlots(); t < e.length; t++) {
                    var r = e[t];
                    if (r.parent === this)
                        return r
                }
                return null
            },
            enumerable: !0,
            configurable: !0
        }),
        r
    }(t.TransformObject);
    t.Bone = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._vertices = [],
            e._deformVertices = [],
            e._hullCache = [],
            e._matrixCahce = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.Surface]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this._dX = 0,
            this._dY = 0,
            this._k = 0,
            this._kX = 0,
            this._kY = 0,
            this._vertices.length = 0,
            this._deformVertices.length = 0,
            this._matrixCahce.length = 0,
            this._hullCache.length = 0
        }
        ,
        e.prototype._getAffineTransform = function(t, e, r, i, n, a, s, o, l, h, u, c, f) {
            var d = s - n
              , p = o - a
              , _ = l - n
              , m = h - a;
            u.rotation = Math.atan2(p, d),
            u.skew = Math.atan2(m, _) - .5 * Math.PI - u.rotation,
            f && (u.rotation += Math.PI),
            u.scaleX = Math.sqrt(d * d + p * p) / r,
            u.scaleY = Math.sqrt(_ * _ + m * m) / i,
            u.toMatrix(c),
            u.x = c.tx = n - (c.a * t + c.c * e),
            u.y = c.ty = a - (c.b * t + c.d * e)
        }
        ,
        e.prototype._updateVertices = function() {
            var t = this._boneData.vertices
              , e = this._vertices
              , r = this._deformVertices;
            if (null !== this._parent)
                if (1 === this._parent._boneData.type)
                    for (var i = 0, n = t.length; n > i; i += 2) {
                        var a = t[i] + r[i]
                          , s = t[i + 1] + r[i]
                          , o = this._parent._getGlobalTransformMatrix(a, s);
                        e[i] = o.a * a + o.c * s + o.tx,
                        e[i + 1] = o.b * a + o.d * s + o.ty
                    }
                else
                    for (var l = this._parent.globalTransformMatrix, i = 0, n = t.length; n > i; i += 2) {
                        var a = t[i] + r[i]
                          , s = t[i + 1] + r[i + 1];
                        e[i] = l.a * a + l.c * s + l.tx,
                        e[i + 1] = l.b * a + l.d * s + l.ty
                    }
            else
                for (var i = 0, n = t.length; n > i; i += 2)
                    e[i] = t[i] + r[i],
                    e[i + 1] = t[i + 1] + r[i + 1]
        }
        ,
        e.prototype._updateGlobalTransformMatrix = function(t) {
            var e = 2 * this._boneData.segmentX
              , r = this._vertices.length - 2
              , i = 200
              , n = this._vertices[0]
              , a = this._vertices[1]
              , s = this._vertices[e]
              , o = this._vertices[e + 1]
              , l = this._vertices[r]
              , h = this._vertices[r + 1]
              , u = this._vertices[r - e]
              , c = this._vertices[r - e + 1]
              , f = n + .5 * (l - n)
              , d = a + .5 * (h - a)
              , p = s + .5 * (u - s)
              , _ = o + .5 * (c - o)
              , m = f + .5 * (p - f)
              , g = d + .5 * (_ - d)
              , y = s + .5 * (l - s)
              , v = o + .5 * (h - o)
              , b = u + .5 * (l - u)
              , w = c + .5 * (h - c);
            this._globalDirty = !1,
            this._getAffineTransform(0, 0, i, i, m, g, y, v, b, w, this.global, this.globalTransformMatrix, !1)
        }
        ,
        e.prototype._getGlobalTransformMatrix = function(t, r) {
            var i = 1e3;
            if (-i > t || t > i || -i > r || r > i)
                return this.globalTransformMatrix;
            var n = !1
              , a = 200
              , s = this._boneData
              , o = s.segmentX
              , l = s.segmentY
              , h = 2 * s.segmentX
              , u = this._dX
              , c = this._dY
              , f = Math.floor((t + a) / u)
              , d = Math.floor((r + a) / c)
              , p = 0
              , _ = f * u - a
              , m = d * c - a
              , g = this._matrixCahce
              , y = e._helpMatrix;
            if (-a > t) {
                if (-a > r || r >= a)
                    return this.globalTransformMatrix;
                if (n = r > this._kX * (t + a) + m,
                p = 7 * (2 * (o * (l + 1) + 2 * o + l + d) + (n ? 1 : 0)),
                this._matrixCahce[p] > 0)
                    y.copyFromArray(g, p + 1);
                else {
                    var v = d * (h + 2)
                      , b = this._hullCache[4]
                      , w = this._hullCache[5]
                      , T = this._hullCache[2] - (l - d) * b
                      , D = this._hullCache[3] - (l - d) * w
                      , S = this._vertices;
                    n ? this._getAffineTransform(-a, m + c, i - a, c, S[v + h + 2], S[v + h + 3], T + b, D + w, S[v], S[v + 1], e._helpTransform, y, !0) : this._getAffineTransform(-i, m, i - a, c, T, D, S[v], S[v + 1], T + b, D + w, e._helpTransform, y, !1),
                    g[p] = 1,
                    g[p + 1] = y.a,
                    g[p + 2] = y.b,
                    g[p + 3] = y.c,
                    g[p + 4] = y.d,
                    g[p + 5] = y.tx,
                    g[p + 6] = y.ty
                }
            } else if (t >= a) {
                if (-a > r || r >= a)
                    return this.globalTransformMatrix;
                if (n = r > this._kX * (t - i) + m,
                p = 7 * (2 * (o * (l + 1) + o + d) + (n ? 1 : 0)),
                this._matrixCahce[p] > 0)
                    y.copyFromArray(g, p + 1);
                else {
                    var v = (d + 1) * (h + 2) - 2
                      , b = this._hullCache[4]
                      , w = this._hullCache[5]
                      , T = this._hullCache[0] + d * b
                      , D = this._hullCache[1] + d * w
                      , S = this._vertices;
                    n ? this._getAffineTransform(i, m + c, i - a, c, T + b, D + w, S[v + h + 2], S[v + h + 3], T, D, e._helpTransform, y, !0) : this._getAffineTransform(a, m, i - a, c, S[v], S[v + 1], T, D, S[v + h + 2], S[v + h + 3], e._helpTransform, y, !1),
                    g[p] = 1,
                    g[p + 1] = y.a,
                    g[p + 2] = y.b,
                    g[p + 3] = y.c,
                    g[p + 4] = y.d,
                    g[p + 5] = y.tx,
                    g[p + 6] = y.ty
                }
            } else if (-a > r) {
                if (-a > t || t >= a)
                    return this.globalTransformMatrix;
                if (n = r > this._kY * (t - _ - u) - i,
                p = 7 * (o * (l + 1) + 2 * f + (n ? 1 : 0)),
                this._matrixCahce[p] > 0)
                    y.copyFromArray(g, p + 1);
                else {
                    var v = 2 * f
                      , b = this._hullCache[10]
                      , w = this._hullCache[11]
                      , T = this._hullCache[8] + f * b
                      , D = this._hullCache[9] + f * w
                      , S = this._vertices;
                    n ? this._getAffineTransform(_ + u, -a, u, i - a, S[v + 2], S[v + 3], S[v], S[v + 1], T + b, D + w, e._helpTransform, y, !0) : this._getAffineTransform(_, -i, u, i - a, T, D, T + b, D + w, S[v], S[v + 1], e._helpTransform, y, !1),
                    g[p] = 1,
                    g[p + 1] = y.a,
                    g[p + 2] = y.b,
                    g[p + 3] = y.c,
                    g[p + 4] = y.d,
                    g[p + 5] = y.tx,
                    g[p + 6] = y.ty
                }
            } else if (r >= a) {
                if (-a > t || t >= a)
                    return this.globalTransformMatrix;
                if (n = r > this._kY * (t - _ - u) + a,
                p = 7 * (2 * (o * (l + 1) + o + l + d) + (n ? 1 : 0)),
                this._matrixCahce[p] > 0)
                    y.copyFromArray(g, p + 1);
                else {
                    var v = l * (h + 2) + 2 * f
                      , b = this._hullCache[10]
                      , w = this._hullCache[11]
                      , T = this._hullCache[6] - (o - f) * b
                      , D = this._hullCache[7] - (o - f) * w
                      , S = this._vertices;
                    n ? this._getAffineTransform(_ + u, i, u, i - a, T + b, D + w, T, D, S[v + 2], S[v + 3], e._helpTransform, y, !0) : this._getAffineTransform(_, a, u, i - a, S[v], S[v + 1], S[v + 2], S[v + 3], T, D, e._helpTransform, y, !1),
                    g[p] = 1,
                    g[p + 1] = y.a,
                    g[p + 2] = y.b,
                    g[p + 3] = y.c,
                    g[p + 4] = y.d,
                    g[p + 5] = y.tx,
                    g[p + 6] = y.ty
                }
            } else if (n = r > this._k * (t - _ - u) + m,
            p = 7 * (2 * (o * d + f) + (n ? 1 : 0)),
            this._matrixCahce[p] > 0)
                y.copyFromArray(g, p + 1);
            else {
                var v = 2 * f + d * (h + 2)
                  , S = this._vertices;
                n ? this._getAffineTransform(_ + u, m + c, u, c, S[v + h + 4], S[v + h + 5], S[v + h + 2], S[v + h + 3], S[v + 2], S[v + 3], e._helpTransform, y, !0) : this._getAffineTransform(_, m, u, c, S[v], S[v + 1], S[v + 2], S[v + 3], S[v + h + 2], S[v + h + 3], e._helpTransform, y, !1),
                g[p] = 1,
                g[p + 1] = y.a,
                g[p + 2] = y.b,
                g[p + 3] = y.c,
                g[p + 4] = y.d,
                g[p + 5] = y.tx,
                g[p + 6] = y.ty
            }
            return y
        }
        ,
        e.prototype.init = function(e, r) {
            if (null === this._boneData) {
                t.prototype.init.call(this, e, r);
                var i = e.segmentX
                  , n = e.segmentY
                  , a = e.vertices.length
                  , s = 1e3
                  , o = 200;
                this._dX = 2 * o / i,
                this._dY = 2 * o / n,
                this._k = -this._dY / this._dX,
                this._kX = -this._dY / (s - o),
                this._kY = -(s - o) / this._dX,
                this._vertices.length = a,
                this._deformVertices.length = a,
                this._matrixCahce.length = 2 * (i * n + 2 * i + 2 * n) * 7,
                this._hullCache.length = 10;
                for (var l = 0; a > l; ++l)
                    this._deformVertices[l] = 0
            }
        }
        ,
        e.prototype.update = function(t) {
            if (this._blendState.dirty = !1,
            t >= 0 && null !== this._cachedFrameIndices) {
                var r = this._cachedFrameIndices[t];
                if (r >= 0 && this._cachedFrameIndex === r)
                    this._transformDirty = !1;
                else if (r >= 0)
                    this._transformDirty = !0,
                    this._cachedFrameIndex = r;
                else {
                    if (this._hasConstraint)
                        for (var i = 0, n = this._armature._constraints; i < n.length; i++) {
                            var a = n[i];
                            a._root === this && a.update()
                        }
                    this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty ? (this._transformDirty = !0,
                    this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1,
                    this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0,
                    this._cachedFrameIndex = -1)
                }
            } else {
                if (this._hasConstraint)
                    for (var s = 0, o = this._armature._constraints; s < o.length; s++) {
                        var a = o[s];
                        a._root === this && a.update()
                    }
                (this._transformDirty || null !== this._parent && this._parent._childrenTransformDirty) && (t = -1,
                this._transformDirty = !0,
                this._cachedFrameIndex = -1)
            }
            if (this._transformDirty) {
                this._transformDirty = !1,
                this._childrenTransformDirty = !0;
                for (var l = 0, h = this._matrixCahce.length; h > l; l += 7)
                    this._matrixCahce[l] = -1;
                if (this._updateVertices(),
                this._cachedFrameIndex < 0) {
                    var u = t >= 0;
                    this._localDirty && this._updateGlobalTransformMatrix(u),
                    u && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global))
                } else
                    this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);
                var c = 1e3
                  , f = 200
                  , d = 2 * this.global.x
                  , p = 2 * this.global.y
                  , _ = e._helpPoint;
                this.globalTransformMatrix.transformPoint(c, -f, _),
                this._hullCache[0] = _.x,
                this._hullCache[1] = _.y,
                this._hullCache[2] = d - _.x,
                this._hullCache[3] = p - _.y,
                this.globalTransformMatrix.transformPoint(0, this._dY, _, !0),
                this._hullCache[4] = _.x,
                this._hullCache[5] = _.y,
                this.globalTransformMatrix.transformPoint(f, c, _),
                this._hullCache[6] = _.x,
                this._hullCache[7] = _.y,
                this._hullCache[8] = d - _.x,
                this._hullCache[9] = p - _.y,
                this.globalTransformMatrix.transformPoint(this._dX, 0, _, !0),
                this._hullCache[10] = _.x,
                this._hullCache[11] = _.y
            } else
                this._childrenTransformDirty && (this._childrenTransformDirty = !1);
            this._localDirty = !0
        }
        ,
        e
    }(t.Bone);
    t.Surface = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r._localMatrix = new t.Matrix,
            r._colorTransform = new t.ColorTransform,
            r._displayDatas = [],
            r._displayList = [],
            r._deformVertices = null,
            r._rawDisplay = null,
            r._meshDisplay = null,
            r
        }
        return __extends(r, e),
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this);
            for (var r = [], i = 0, n = this._displayList; i < n.length; i++) {
                var a = n[i];
                null !== a && a !== this._rawDisplay && a !== this._meshDisplay && r.indexOf(a) < 0 && r.push(a)
            }
            for (var s = 0, o = r; s < o.length; s++) {
                var a = o[s];
                a instanceof t.Armature ? a.dispose() : this._disposeDisplay(a, !0)
            }
            null !== this._deformVertices && this._deformVertices.returnToPool(),
            null !== this._meshDisplay && this._meshDisplay !== this._rawDisplay && this._disposeDisplay(this._meshDisplay, !1),
            null !== this._rawDisplay && this._disposeDisplay(this._rawDisplay, !1),
            this.displayController = null,
            this._displayDirty = !1,
            this._zOrderDirty = !1,
            this._blendModeDirty = !1,
            this._colorDirty = !1,
            this._transformDirty = !1,
            this._visible = !0,
            this._blendMode = 0,
            this._displayIndex = -1,
            this._animationDisplayIndex = -1,
            this._zOrder = 0,
            this._cachedFrameIndex = -1,
            this._pivotX = 0,
            this._pivotY = 0,
            this._localMatrix.identity(),
            this._colorTransform.identity(),
            this._displayList.length = 0,
            this._displayDatas.length = 0,
            this._slotData = null,
            this._rawDisplayDatas = null,
            this._displayData = null,
            this._boundingBoxData = null,
            this._textureData = null,
            this._deformVertices = null,
            this._rawDisplay = null,
            this._meshDisplay = null,
            this._display = null,
            this._childArmature = null,
            this._parent = null,
            this._cachedFrameIndices = null
        }
        ,
        r.prototype._getDefaultRawDisplayData = function(t) {
            var e = this._armature._armatureData.defaultSkin;
            if (null !== e) {
                var r = e.getDisplays(this._slotData.name);
                if (null !== r)
                    return t < r.length ? r[t] : null
            }
            return null
        }
        ,
        r.prototype._updateDisplayData = function() {
            var e = this._displayData
              , i = null !== this._deformVertices ? this._deformVertices.verticesData : null
              , n = this._textureData
              , a = null
              , s = null;
            if (this._displayData = null,
            this._boundingBoxData = null,
            this._textureData = null,
            this._displayIndex >= 0 && (null !== this._rawDisplayDatas && (a = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null),
            null === a && (a = this._getDefaultRawDisplayData(this._displayIndex)),
            this._displayIndex < this._displayDatas.length && (this._displayData = this._displayDatas[this._displayIndex])),
            null !== this._displayData && (2 === this._displayData.type ? s = this._displayData.vertices : 4 === this._displayData.type ? s = this._displayData.vertices : null !== a && (2 === a.type ? s = a.vertices : 4 === a.type && (s = a.vertices)),
            3 === this._displayData.type ? this._boundingBoxData = this._displayData.boundingBox : null !== a && 3 === a.type && (this._boundingBoxData = a.boundingBox),
            0 === this._displayData.type ? this._textureData = this._displayData.texture : 2 === this._displayData.type && (this._textureData = this._displayData.texture)),
            this._displayData !== e || s !== i || this._textureData !== n) {
                if (null === s && null !== this._textureData) {
                    var o = this._displayData
                      , l = this._textureData.parent.scale * this._armature._armatureData.scale
                      , h = this._textureData.frame;
                    this._pivotX = o.pivot.x,
                    this._pivotY = o.pivot.y;
                    var u = null !== h ? h : this._textureData.region
                      , c = u.width
                      , f = u.height;
                    this._textureData.rotated && null === h && (c = u.height,
                    f = u.width),
                    this._pivotX *= c * l,
                    this._pivotY *= f * l,
                    null !== h && (this._pivotX += h.x * l,
                    this._pivotY += h.y * l),
                    null !== this._displayData && null !== a && this._displayData !== a && (a.transform.toMatrix(r._helpMatrix),
                    r._helpMatrix.invert(),
                    r._helpMatrix.transformPoint(0, 0, r._helpPoint),
                    this._pivotX -= r._helpPoint.x,
                    this._pivotY -= r._helpPoint.y,
                    this._displayData.transform.toMatrix(r._helpMatrix),
                    r._helpMatrix.invert(),
                    r._helpMatrix.transformPoint(0, 0, r._helpPoint),
                    this._pivotX += r._helpPoint.x,
                    this._pivotY += r._helpPoint.y),
                    t.DragonBones.yDown || (this._pivotY = (this._textureData.rotated ? this._textureData.region.width : this._textureData.region.height) * l - this._pivotY)
                } else
                    this._pivotX = 0,
                    this._pivotY = 0;
                null !== a ? this.origin = a.transform : null !== this._displayData ? this.origin = this._displayData.transform : this.origin = null,
                s !== i ? (null === this._deformVertices && (this._deformVertices = t.BaseObject.borrowObject(t.DeformVertices)),
                this._deformVertices.init(s, this._armature)) : null !== this._deformVertices && this._textureData !== n && (this._deformVertices.verticesDirty = !0),
                this._displayDirty = !0,
                this._transformDirty = !0
            }
        }
        ,
        r.prototype._updateDisplay = function() {
            var e = null !== this._display ? this._display : this._rawDisplay
              , r = this._childArmature;
            this._displayIndex >= 0 && this._displayIndex < this._displayList.length ? (this._display = this._displayList[this._displayIndex],
            null !== this._display && this._display instanceof t.Armature ? (this._childArmature = this._display,
            this._display = this._childArmature.display) : this._childArmature = null) : (this._display = null,
            this._childArmature = null);
            var i = null !== this._display ? this._display : this._rawDisplay;
            if (i !== e && (this._onUpdateDisplay(),
            this._replaceDisplay(e),
            this._transformDirty = !0,
            this._visibleDirty = !0,
            this._blendModeDirty = !0,
            this._colorDirty = !0),
            (i === this._rawDisplay || i === this._meshDisplay) && this._updateFrame(),
            this._childArmature !== r && (null !== r && (r._parent = null,
            r.clock = null,
            r.inheritAnimation && r.animation.reset()),
            null !== this._childArmature && (this._childArmature._parent = this,
            this._childArmature.clock = this._armature.clock,
            this._childArmature.inheritAnimation))) {
                if (0 === this._childArmature.cacheFrameRate) {
                    var n = this._armature.cacheFrameRate;
                    0 !== n && (this._childArmature.cacheFrameRate = n)
                }
                var a = null;
                if (null !== this._displayData && 1 === this._displayData.type)
                    a = this._displayData.actions;
                else if (this._displayIndex >= 0 && null !== this._rawDisplayDatas) {
                    var s = this._displayIndex < this._rawDisplayDatas.length ? this._rawDisplayDatas[this._displayIndex] : null;
                    null === s && (s = this._getDefaultRawDisplayData(this._displayIndex)),
                    null !== s && 1 === s.type && (a = s.actions)
                }
                if (null !== a && a.length > 0)
                    for (var o = 0, l = a; o < l.length; o++) {
                        var h = l[o]
                          , u = t.BaseObject.borrowObject(t.EventObject);
                        t.EventObject.actionDataToInstance(h, u, this._armature),
                        u.slot = this,
                        this._armature._bufferAction(u, !1)
                    }
                else
                    this._childArmature.animation.play()
            }
        }
        ,
        r.prototype._updateGlobalTransformMatrix = function(t) {
            var e = 0 === this._parent._boneData.type ? this._parent.globalTransformMatrix : this._parent._getGlobalTransformMatrix(this.global.x, this.global.y);
            this.globalTransformMatrix.copyFrom(this._localMatrix),
            this.globalTransformMatrix.concat(e),
            t ? this.global.fromMatrix(this.globalTransformMatrix) : this._globalDirty = !0
        }
        ,
        r.prototype._setDisplayIndex = function(t, e) {
            if (void 0 === e && (e = !1),
            e) {
                if (this._animationDisplayIndex === t)
                    return !1;
                this._animationDisplayIndex = t
            }
            return this._displayIndex === t ? !1 : (this._displayIndex = t,
            this._displayDirty = !0,
            this._updateDisplayData(),
            this._displayDirty)
        }
        ,
        r.prototype._setZorder = function(t) {
            return this._zOrder === t,
            this._zOrder = t,
            this._zOrderDirty = !0,
            this._zOrderDirty
        }
        ,
        r.prototype._setColor = function(t) {
            return this._colorTransform.copyFrom(t),
            this._colorDirty = !0,
            this._colorDirty
        }
        ,
        r.prototype._setDisplayList = function(e) {
            if (null !== e && e.length > 0) {
                this._displayList.length !== e.length && (this._displayList.length = e.length);
                for (var r = 0, i = e.length; i > r; ++r) {
                    var n = e[r];
                    null !== n && n !== this._rawDisplay && n !== this._meshDisplay && !(n instanceof t.Armature) && this._displayList.indexOf(n) < 0 && this._initDisplay(n, !0),
                    this._displayList[r] = n
                }
            } else
                this._displayList.length > 0 && (this._displayList.length = 0);
            return this._displayIndex >= 0 && this._displayIndex < this._displayList.length ? this._displayDirty = this._display !== this._displayList[this._displayIndex] : this._displayDirty = null !== this._display,
            this._updateDisplayData(),
            this._displayDirty
        }
        ,
        r.prototype.init = function(t, e, r, i) {
            if (null === this._slotData) {
                this._slotData = t,
                this._visibleDirty = !0,
                this._blendModeDirty = !0,
                this._colorDirty = !0,
                this._blendMode = this._slotData.blendMode,
                this._zOrder = this._slotData.zOrder,
                this._colorTransform.copyFrom(this._slotData.color),
                this._rawDisplay = r,
                this._meshDisplay = i,
                this._armature = e;
                var n = this._armature.getBone(this._slotData.parent.name);
                null !== n && (this._parent = n),
                this._armature._addSlot(this),
                this._initDisplay(this._rawDisplay, !1),
                this._rawDisplay !== this._meshDisplay && this._initDisplay(this._meshDisplay, !1),
                this._onUpdateDisplay(),
                this._addDisplay()
            }
        }
        ,
        r.prototype.update = function(t) {
            if (this._displayDirty && (this._displayDirty = !1,
            this._updateDisplay(),
            this._transformDirty && (null !== this.origin ? this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix) : this.global.copyFrom(this.offset).toMatrix(this._localMatrix))),
            this._zOrderDirty && (this._zOrderDirty = !1,
            this._updateZOrder()),
            t >= 0 && null !== this._cachedFrameIndices) {
                var e = this._cachedFrameIndices[t];
                e >= 0 && this._cachedFrameIndex === e ? this._transformDirty = !1 : e >= 0 ? (this._transformDirty = !0,
                this._cachedFrameIndex = e) : this._transformDirty || this._parent._childrenTransformDirty ? (this._transformDirty = !0,
                this._cachedFrameIndex = -1) : this._cachedFrameIndex >= 0 ? (this._transformDirty = !1,
                this._cachedFrameIndices[t] = this._cachedFrameIndex) : (this._transformDirty = !0,
                this._cachedFrameIndex = -1)
            } else
                (this._transformDirty || this._parent._childrenTransformDirty) && (t = -1,
                this._transformDirty = !0,
                this._cachedFrameIndex = -1);
            if (null !== this._display) {
                if (this._visibleDirty && (this._visibleDirty = !1,
                this._updateVisible()),
                this._blendModeDirty && (this._blendModeDirty = !1,
                this._updateBlendMode()),
                this._colorDirty && (this._colorDirty = !1,
                this._updateColor()),
                null !== this._deformVertices && null !== this._deformVertices.verticesData && this._display === this._meshDisplay) {
                    var r = null !== this._deformVertices.verticesData.weight
                      , i = 0 !== this._parent._boneData.type;
                    if ((this._deformVertices.verticesDirty || r && this._deformVertices.isBonesUpdate() || i && this._parent._childrenTransformDirty) && (this._deformVertices.verticesDirty = !1,
                    this._updateMesh()),
                    r || i)
                        return
                }
                if (this._transformDirty) {
                    if (this._transformDirty = !1,
                    this._cachedFrameIndex < 0) {
                        var n = t >= 0;
                        this._updateGlobalTransformMatrix(n),
                        n && null !== this._cachedFrameIndices && (this._cachedFrameIndex = this._cachedFrameIndices[t] = this._armature._armatureData.setCacheFrame(this.globalTransformMatrix, this.global))
                    } else
                        this._armature._armatureData.getCacheFrame(this.globalTransformMatrix, this.global, this._cachedFrameIndex);
                    this._updateTransform()
                }
            }
        }
        ,
        r.prototype.updateTransformAndMatrix = function() {
            this._transformDirty && (this._transformDirty = !1,
            this._updateGlobalTransformMatrix(!1))
        }
        ,
        r.prototype.replaceDisplayData = function(t, e) {
            if (void 0 === e && (e = -1),
            0 > e && (e = this._displayIndex < 0 ? 0 : this._displayIndex),
            this._displayDatas.length <= e) {
                this._displayDatas.length = e + 1;
                for (var r = 0, i = this._displayDatas.length; i > r; ++r)
                    this._displayDatas[r] || (this._displayDatas[r] = null)
            }
            this._displayDatas[e] = t
        }
        ,
        r.prototype.containsPoint = function(t, e) {
            return null === this._boundingBoxData ? !1 : (this.updateTransformAndMatrix(),
            r._helpMatrix.copyFrom(this.globalTransformMatrix),
            r._helpMatrix.invert(),
            r._helpMatrix.transformPoint(t, e, r._helpPoint),
            this._boundingBoxData.containsPoint(r._helpPoint.x, r._helpPoint.y))
        }
        ,
        r.prototype.intersectsSegment = function(t, e, i, n, a, s, o) {
            if (void 0 === a && (a = null),
            void 0 === s && (s = null),
            void 0 === o && (o = null),
            null === this._boundingBoxData)
                return 0;
            this.updateTransformAndMatrix(),
            r._helpMatrix.copyFrom(this.globalTransformMatrix),
            r._helpMatrix.invert(),
            r._helpMatrix.transformPoint(t, e, r._helpPoint),
            t = r._helpPoint.x,
            e = r._helpPoint.y,
            r._helpMatrix.transformPoint(i, n, r._helpPoint),
            i = r._helpPoint.x,
            n = r._helpPoint.y;
            var l = this._boundingBoxData.intersectsSegment(t, e, i, n, a, s, o);
            return l > 0 && (1 === l || 2 === l ? null !== a ? (this.globalTransformMatrix.transformPoint(a.x, a.y, a),
            null !== s && (s.x = a.x,
            s.y = a.y)) : null !== s && this.globalTransformMatrix.transformPoint(s.x, s.y, s) : (null !== a && this.globalTransformMatrix.transformPoint(a.x, a.y, a),
            null !== s && this.globalTransformMatrix.transformPoint(s.x, s.y, s)),
            null !== o && (this.globalTransformMatrix.transformPoint(Math.cos(o.x), Math.sin(o.x), r._helpPoint, !0),
            o.x = Math.atan2(r._helpPoint.y, r._helpPoint.x),
            this.globalTransformMatrix.transformPoint(Math.cos(o.y), Math.sin(o.y), r._helpPoint, !0),
            o.y = Math.atan2(r._helpPoint.y, r._helpPoint.x))),
            l
        }
        ,
        r.prototype.invalidUpdate = function() {
            this._displayDirty = !0,
            this._transformDirty = !0
        }
        ,
        Object.defineProperty(r.prototype, "visible", {
            get: function() {
                return this._visible
            },
            set: function(t) {
                this._visible !== t && (this._visible = t,
                this._updateVisible())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "displayIndex", {
            get: function() {
                return this._displayIndex
            },
            set: function(t) {
                this._setDisplayIndex(t) && this.update(-1)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "name", {
            get: function() {
                return this._slotData.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "displayList", {
            get: function() {
                return this._displayList.concat()
            },
            set: function(e) {
                var r = this._displayList.concat()
                  , i = new Array;
                this._setDisplayList(e) && this.update(-1);
                for (var n = 0, a = r; n < a.length; n++) {
                    var s = a[n];
                    null !== s && s !== this._rawDisplay && s !== this._meshDisplay && this._displayList.indexOf(s) < 0 && i.indexOf(s) < 0 && i.push(s)
                }
                for (var o = 0, l = i; o < l.length; o++) {
                    var s = l[o];
                    s instanceof t.Armature || this._disposeDisplay(s, !0)
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "slotData", {
            get: function() {
                return this._slotData
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "rawDisplayDatas", {
            get: function() {
                return this._rawDisplayDatas
            },
            set: function(t) {
                if (this._rawDisplayDatas !== t)
                    if (this._displayDirty = !0,
                    this._rawDisplayDatas = t,
                    null !== this._rawDisplayDatas) {
                        this._displayDatas.length = this._rawDisplayDatas.length;
                        for (var e = 0, r = this._displayDatas.length; r > e; ++e) {
                            var i = this._rawDisplayDatas[e];
                            null === i && (i = this._getDefaultRawDisplayData(e)),
                            this._displayDatas[e] = i
                        }
                    } else
                        this._displayDatas.length = 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "displayData", {
            get: function() {
                return this._displayData
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "boundingBoxData", {
            get: function() {
                return this._boundingBoxData
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "rawDisplay", {
            get: function() {
                return this._rawDisplay
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "meshDisplay", {
            get: function() {
                return this._meshDisplay
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "display", {
            get: function() {
                return this._display
            },
            set: function(t) {
                if (this._display !== t) {
                    var e = this._displayList.length;
                    if (this._displayIndex < 0 && 0 === e && (this._displayIndex = 0),
                    !(this._displayIndex < 0)) {
                        var r = this.displayList;
                        e <= this._displayIndex && (r.length = this._displayIndex + 1),
                        r[this._displayIndex] = t,
                        this.displayList = r
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "childArmature", {
            get: function() {
                return this._childArmature
            },
            set: function(t) {
                this._childArmature !== t && (this.display = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "parent", {
            get: function() {
                return this._parent
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.getDisplay = function() {
            return this._display
        }
        ,
        r.prototype.setDisplay = function(t) {
            this.display = t
        }
        ,
        r
    }(t.TransformObject);
    t.Slot = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.prototype._onClear = function() {
            this._armature = null,
            this._target = null,
            this._root = null,
            this._bone = null
        }
        ,
        Object.defineProperty(r.prototype, "name", {
            get: function() {
                return this._constraintData.name
            },
            enumerable: !0,
            configurable: !0
        }),
        r._helpMatrix = new t.Matrix,
        r._helpTransform = new t.Transform,
        r._helpPoint = new t.Point,
        r
    }(t.BaseObject);
    t.Constraint = e;
    var r = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.IKConstraint]"
        }
        ,
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this._scaleEnabled = !1,
            this._bendPositive = !1,
            this._weight = 1,
            this._constraintData = null
        }
        ,
        r.prototype._computeA = function() {
            var e = this._target.global
              , r = this._root.global
              , i = this._root.globalTransformMatrix
              , n = Math.atan2(e.y - r.y, e.x - r.x);
            r.scaleX < 0 && (n += Math.PI),
            r.rotation += t.Transform.normalizeRadian(n - r.rotation) * this._weight,
            r.toMatrix(i)
        }
        ,
        r.prototype._computeB = function() {
            var e = this._bone._boneData.length
              , r = this._root
              , i = this._target.global
              , n = r.global
              , a = this._bone.global
              , s = this._bone.globalTransformMatrix
              , o = s.a * e
              , l = s.b * e
              , h = o * o + l * l
              , u = Math.sqrt(h)
              , c = a.x - n.x
              , f = a.y - n.y
              , d = c * c + f * f
              , p = Math.sqrt(d)
              , _ = a.rotation
              , m = n.rotation
              , g = Math.atan2(f, c);
            c = i.x - n.x,
            f = i.y - n.y;
            var y = c * c + f * f
              , v = Math.sqrt(y)
              , b = 0;
            if (v >= u + p || p >= v + u || u >= v + p)
                b = Math.atan2(i.y - n.y, i.x - n.x),
                v >= u + p || u > p && (b += Math.PI);
            else {
                var w = (d - h + y) / (2 * y)
                  , T = Math.sqrt(d - w * w * y) / v
                  , D = n.x + c * w
                  , S = n.y + f * w
                  , E = -f * T
                  , A = c * T
                  , x = !1
                  , P = r.parent;
                if (null !== P) {
                    var C = P.globalTransformMatrix;
                    x = C.a * C.d - C.b * C.c < 0
                }
                x !== this._bendPositive ? (a.x = D - E,
                a.y = S - A) : (a.x = D + E,
                a.y = S + A),
                b = Math.atan2(a.y - n.y, a.x - n.x)
            }
            var O = t.Transform.normalizeRadian(b - g);
            n.rotation = m + O * this._weight,
            n.toMatrix(r.globalTransformMatrix);
            var k = g + O * this._weight;
            a.x = n.x + Math.cos(k) * p,
            a.y = n.y + Math.sin(k) * p;
            var I = Math.atan2(i.y - a.y, i.x - a.x);
            a.scaleX < 0 && (I += Math.PI),
            a.rotation = n.rotation + _ - m + t.Transform.normalizeRadian(I - O - _) * this._weight,
            a.toMatrix(s)
        }
        ,
        r.prototype.init = function(t, e) {
            if (null === this._constraintData) {
                this._constraintData = t,
                this._armature = e,
                this._target = this._armature.getBone(this._constraintData.target.name),
                this._root = this._armature.getBone(this._constraintData.root.name),
                this._bone = null !== this._constraintData.bone ? this._armature.getBone(this._constraintData.bone.name) : null;
                var r = this._constraintData;
                this._scaleEnabled = r.scaleEnabled,
                this._bendPositive = r.bendPositive,
                this._weight = r.weight,
                this._root._hasConstraint = !0
            }
        }
        ,
        r.prototype.update = function() {
            this._root.updateByConstraint(),
            null !== this._bone ? (this._bone.updateByConstraint(),
            this._computeB()) : this._computeA()
        }
        ,
        r.prototype.invalidUpdate = function() {
            this._root.invalidUpdate(),
            null !== this._bone && this._bone.invalidUpdate()
        }
        ,
        r
    }(e);
    t.IKConstraint = r;
    var i = function(e) {
        function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._bones = [],
            t._spaces = [],
            t._positions = [],
            t._curves = [],
            t._boneLengths = [],
            t._pathGlobalVertices = [],
            t._segments = [10],
            t
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.PathConstraint]"
        }
        ,
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this.dirty = !1,
            this.pathOffset = 0,
            this.position = 0,
            this.spacing = 0,
            this.rotateOffset = 0,
            this.rotateMix = 1,
            this.translateMix = 1,
            this._pathSlot = null,
            this._bones.length = 0,
            this._spaces.length = 0,
            this._positions.length = 0,
            this._curves.length = 0,
            this._boneLengths.length = 0,
            this._pathGlobalVertices.length = 0
        }
        ,
        r.prototype._updatePathVertices = function(t) {
            var e = this._armature
              , r = e.armatureData.parent
              , i = e.armatureData.scale
              , n = r.intArray
              , a = r.floatArray
              , s = t.offset
              , o = n[s + 0]
              , l = n[s + 2];
            this._pathGlobalVertices.length = 2 * o;
            var h = t.weight;
            if (null !== h)
                for (var u = this._pathSlot._deformVertices.bones, c = h.bones.length, f = h.offset, d = n[f + 1], p = d, _ = f + 2 + c, m = 0, g = 0; o > m; m++) {
                    for (var y = n[_++], v = 0, b = 0, w = 0, T = y; T > w; w++) {
                        var D = n[_++]
                          , S = u[D];
                        if (null !== S) {
                            S.updateByConstraint();
                            var E = S.globalTransformMatrix
                              , A = a[p++]
                              , x = a[p++] * i
                              , P = a[p++] * i;
                            v += (E.a * x + E.c * P + E.tx) * A,
                            b += (E.b * x + E.d * P + E.ty) * A
                        }
                    }
                    this._pathGlobalVertices[g++] = v,
                    this._pathGlobalVertices[g++] = b
                }
            else {
                var C = this._pathSlot.parent;
                C.updateByConstraint();
                for (var E = C.globalTransformMatrix, m = 0, O = l; o > m; m += 2) {
                    var x = a[O++] * i
                      , P = a[O++] * i
                      , k = E.a * x + E.c * P + E.tx
                      , I = E.b * x + E.d * P + E.ty;
                    this._pathGlobalVertices[m] = k,
                    this._pathGlobalVertices[m + 1] = I
                }
            }
        }
        ,
        r.prototype._computeVertices = function(t, e, r, i) {
            for (var n = r, a = t; e > n; n += 2)
                i[n] = this._pathGlobalVertices[a++],
                i[n + 1] = this._pathGlobalVertices[a++]
        }
        ,
        r.prototype._computeBezierCurve = function(t, e, r, i, n) {
            var a = this._armature
              , s = a.armatureData.parent.intArray
              , o = s[t.vertices.offset + 0]
              , l = this._positions
              , h = this._spaces
              , u = t.closed
              , c = Array()
              , f = 2 * o
              , d = f / 6
              , p = -1
              , _ = this.position;
            l.length = 3 * e + 2;
            var m = 0;
            if (t.constantSpeed) {
                u ? (f += 2,
                c.length = o,
                this._computeVertices(2, f - 4, 0, c),
                this._computeVertices(0, 2, f - 4, c),
                c[f - 2] = c[0],
                c[f - 1] = c[1]) : (d--,
                f -= 4,
                c.length = f,
                this._computeVertices(2, f, 0, c));
                var g = new Array(d);
                m = 0;
                for (var y, v, b, w, T, D, S, E, A = c[0], x = c[1], P = 0, C = 0, O = 0, k = 0, I = 0, R = 0, B = 0, M = 2; d > B; B++,
                M += 6)
                    P = c[M],
                    C = c[M + 1],
                    O = c[M + 2],
                    k = c[M + 3],
                    I = c[M + 4],
                    R = c[M + 5],
                    y = .1875 * (A - 2 * P + O),
                    v = .1875 * (x - 2 * C + k),
                    b = .09375 * (3 * (P - O) - A + I),
                    w = .09375 * (3 * (C - k) - x + R),
                    T = 2 * y + b,
                    D = 2 * v + w,
                    S = .75 * (P - A) + y + .16666667 * b,
                    E = .75 * (C - x) + v + .16666667 * w,
                    m += Math.sqrt(S * S + E * E),
                    S += T,
                    E += D,
                    T += b,
                    D += w,
                    m += Math.sqrt(S * S + E * E),
                    S += T,
                    E += D,
                    m += Math.sqrt(S * S + E * E),
                    S += T + b,
                    E += D + w,
                    m += Math.sqrt(S * S + E * E),
                    g[B] = m,
                    A = I,
                    x = R;
                if (i && (_ *= m),
                n)
                    for (var B = 0; e > B; B++)
                        h[B] *= m;
                for (var F = this._segments, L = 0, B = 0, N = 0, j = 0, z = 0; e > B; B++,
                N += 3) {
                    var U = h[B];
                    _ += U;
                    var V = _;
                    if (u)
                        V %= m,
                        0 > V && (V += m),
                        j = 0;
                    else {
                        if (0 > V)
                            continue;
                        if (V > m)
                            continue
                    }
                    for (; ; j++) {
                        var $ = g[j];
                        if (!(V > $)) {
                            if (0 === j)
                                V /= $;
                            else {
                                var G = g[j - 1];
                                V = (V - G) / ($ - G)
                            }
                            break
                        }
                    }
                    if (j !== p) {
                        p = j;
                        var W = 6 * j;
                        for (A = c[W],
                        x = c[W + 1],
                        P = c[W + 2],
                        C = c[W + 3],
                        O = c[W + 4],
                        k = c[W + 5],
                        I = c[W + 6],
                        R = c[W + 7],
                        y = .03 * (A - 2 * P + O),
                        v = .03 * (x - 2 * C + k),
                        b = .006 * (3 * (P - O) - A + I),
                        w = .006 * (3 * (C - k) - x + R),
                        T = 2 * y + b,
                        D = 2 * v + w,
                        S = .3 * (P - A) + y + .16666667 * b,
                        E = .3 * (C - x) + v + .16666667 * w,
                        L = Math.sqrt(S * S + E * E),
                        F[0] = L,
                        W = 1; 8 > W; W++)
                            S += T,
                            E += D,
                            T += b,
                            D += w,
                            L += Math.sqrt(S * S + E * E),
                            F[W] = L;
                        S += T,
                        E += D,
                        L += Math.sqrt(S * S + E * E),
                        F[8] = L,
                        S += T + b,
                        E += D + w,
                        L += Math.sqrt(S * S + E * E),
                        F[9] = L,
                        z = 0
                    }
                    for (V *= L; ; z++) {
                        var H = F[z];
                        if (!(V > H)) {
                            if (0 === z)
                                V /= H;
                            else {
                                var G = F[z - 1];
                                V = z + (V - G) / (H - G)
                            }
                            break
                        }
                    }
                    this.addCurvePosition(.1 * V, A, x, P, C, O, k, I, R, l, N, r)
                }
            } else {
                var Y = t.curveLengths;
                if (d -= u ? 1 : 2,
                m = Y[d],
                i && (_ *= m),
                n)
                    for (var B = 0; e > B; B++)
                        h[B] *= m;
                c.length = 8;
                for (var B = 0, N = 0, j = 0; e > B; B++,
                N += 3) {
                    var U = h[B];
                    if (_ += U,
                    u)
                        _ %= m,
                        0 > _ && (_ += m),
                        j = 0;
                    else {
                        if (0 > _)
                            continue;
                        if (_ > m)
                            continue
                    }
                    for (var X = 0; ; j++) {
                        var Z = Y[j];
                        if (!(_ > Z)) {
                            if (0 === j)
                                X = _ / Z;
                            else {
                                var q = Y[j - 1];
                                X = (_ - q) / (Z - q)
                            }
                            break
                        }
                    }
                    j !== p && (p = j,
                    u && j === d ? (this._computeVertices(f - 4, 4, 0, c),
                    this._computeVertices(0, 4, 4, c)) : this._computeVertices(6 * j + 2, 8, 0, c)),
                    this.addCurvePosition(X, c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7], l, N, r)
                }
            }
        }
        ,
        r.prototype.addCurvePosition = function(t, e, r, i, n, a, s, o, l, h, u, c) {
            if (0 === t)
                return h[u] = e,
                h[u + 1] = r,
                void (h[u + 2] = 0);
            if (1 === t)
                return h[u] = o,
                h[u + 1] = l,
                void (h[u + 2] = 0);
            var f = 1 - t
              , d = f * f
              , p = t * t
              , _ = d * f
              , m = d * t * 3
              , g = f * p * 3
              , y = t * p
              , v = _ * e + m * i + g * a + y * o
              , b = _ * r + m * n + g * s + y * l;
            h[u] = v,
            h[u + 1] = b,
            c ? h[u + 2] = Math.atan2(b - (_ * r + m * n + g * s), v - (_ * e + m * i + g * a)) : h[u + 2] = 0
        }
        ,
        r.prototype.init = function(t, e) {
            this._constraintData = t,
            this._armature = e;
            var r = t;
            this.pathOffset = r.pathDisplayData.vertices.offset,
            this.position = r.position,
            this.spacing = r.spacing,
            this.rotateOffset = r.rotateOffset,
            this.rotateMix = r.rotateMix,
            this.translateMix = r.translateMix,
            this._root = this._armature.getBone(r.root.name),
            this._target = this._armature.getBone(r.target.name),
            this._pathSlot = this._armature.getSlot(r.pathSlot.name);
            for (var i = 0, n = r.bones.length; n > i; i++) {
                var a = this._armature.getBone(r.bones[i].name);
                null !== a && this._bones.push(a)
            }
            2 === r.rotateMode && (this._boneLengths.length = this._bones.length),
            this._root._hasConstraint = !0
        }
        ,
        r.prototype.update = function() {
            var e = this._pathSlot;
            if (null !== e._deformVertices && null !== e._deformVertices.verticesData && e._deformVertices.verticesData.offset === this.pathOffset) {
                var r = this._constraintData
                  , i = e._displayData
                  , n = !1
                  , a = e._deformVertices;
                if (this._root._childrenTransformDirty ? (this._updatePathVertices(i.vertices),
                n = !0) : null !== a && (a.verticesDirty || a.isBonesUpdate()) && (this._updatePathVertices(i.vertices),
                a.verticesDirty = !1,
                n = !0),
                n || this.dirty) {
                    var s = r.positionMode
                      , o = r.spacingMode
                      , l = r.rotateMode
                      , h = this._bones
                      , u = 0 === o
                      , c = 2 === l
                      , f = 0 === l
                      , d = h.length
                      , p = f ? d : d + 1
                      , _ = this.spacing
                      , m = this._spaces;
                    if (m.length = p,
                    c || u) {
                        m[0] = 0;
                        for (var g = 0, y = p - 1; y > g; g++) {
                            var v = h[g];
                            v.updateByConstraint();
                            var b = v._boneData.length
                              , w = v.globalTransformMatrix
                              , T = b * w.a
                              , D = b * w.b
                              , S = Math.sqrt(T * T + D * D);
                            c && (this._boneLengths[g] = S),
                            m[g + 1] = (b + _) * S / b
                        }
                    } else
                        for (var g = 0; p > g; g++)
                            m[g] = _;
                    this._computeBezierCurve(i, p, f, 1 === s, 2 === o);
                    var E, A = this._positions, x = this.rotateOffset, P = A[0], C = A[1];
                    if (0 === x)
                        E = 1 === l;
                    else {
                        E = !1;
                        var v = e.parent;
                        if (null !== v) {
                            var w = v.globalTransformMatrix;
                            x *= w.a * w.d - w.b * w.c > 0 ? t.Transform.DEG_RAD : -t.Transform.DEG_RAD
                        }
                    }
                    for (var O = this.rotateMix, k = this.translateMix, g = 0, I = 3; d > g; g++,
                    I += 3) {
                        var v = h[g];
                        v.updateByConstraint();
                        var w = v.globalTransformMatrix;
                        w.tx += (P - w.tx) * k,
                        w.ty += (C - w.ty) * k;
                        var T = A[I]
                          , D = A[I + 1]
                          , R = T - P
                          , B = D - C;
                        if (c) {
                            var M = this._boneLengths[g]
                              , F = (Math.sqrt(R * R + B * B) / M - 1) * O + 1;
                            w.a *= F,
                            w.b *= F
                        }
                        if (P = T,
                        C = D,
                        O > 0) {
                            var L = w.a
                              , N = w.b
                              , j = w.c
                              , z = w.d
                              , U = void 0
                              , V = void 0
                              , $ = void 0;
                            if (U = f ? A[I - 1] : Math.atan2(B, R),
                            U -= Math.atan2(N, L),
                            E) {
                                V = Math.cos(U),
                                $ = Math.sin(U);
                                var G = v._boneData.length;
                                P += (G * (V * L - $ * N) - R) * O,
                                C += (G * ($ * L + V * N) - B) * O
                            } else
                                U += x;
                            U > t.Transform.PI ? U -= t.Transform.PI_D : U < -t.Transform.PI && (U += t.Transform.PI_D),
                            U *= O,
                            V = Math.cos(U),
                            $ = Math.sin(U),
                            w.a = V * L - $ * N,
                            w.b = $ * L + V * N,
                            w.c = V * j - $ * z,
                            w.d = $ * j + V * z
                        }
                        v.global.fromMatrix(w)
                    }
                    this.dirty = !1
                }
            }
        }
        ,
        r.prototype.invalidUpdate = function() {}
        ,
        r
    }(e);
    t.PathConstraint = i
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function t(t) {
            void 0 === t && (t = 0),
            this.time = 0,
            this.timeScale = 1,
            this._systemTime = 0,
            this._animatebles = [],
            this._clock = null,
            this.time = t,
            this._systemTime = .001 * (new Date).getTime()
        }
        return t.prototype.advanceTime = function(t) {
            t !== t && (t = 0);
            var e = .001 * Date.now();
            if (0 > t && (t = e - this._systemTime),
            this._systemTime = e,
            1 !== this.timeScale && (t *= this.timeScale),
            0 !== t) {
                0 > t ? this.time -= t : this.time += t;
                for (var r = 0, i = 0, n = this._animatebles.length; n > r; ++r) {
                    var a = this._animatebles[r];
                    null !== a ? (i > 0 && (this._animatebles[r - i] = a,
                    this._animatebles[r] = null),
                    a.advanceTime(t)) : i++
                }
                if (i > 0) {
                    for (n = this._animatebles.length; n > r; ++r) {
                        var s = this._animatebles[r];
                        null !== s ? this._animatebles[r - i] = s : i++
                    }
                    this._animatebles.length -= i
                }
            }
        }
        ,
        t.prototype.contains = function(t) {
            if (t === this)
                return !1;
            for (var e = t; e !== this && null !== e; )
                e = e.clock;
            return e === this
        }
        ,
        t.prototype.add = function(t) {
            this._animatebles.indexOf(t) < 0 && (this._animatebles.push(t),
            t.clock = this)
        }
        ,
        t.prototype.remove = function(t) {
            var e = this._animatebles.indexOf(t);
            e >= 0 && (this._animatebles[e] = null,
            t.clock = null)
        }
        ,
        t.prototype.clear = function() {
            for (var t = 0, e = this._animatebles; t < e.length; t++) {
                var r = e[t];
                null !== r && (r.clock = null)
            }
        }
        ,
        Object.defineProperty(t.prototype, "clock", {
            get: function() {
                return this._clock
            },
            set: function(t) {
                this._clock !== t && (null !== this._clock && this._clock.remove(this),
                this._clock = t,
                null !== this._clock && this._clock.add(this))
            },
            enumerable: !0,
            configurable: !0
        }),
        t.clock = new t,
        t
    }();
    t.WorldClock = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._animationNames = [],
            t._animationStates = [],
            t._animations = {},
            t._animationConfig = null,
            t
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.Animation]"
        }
        ,
        r.prototype._onClear = function() {
            for (var t = 0, e = this._animationStates; t < e.length; t++) {
                var r = e[t];
                r.returnToPool()
            }
            for (var i in this._animations)
                delete this._animations[i];
            null !== this._animationConfig && this._animationConfig.returnToPool(),
            this.timeScale = 1,
            this._lockUpdate = !1,
            this._animationDirty = !1,
            this._inheritTimeScale = 1,
            this._animationNames.length = 0,
            this._animationStates.length = 0,
            this._armature = null,
            this._animationConfig = null,
            this._lastAnimationState = null
        }
        ,
        r.prototype._fadeOut = function(t) {
            switch (t.fadeOutMode) {
            case 1:
                for (var e = 0, r = this._animationStates; e < r.length; e++) {
                    var i = r[e];
                    null === i._parent && i.layer === t.layer && i.fadeOut(t.fadeOutTime, t.pauseFadeOut)
                }
                break;
            case 2:
                for (var n = 0, a = this._animationStates; n < a.length; n++) {
                    var i = a[n];
                    null === i._parent && i.group === t.group && i.fadeOut(t.fadeOutTime, t.pauseFadeOut)
                }
                break;
            case 3:
                for (var s = 0, o = this._animationStates; s < o.length; s++) {
                    var i = o[s];
                    null === i._parent && i.layer === t.layer && i.group === t.group && i.fadeOut(t.fadeOutTime, t.pauseFadeOut)
                }
                break;
            case 4:
                for (var l = 0, h = this._animationStates; l < h.length; l++) {
                    var i = h[l];
                    null === i._parent && i.fadeOut(t.fadeOutTime, t.pauseFadeOut)
                }
                break;
            case 0:
            case 5:
            }
        }
        ,
        r.prototype.init = function(e) {
            null === this._armature && (this._armature = e,
            this._animationConfig = t.BaseObject.borrowObject(t.AnimationConfig))
        }
        ,
        r.prototype.advanceTime = function(t) {
            0 > t && (t = -t),
            this._armature.inheritAnimation && null !== this._armature._parent ? this._inheritTimeScale = this._armature._parent._armature.animation._inheritTimeScale * this.timeScale : this._inheritTimeScale = this.timeScale,
            1 !== this._inheritTimeScale && (t *= this._inheritTimeScale);
            var e = this._animationStates.length;
            if (1 === e) {
                var r = this._animationStates[0];
                if (r._fadeState > 0 && r._subFadeState > 0)
                    this._armature._dragonBones.bufferObject(r),
                    this._animationStates.length = 0,
                    this._lastAnimationState = null;
                else {
                    var i = r._animationData
                      , n = i.cacheFrameRate;
                    if (this._animationDirty && n > 0) {
                        this._animationDirty = !1;
                        for (var a = 0, s = this._armature.getBones(); a < s.length; a++) {
                            var o = s[a];
                            o._cachedFrameIndices = i.getBoneCachedFrameIndices(o.name)
                        }
                        for (var l = 0, h = this._armature.getSlots(); l < h.length; l++) {
                            var u = h[l]
                              , c = u.rawDisplayDatas;
                            if (null !== c && c.length > 0) {
                                var f = c[0];
                                if (null !== f && f.parent === this._armature.armatureData.defaultSkin) {
                                    u._cachedFrameIndices = i.getSlotCachedFrameIndices(u.name);
                                    continue
                                }
                            }
                            u._cachedFrameIndices = null
                        }
                    }
                    r.advanceTime(t, n)
                }
            } else if (e > 1) {
                for (var d = 0, p = 0; e > d; ++d) {
                    var r = this._animationStates[d];
                    r._fadeState > 0 && r._subFadeState > 0 ? (p++,
                    this._armature._dragonBones.bufferObject(r),
                    this._animationDirty = !0,
                    this._lastAnimationState === r && (this._lastAnimationState = null)) : (p > 0 && (this._animationStates[d - p] = r),
                    r.advanceTime(t, 0)),
                    d === e - 1 && p > 0 && (this._animationStates.length -= p,
                    null === this._lastAnimationState && this._animationStates.length > 0 && (this._lastAnimationState = this._animationStates[this._animationStates.length - 1]))
                }
                this._armature._cacheFrameIndex = -1
            } else
                this._armature._cacheFrameIndex = -1
        }
        ,
        r.prototype.reset = function() {
            for (var t = 0, e = this._animationStates; t < e.length; t++) {
                var r = e[t];
                r.returnToPool()
            }
            this._animationDirty = !1,
            this._animationConfig.clear(),
            this._animationStates.length = 0,
            this._lastAnimationState = null
        }
        ,
        r.prototype.stop = function(t) {
            if (void 0 === t && (t = null),
            null !== t) {
                var e = this.getState(t);
                null !== e && e.stop()
            } else
                for (var r = 0, i = this._animationStates; r < i.length; r++) {
                    var e = i[r];
                    e.stop()
                }
        }
        ,
        r.prototype.playConfig = function(e) {
            var r = e.animation;
            if (!(r in this._animations))
                return console.warn("Non-existent animation.\n", "DragonBones name: " + this._armature.armatureData.parent.name, "Armature name: " + this._armature.name, "Animation name: " + r),
                null;
            var i = this._animations[r];
            if (5 === e.fadeOutMode)
                for (var n = 0, a = this._animationStates; n < a.length; n++) {
                    var s = a[n];
                    if (s._animationData === i)
                        return s
                }
            0 === this._animationStates.length ? e.fadeInTime = 0 : e.fadeInTime < 0 && (e.fadeInTime = i.fadeInTime),
            e.fadeOutTime < 0 && (e.fadeOutTime = e.fadeInTime),
            e.timeScale <= -100 && (e.timeScale = 1 / i.scale),
            i.frameCount > 1 ? (e.position < 0 ? (e.position %= i.duration,
            e.position = i.duration - e.position) : e.position === i.duration ? e.position -= 1e-6 : e.position > i.duration && (e.position %= i.duration),
            e.duration > 0 && e.position + e.duration > i.duration && (e.duration = i.duration - e.position),
            e.playTimes < 0 && (e.playTimes = i.playTimes)) : (e.playTimes = 1,
            e.position = 0,
            e.duration > 0 && (e.duration = 0)),
            0 === e.duration && (e.duration = -1),
            this._fadeOut(e);
            var o = t.BaseObject.borrowObject(t.AnimationState);
            if (o.init(this._armature, i, e),
            this._animationDirty = !0,
            this._armature._cacheFrameIndex = -1,
            this._animationStates.length > 0) {
                for (var l = !1, h = 0, u = this._animationStates.length; u > h; ++h) {
                    if (o.layer > this._animationStates[h].layer) {
                        l = !0,
                        this._animationStates.splice(h, 0, o);
                        break
                    }
                    if (h !== u - 1 && o.layer > this._animationStates[h + 1].layer) {
                        l = !0,
                        this._animationStates.splice(h + 1, 0, o);
                        break
                    }
                }
                l || this._animationStates.push(o)
            } else
                this._animationStates.push(o);
            for (var c = 0, f = this._armature.getSlots(); c < f.length; c++) {
                var d = f[c]
                  , p = d.childArmature;
                null !== p && p.inheritAnimation && p.animation.hasAnimation(r) && null === p.animation.getState(r) && p.animation.fadeIn(r)
            }
            var _ = !1;
            for (var m in i.animationTimelines) {
                this._lockUpdate || (_ = !0,
                this._lockUpdate = !0);
                var g = this.fadeIn(m, e.fadeInTime, 1, o.layer, null, 0);
                null !== g && (g.resetToPose = !1,
                g._parent = o,
                g.stop())
            }
            return _ && (this._lockUpdate = !1),
            this._lockUpdate || (e.fadeInTime <= 0 && this._armature.advanceTime(0),
            this._lastAnimationState = o),
            o
        }
        ,
        r.prototype.play = function(t, e) {
            if (void 0 === t && (t = null),
            void 0 === e && (e = -1),
            this._animationConfig.clear(),
            this._animationConfig.resetToPose = !0,
            this._animationConfig.playTimes = e,
            this._animationConfig.fadeInTime = 0,
            this._animationConfig.animation = null !== t ? t : "",
            null !== t && t.length > 0)
                this.playConfig(this._animationConfig);
            else if (null === this._lastAnimationState) {
                var r = this._armature.armatureData.defaultAnimation;
                null !== r && (this._animationConfig.animation = r.name,
                this.playConfig(this._animationConfig))
            } else
                this._lastAnimationState.isPlaying || this._lastAnimationState.isCompleted ? (this._animationConfig.animation = this._lastAnimationState.name,
                this.playConfig(this._animationConfig)) : this._lastAnimationState.play();
            return this._lastAnimationState
        }
        ,
        r.prototype.fadeIn = function(t, e, r, i, n, a) {
            return void 0 === e && (e = -1),
            void 0 === r && (r = -1),
            void 0 === i && (i = 0),
            void 0 === n && (n = null),
            void 0 === a && (a = 3),
            this._animationConfig.clear(),
            this._animationConfig.fadeOutMode = a,
            this._animationConfig.playTimes = r,
            this._animationConfig.layer = i,
            this._animationConfig.fadeInTime = e,
            this._animationConfig.animation = t,
            this._animationConfig.group = null !== n ? n : "",
            this.playConfig(this._animationConfig)
        }
        ,
        r.prototype.gotoAndPlayByTime = function(t, e, r) {
            return void 0 === e && (e = 0),
            void 0 === r && (r = -1),
            this._animationConfig.clear(),
            this._animationConfig.resetToPose = !0,
            this._animationConfig.playTimes = r,
            this._animationConfig.position = e,
            this._animationConfig.fadeInTime = 0,
            this._animationConfig.animation = t,
            this.playConfig(this._animationConfig)
        }
        ,
        r.prototype.gotoAndPlayByFrame = function(t, e, r) {
            void 0 === e && (e = 0),
            void 0 === r && (r = -1),
            this._animationConfig.clear(),
            this._animationConfig.resetToPose = !0,
            this._animationConfig.playTimes = r,
            this._animationConfig.fadeInTime = 0,
            this._animationConfig.animation = t;
            var i = t in this._animations ? this._animations[t] : null;
            return null !== i && (this._animationConfig.position = i.duration * e / i.frameCount),
            this.playConfig(this._animationConfig)
        }
        ,
        r.prototype.gotoAndPlayByProgress = function(t, e, r) {
            void 0 === e && (e = 0),
            void 0 === r && (r = -1),
            this._animationConfig.clear(),
            this._animationConfig.resetToPose = !0,
            this._animationConfig.playTimes = r,
            this._animationConfig.fadeInTime = 0,
            this._animationConfig.animation = t;
            var i = t in this._animations ? this._animations[t] : null;
            return null !== i && (this._animationConfig.position = i.duration * (e > 0 ? e : 0)),
            this.playConfig(this._animationConfig)
        }
        ,
        r.prototype.gotoAndStopByTime = function(t, e) {
            void 0 === e && (e = 0);
            var r = this.gotoAndPlayByTime(t, e, 1);
            return null !== r && r.stop(),
            r
        }
        ,
        r.prototype.gotoAndStopByFrame = function(t, e) {
            void 0 === e && (e = 0);
            var r = this.gotoAndPlayByFrame(t, e, 1);
            return null !== r && r.stop(),
            r
        }
        ,
        r.prototype.gotoAndStopByProgress = function(t, e) {
            void 0 === e && (e = 0);
            var r = this.gotoAndPlayByProgress(t, e, 1);
            return null !== r && r.stop(),
            r
        }
        ,
        r.prototype.getState = function(t) {
            for (var e = this._animationStates.length; e--; ) {
                var r = this._animationStates[e];
                if (r.name === t)
                    return r
            }
            return null
        }
        ,
        r.prototype.hasAnimation = function(t) {
            return t in this._animations
        }
        ,
        r.prototype.getStates = function() {
            return this._animationStates
        }
        ,
        Object.defineProperty(r.prototype, "isPlaying", {
            get: function() {
                for (var t = 0, e = this._animationStates; t < e.length; t++) {
                    var r = e[t];
                    if (r.isPlaying)
                        return !0
                }
                return !1
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "isCompleted", {
            get: function() {
                for (var t = 0, e = this._animationStates; t < e.length; t++) {
                    var r = e[t];
                    if (!r.isCompleted)
                        return !1
                }
                return this._animationStates.length > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "lastAnimationName", {
            get: function() {
                return null !== this._lastAnimationState ? this._lastAnimationState.name : ""
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationNames", {
            get: function() {
                return this._animationNames
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animations", {
            get: function() {
                return this._animations
            },
            set: function(t) {
                if (this._animations !== t) {
                    this._animationNames.length = 0;
                    for (var e in this._animations)
                        delete this._animations[e];
                    for (var e in t)
                        this._animationNames.push(e),
                        this._animations[e] = t[e]
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationConfig", {
            get: function() {
                return this._animationConfig.clear(),
                this._animationConfig
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "lastAnimationState", {
            get: function() {
                return this._lastAnimationState
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.gotoAndPlay = function(t, e, r, i, n, a, s, o, l) {
            void 0 === e && (e = -1),
            void 0 === r && (r = -1),
            void 0 === i && (i = -1),
            void 0 === n && (n = 0),
            void 0 === a && (a = null),
            void 0 === s && (s = 3),
            void 0 === o && (o = !0),
            void 0 === l && (l = !0),
            console.warn("Deprecated."),
            this._animationConfig.clear(),
            this._animationConfig.resetToPose = !0,
            this._animationConfig.fadeOutMode = s,
            this._animationConfig.playTimes = i,
            this._animationConfig.layer = n,
            this._animationConfig.fadeInTime = e,
            this._animationConfig.animation = t,
            this._animationConfig.group = null !== a ? a : "";
            var h = this._animations[t];
            return h && r > 0 && (this._animationConfig.timeScale = h.duration / r),
            this.playConfig(this._animationConfig)
        }
        ,
        r.prototype.gotoAndStop = function(t, e) {
            return void 0 === e && (e = 0),
            console.warn("Deprecated."),
            this.gotoAndStopByTime(t, e)
        }
        ,
        Object.defineProperty(r.prototype, "animationList", {
            get: function() {
                return console.warn("Deprecated."),
                this._animationNames
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationDataList", {
            get: function() {
                console.warn("Deprecated.");
                for (var t = [], e = 0, r = this._animationNames.length; r > e; ++e)
                    t.push(this._animations[this._animationNames[e]]);
                return t
            },
            enumerable: !0,
            configurable: !0
        }),
        r
    }(t.BaseObject);
    t.Animation = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function n() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._blendState = new i,
            t._boneMask = [],
            t._boneTimelines = [],
            t._surfaceTimelines = [],
            t._slotTimelines = [],
            t._constraintTimelines = [],
            t._animationTimelines = [],
            t._poseTimelines = [],
            t._bonePoses = {},
            t._actionTimeline = null,
            t._zOrderTimeline = null,
            t._parent = null,
            t
        }
        return __extends(n, e),
        n.toString = function() {
            return "[class dragonBones.AnimationState]"
        }
        ,
        n.prototype._onClear = function() {
            for (var t = 0, e = this._boneTimelines; t < e.length; t++) {
                var r = e[t];
                r.returnToPool()
            }
            for (var i = 0, n = this._surfaceTimelines; i < n.length; i++) {
                var r = n[i];
                r.returnToPool()
            }
            for (var a = 0, s = this._slotTimelines; a < s.length; a++) {
                var r = s[a];
                r.returnToPool()
            }
            for (var o = 0, l = this._constraintTimelines; o < l.length; o++) {
                var r = l[o];
                r.returnToPool()
            }
            for (var h = 0, u = this._animationTimelines; h < u.length; h++) {
                var r = u[h];
                r.returnToPool()
            }
            for (var c in this._bonePoses)
                this._bonePoses[c].returnToPool(),
                delete this._bonePoses[c];
            null !== this._actionTimeline && this._actionTimeline.returnToPool(),
            null !== this._zOrderTimeline && this._zOrderTimeline.returnToPool(),
            this.actionEnabled = !1,
            this.additiveBlending = !1,
            this.displayControl = !1,
            this.resetToPose = !1,
            this.playTimes = 1,
            this.layer = 0,
            this.timeScale = 1,
            this.weight = 1,
            this.autoFadeOutTime = 0,
            this.fadeTotalTime = 0,
            this.name = "",
            this.group = "",
            this._timelineDirty = 2,
            this._playheadState = 0,
            this._fadeState = -1,
            this._subFadeState = -1,
            this._position = 0,
            this._duration = 0,
            this._fadeTime = 0,
            this._time = 0,
            this._fadeProgress = 0,
            this._weightResult = 0,
            this._blendState.clear(),
            this._boneMask.length = 0,
            this._boneTimelines.length = 0,
            this._surfaceTimelines.length = 0,
            this._slotTimelines.length = 0,
            this._constraintTimelines.length = 0,
            this._animationTimelines.length = 0,
            this._poseTimelines.length = 0,
            this._animationData = null,
            this._armature = null,
            this._actionTimeline = null,
            this._zOrderTimeline = null,
            this._parent = null
        }
        ,
        n.prototype._updateTimelines = function() {
            for (var e = 0, r = this._armature._constraints; e < r.length; e++) {
                var i = r[e]
                  , n = this._animationData.getConstraintTimelines(i.name);
                if (null !== n)
                    for (var a = 0, s = n; a < s.length; a++) {
                        var o = s[a];
                        switch (o.type) {
                        case 30:
                            var l = t.BaseObject.borrowObject(t.IKConstraintTimelineState);
                            l.constraint = i,
                            l.init(this._armature, this, o),
                            this._constraintTimelines.push(l)
                        }
                    }
                else if (this.resetToPose) {
                    var l = t.BaseObject.borrowObject(t.IKConstraintTimelineState);
                    l.constraint = i,
                    l.init(this._armature, this, null),
                    this._constraintTimelines.push(l),
                    this._poseTimelines.push(l)
                }
            }
            for (var h = 0, u = this._armature.animation.getStates(); h < u.length; h++) {
                var c = u[h];
                if (c._parent === this) {
                    var n = this._animationData.getAnimationTimelines(c.name);
                    if (null !== n)
                        for (var f = 0, d = n; f < d.length; f++) {
                            var o = d[f];
                            switch (o.type) {
                            case 40:
                                var l = t.BaseObject.borrowObject(t.AnimationTimelineState);
                                l.animationState = c,
                                l.init(this._armature, this, o),
                                this._animationTimelines.push(l)
                            }
                        }
                }
            }
        }
        ,
        n.prototype._updateBoneAndSlotTimelines = function() {
            for (var e = {}, i = 0, n = this._boneTimelines; i < n.length; i++) {
                var a = n[i]
                  , s = a.bone.name;
                s in e || (e[s] = []),
                e[s].push(a)
            }
            for (var o = 0, l = this._armature.getBones(); o < l.length; o++) {
                var h = l[o]
                  , s = h.name;
                if (this.containsBoneMask(s))
                    if (s in e)
                        delete e[s];
                    else if (0 === h._boneData.type) {
                        var u = this._animationData.getBoneTimelines(s)
                          , c = s in this._bonePoses ? this._bonePoses[s] : this._bonePoses[s] = t.BaseObject.borrowObject(r);
                        if (null !== u)
                            for (var f = 0, d = u; f < d.length; f++) {
                                var p = d[f];
                                switch (p.type) {
                                case 10:
                                    var a = t.BaseObject.borrowObject(t.BoneAllTimelineState);
                                    a.bone = h,
                                    a.bonePose = c,
                                    a.init(this._armature, this, p),
                                    this._boneTimelines.push(a);
                                    break;
                                case 11:
                                    var a = t.BaseObject.borrowObject(t.BoneTranslateTimelineState);
                                    a.bone = h,
                                    a.bonePose = c,
                                    a.init(this._armature, this, p),
                                    this._boneTimelines.push(a);
                                    break;
                                case 12:
                                    var a = t.BaseObject.borrowObject(t.BoneRotateTimelineState);
                                    a.bone = h,
                                    a.bonePose = c,
                                    a.init(this._armature, this, p),
                                    this._boneTimelines.push(a);
                                    break;
                                case 13:
                                    var a = t.BaseObject.borrowObject(t.BoneScaleTimelineState);
                                    a.bone = h,
                                    a.bonePose = c,
                                    a.init(this._armature, this, p),
                                    this._boneTimelines.push(a)
                                }
                            }
                        else if (this.resetToPose) {
                            var a = t.BaseObject.borrowObject(t.BoneAllTimelineState);
                            a.bone = h,
                            a.bonePose = c,
                            a.init(this._armature, this, null),
                            this._boneTimelines.push(a),
                            this._poseTimelines.push(a)
                        }
                    } else if (1 === h._boneData.type) {
                        var u = this._animationData.getSurfaceTimelines(s);
                        if (null !== u)
                            for (var _ = 0, m = u; _ < m.length; _++) {
                                var p = m[_];
                                switch (p.type) {
                                case 50:
                                    var a = t.BaseObject.borrowObject(t.SurfaceTimelineState);
                                    a.surface = h,
                                    a.init(this._armature, this, p),
                                    this._surfaceTimelines.push(a)
                                }
                            }
                        else if (this.resetToPose) {
                            var a = t.BaseObject.borrowObject(t.SurfaceTimelineState);
                            a.surface = h,
                            a.init(this._armature, this, null),
                            this._surfaceTimelines.push(a),
                            this._poseTimelines.push(a)
                        }
                    }
            }
            for (var g in e)
                for (var y = 0, v = e[g]; y < v.length; y++) {
                    var a = v[y];
                    this._boneTimelines.splice(this._boneTimelines.indexOf(a), 1),
                    a.returnToPool()
                }
            for (var b = {}, w = [], T = 0, D = this._slotTimelines; T < D.length; T++) {
                var a = D[T]
                  , s = a.slot.name;
                s in b || (b[s] = []),
                b[s].push(a)
            }
            for (var S = 0, E = this._armature.getSlots(); S < E.length; S++) {
                var A = E[S]
                  , x = A.parent.name;
                if (this.containsBoneMask(x)) {
                    var s = A.name
                      , u = this._animationData.getSlotTimelines(s);
                    if (s in b)
                        delete b[s];
                    else {
                        var P = !1
                          , C = !1;
                        if (w.length = 0,
                        null !== u)
                            for (var O = 0, k = u; O < k.length; O++) {
                                var p = k[O];
                                switch (p.type) {
                                case 20:
                                    var a = t.BaseObject.borrowObject(t.SlotDislayTimelineState);
                                    a.slot = A,
                                    a.init(this._armature, this, p),
                                    this._slotTimelines.push(a),
                                    P = !0;
                                    break;
                                case 21:
                                    var a = t.BaseObject.borrowObject(t.SlotColorTimelineState);
                                    a.slot = A,
                                    a.init(this._armature, this, p),
                                    this._slotTimelines.push(a),
                                    C = !0;
                                    break;
                                case 22:
                                    var a = t.BaseObject.borrowObject(t.DeformTimelineState);
                                    a.slot = A,
                                    a.init(this._armature, this, p),
                                    this._slotTimelines.push(a),
                                    w.push(a.vertexOffset)
                                }
                            }
                        if (this.resetToPose) {
                            if (!P) {
                                var a = t.BaseObject.borrowObject(t.SlotDislayTimelineState);
                                a.slot = A,
                                a.init(this._armature, this, null),
                                this._slotTimelines.push(a),
                                this._poseTimelines.push(a)
                            }
                            if (!C) {
                                var a = t.BaseObject.borrowObject(t.SlotColorTimelineState);
                                a.slot = A,
                                a.init(this._armature, this, null),
                                this._slotTimelines.push(a),
                                this._poseTimelines.push(a)
                            }
                            if (null !== A.rawDisplayDatas)
                                for (var I = 0, R = A.rawDisplayDatas; I < R.length; I++) {
                                    var B = R[I];
                                    if (null !== B && 2 === B.type) {
                                        var M = B.vertices.offset;
                                        if (w.indexOf(M) < 0) {
                                            var a = t.BaseObject.borrowObject(t.DeformTimelineState);
                                            a.vertexOffset = M,
                                            a.slot = A,
                                            a.init(this._armature, this, null),
                                            this._slotTimelines.push(a),
                                            this._poseTimelines.push(a)
                                        }
                                    }
                                }
                        }
                    }
                }
            }
            for (var g in b)
                for (var F = 0, L = b[g]; F < L.length; F++) {
                    var a = L[F];
                    this._slotTimelines.splice(this._slotTimelines.indexOf(a), 1),
                    a.returnToPool()
                }
        }
        ,
        n.prototype._advanceFadeTime = function(e) {
            var r = this._fadeState > 0;
            if (this._subFadeState < 0) {
                this._subFadeState = 0;
                var i = r ? t.EventObject.FADE_OUT : t.EventObject.FADE_IN;
                if (this._armature.eventDispatcher.hasDBEventListener(i)) {
                    var n = t.BaseObject.borrowObject(t.EventObject);
                    n.type = i,
                    n.armature = this._armature,
                    n.animationState = this,
                    this._armature._dragonBones.bufferEvent(n)
                }
            }
            if (0 > e && (e = -e),
            this._fadeTime += e,
            this._fadeTime >= this.fadeTotalTime ? (this._subFadeState = 1,
            this._fadeProgress = r ? 0 : 1) : this._fadeTime > 0 ? this._fadeProgress = r ? 1 - this._fadeTime / this.fadeTotalTime : this._fadeTime / this.fadeTotalTime : this._fadeProgress = r ? 1 : 0,
            this._subFadeState > 0) {
                r || (this._playheadState |= 1,
                this._fadeState = 0);
                var i = r ? t.EventObject.FADE_OUT_COMPLETE : t.EventObject.FADE_IN_COMPLETE;
                if (this._armature.eventDispatcher.hasDBEventListener(i)) {
                    var n = t.BaseObject.borrowObject(t.EventObject);
                    n.type = i,
                    n.armature = this._armature,
                    n.animationState = this,
                    this._armature._dragonBones.bufferEvent(n)
                }
            }
        }
        ,
        n.prototype.init = function(e, r, i) {
            if (null === this._armature) {
                if (this._armature = e,
                this._animationData = r,
                this.resetToPose = i.resetToPose,
                this.additiveBlending = i.additiveBlending,
                this.displayControl = i.displayControl,
                this.actionEnabled = i.actionEnabled,
                this.layer = i.layer,
                this.playTimes = i.playTimes,
                this.timeScale = i.timeScale,
                this.fadeTotalTime = i.fadeInTime,
                this.autoFadeOutTime = i.autoFadeOutTime,
                this.weight = i.weight,
                this.name = i.name.length > 0 ? i.name : i.animation,
                this.group = i.group,
                i.pauseFadeIn ? this._playheadState = 2 : this._playheadState = 3,
                i.duration < 0 ? (this._position = 0,
                this._duration = this._animationData.duration,
                0 !== i.position ? this.timeScale >= 0 ? this._time = i.position : this._time = i.position - this._duration : this._time = 0) : (this._position = i.position,
                this._duration = i.duration,
                this._time = 0),
                this.timeScale < 0 && 0 === this._time && (this._time = -1e-6),
                this.fadeTotalTime <= 0 && (this._fadeProgress = .999999),
                i.boneMask.length > 0) {
                    this._boneMask.length = i.boneMask.length;
                    for (var n = 0, a = this._boneMask.length; a > n; ++n)
                        this._boneMask[n] = i.boneMask[n]
                }
                this._actionTimeline = t.BaseObject.borrowObject(t.ActionTimelineState),
                this._actionTimeline.init(this._armature, this, this._animationData.actionTimeline),
                this._actionTimeline.currentTime = this._time,
                this._actionTimeline.currentTime < 0 && (this._actionTimeline.currentTime = this._duration - this._actionTimeline.currentTime),
                null !== this._animationData.zOrderTimeline && (this._zOrderTimeline = t.BaseObject.borrowObject(t.ZOrderTimelineState),
                this._zOrderTimeline.init(this._armature, this, this._animationData.zOrderTimeline))
            }
        }
        ,
        n.prototype.advanceTime = function(e, r) {
            if (this._blendState.dirty = !1,
            (0 !== this._fadeState || 0 !== this._subFadeState) && this._advanceFadeTime(e),
            3 === this._playheadState && (1 !== this.timeScale && (e *= this.timeScale),
            this._time += e),
            0 !== this._timelineDirty && (2 === this._timelineDirty && this._updateTimelines(),
            this._timelineDirty = 0,
            this._updateBoneAndSlotTimelines()),
            0 !== this.weight) {
                var i = 0 === this._fadeState && r > 0
                  , n = !0
                  , a = !0
                  , s = this._time;
                if (this._weightResult = this.weight * this._fadeProgress,
                null !== this._parent && (this._weightResult *= this._parent._weightResult / this._parent._fadeProgress),
                this._actionTimeline.playState <= 0 && this._actionTimeline.update(s),
                i) {
                    var o = 2 * r;
                    this._actionTimeline.currentTime = Math.floor(this._actionTimeline.currentTime * o) / o
                }
                if (null !== this._zOrderTimeline && this._zOrderTimeline.playState <= 0 && this._zOrderTimeline.update(s),
                i) {
                    var l = Math.floor(this._actionTimeline.currentTime * r);
                    this._armature._cacheFrameIndex === l ? (n = !1,
                    a = !1) : (this._armature._cacheFrameIndex = l,
                    this._animationData.cachedFrames[l] ? a = !1 : this._animationData.cachedFrames[l] = !0)
                }
                if (n) {
                    if (a)
                        for (var h = 0, u = this._boneTimelines.length; u > h; ++h) {
                            var c = this._boneTimelines[h];
                            if (c.playState <= 0 && c.update(s),
                            h === u - 1 || c.bone !== this._boneTimelines[h + 1].bone) {
                                var f = c.bone._blendState.update(this._weightResult, this.layer);
                                0 !== f && c.blend(f)
                            }
                        }
                    for (var h = 0, u = this._surfaceTimelines.length; u > h; ++h) {
                        var c = this._surfaceTimelines[h]
                          , f = c.surface._blendState.update(this._weightResult, this.layer);
                        c.playState <= 0 && c.update(s),
                        0 !== f && c.blend(f)
                    }
                    if (this.displayControl)
                        for (var h = 0, u = this._slotTimelines.length; u > h; ++h) {
                            var c = this._slotTimelines[h]
                              , d = c.slot.displayController;
                            (null === d || d === this.name || d === this.group) && c.playState <= 0 && c.update(s)
                        }
                    for (var h = 0, u = this._constraintTimelines.length; u > h; ++h) {
                        var c = this._constraintTimelines[h];
                        c.playState <= 0 && c.update(s)
                    }
                    for (var h = 0, u = this._animationTimelines.length; u > h; ++h) {
                        var c = this._animationTimelines[h]
                          , f = c.animationState._blendState.update(this._weightResult, this.layer);
                        c.playState <= 0 && c.update(s),
                        0 !== f && c.blend(f)
                    }
                }
                if (0 === this._fadeState) {
                    if (this._subFadeState > 0 && (this._subFadeState = 0,
                    this._poseTimelines.length > 0)) {
                        for (var p = 0, _ = this._poseTimelines; p < _.length; p++) {
                            var c = _[p];
                            c instanceof t.BoneTimelineState ? this._boneTimelines.splice(this._boneTimelines.indexOf(c), 1) : c instanceof t.SurfaceTimelineState ? this._surfaceTimelines.splice(this._surfaceTimelines.indexOf(c), 1) : c instanceof t.SlotTimelineState ? this._slotTimelines.splice(this._slotTimelines.indexOf(c), 1) : c instanceof t.ConstraintTimelineState && this._constraintTimelines.splice(this._constraintTimelines.indexOf(c), 1),
                            c.returnToPool()
                        }
                        this._poseTimelines.length = 0
                    }
                    this._actionTimeline.playState > 0 && this.autoFadeOutTime >= 0 && this.fadeOut(this.autoFadeOutTime)
                }
            }
        }
        ,
        n.prototype.play = function() {
            this._playheadState = 3
        }
        ,
        n.prototype.stop = function() {
            this._playheadState &= 1
        }
        ,
        n.prototype.fadeOut = function(t, e) {
            if (void 0 === e && (e = !0),
            0 > t && (t = 0),
            e && (this._playheadState &= 2),
            this._fadeState > 0) {
                if (t > this.fadeTotalTime - this._fadeTime)
                    return
            } else {
                this._fadeState = 1,
                this._subFadeState = -1,
                (0 >= t || this._fadeProgress <= 0) && (this._fadeProgress = 1e-6);
                for (var r = 0, i = this._boneTimelines; r < i.length; r++) {
                    var n = i[r];
                    n.fadeOut()
                }
                for (var a = 0, s = this._surfaceTimelines; a < s.length; a++) {
                    var n = s[a];
                    n.fadeOut()
                }
                for (var o = 0, l = this._slotTimelines; o < l.length; o++) {
                    var n = l[o];
                    n.fadeOut()
                }
                for (var h = 0, u = this._constraintTimelines; h < u.length; h++) {
                    var n = u[h];
                    n.fadeOut()
                }
                for (var c = 0, f = this._animationTimelines; c < f.length; c++) {
                    var n = f[c];
                    n.animationState.fadeOut(t, e),
                    n.fadeOut()
                }
            }
            this.displayControl = !1,
            this.fadeTotalTime = this._fadeProgress > 1e-6 ? t / this._fadeProgress : 0,
            this._fadeTime = this.fadeTotalTime * (1 - this._fadeProgress)
        }
        ,
        n.prototype.containsBoneMask = function(t) {
            return 0 === this._boneMask.length || this._boneMask.indexOf(t) >= 0
        }
        ,
        n.prototype.addBoneMask = function(t, e) {
            void 0 === e && (e = !0);
            var r = this._armature.getBone(t);
            if (null !== r) {
                if (this._boneMask.indexOf(t) < 0 && this._boneMask.push(t),
                e)
                    for (var i = 0, n = this._armature.getBones(); i < n.length; i++) {
                        var a = n[i];
                        this._boneMask.indexOf(a.name) < 0 && r.contains(a) && this._boneMask.push(a.name)
                    }
                this._timelineDirty = 1
            }
        }
        ,
        n.prototype.removeBoneMask = function(t, e) {
            void 0 === e && (e = !0);
            var r = this._boneMask.indexOf(t);
            if (r >= 0 && this._boneMask.splice(r, 1),
            e) {
                var i = this._armature.getBone(t);
                if (null !== i) {
                    var n = this._armature.getBones();
                    if (this._boneMask.length > 0)
                        for (var a = 0, s = n; a < s.length; a++) {
                            var o = s[a]
                              , l = this._boneMask.indexOf(o.name);
                            l >= 0 && i.contains(o) && this._boneMask.splice(l, 1)
                        }
                    else
                        for (var h = 0, u = n; h < u.length; h++) {
                            var o = u[h];
                            o !== i && (i.contains(o) || this._boneMask.push(o.name))
                        }
                }
            }
            this._timelineDirty = 1
        }
        ,
        n.prototype.removeAllBoneMask = function() {
            this._boneMask.length = 0,
            this._timelineDirty = 1
        }
        ,
        Object.defineProperty(n.prototype, "isFadeIn", {
            get: function() {
                return this._fadeState < 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "isFadeOut", {
            get: function() {
                return this._fadeState > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "isFadeComplete", {
            get: function() {
                return 0 === this._fadeState
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "isPlaying", {
            get: function() {
                return 0 !== (2 & this._playheadState) && this._actionTimeline.playState <= 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "isCompleted", {
            get: function() {
                return this._actionTimeline.playState > 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "currentPlayTimes", {
            get: function() {
                return this._actionTimeline.currentPlayTimes
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "totalTime", {
            get: function() {
                return this._duration
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "currentTime", {
            get: function() {
                return this._actionTimeline.currentTime
            },
            set: function(t) {
                var e = this._actionTimeline.currentPlayTimes - (this._actionTimeline.playState > 0 ? 1 : 0);
                if ((0 > t || this._duration < t) && (t = t % this._duration + e * this._duration,
                0 > t && (t += this._duration)),
                this.playTimes > 0 && e === this.playTimes - 1 && t === this._duration && (t = this._duration - 1e-6),
                this._time !== t) {
                    this._time = t,
                    this._actionTimeline.setCurrentTime(this._time),
                    null !== this._zOrderTimeline && (this._zOrderTimeline.playState = -1);
                    for (var r = 0, i = this._boneTimelines; r < i.length; r++) {
                        var n = i[r];
                        n.playState = -1
                    }
                    for (var a = 0, s = this._slotTimelines; a < s.length; a++) {
                        var n = s[a];
                        n.playState = -1
                    }
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(n.prototype, "animationData", {
            get: function() {
                return this._animationData
            },
            enumerable: !0,
            configurable: !0
        }),
        n
    }(t.BaseObject);
    t.AnimationState = e;
    var r = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r.current = new t.Transform,
            r.delta = new t.Transform,
            r.result = new t.Transform,
            r
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.BonePose]"
        }
        ,
        r.prototype._onClear = function() {
            this.current.identity(),
            this.delta.identity(),
            this.result.identity()
        }
        ,
        r
    }(t.BaseObject);
    t.BonePose = r;
    var i = function() {
        function t() {}
        return t.prototype.update = function(t, e) {
            if (this.dirty) {
                if (!(this.leftWeight > 0))
                    return 0;
                if (this.layer !== e) {
                    if (this.layerWeight >= this.leftWeight)
                        return this.leftWeight = 0,
                        0;
                    this.layer = e,
                    this.leftWeight -= this.layerWeight,
                    this.layerWeight = 0
                }
                return t *= this.leftWeight,
                this.layerWeight += t,
                this.blendWeight = t,
                2
            }
            return this.dirty = !0,
            this.layer = e,
            this.layerWeight = t,
            this.leftWeight = 1,
            this.blendWeight = t,
            1
        }
        ,
        t.prototype.clear = function() {
            this.dirty = !1,
            this.layer = 0,
            this.leftWeight = 0,
            this.layerWeight = 0,
            this.blendWeight = 0
        }
        ,
        t
    }();
    t.BlendState = i
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            this.playState = -1,
            this.currentPlayTimes = -1,
            this.currentTime = -1,
            this._tweenState = 0,
            this._frameRate = 0,
            this._frameValueOffset = 0,
            this._frameCount = 0,
            this._frameOffset = 0,
            this._frameIndex = -1,
            this._frameRateR = 0,
            this._position = 0,
            this._duration = 0,
            this._timeScale = 1,
            this._timeOffset = 0,
            this._dragonBonesData = null,
            this._animationData = null,
            this._timelineData = null,
            this._armature = null,
            this._animationState = null,
            this._actionTimeline = null,
            this._frameArray = null,
            this._frameIntArray = null,
            this._frameFloatArray = null,
            this._timelineArray = null,
            this._frameIndices = null
        }
        ,
        e.prototype._setCurrentTime = function(t) {
            var e = this.playState
              , r = this.currentPlayTimes
              , i = this.currentTime;
            if (null !== this._actionTimeline && this._frameCount <= 1)
                this.playState = this._actionTimeline.playState >= 0 ? 1 : -1,
                this.currentPlayTimes = 1,
                this.currentTime = this._actionTimeline.currentTime;
            else if (null === this._actionTimeline || 1 !== this._timeScale || 0 !== this._timeOffset) {
                var n = this._animationState.playTimes
                  , a = n * this._duration;
                t *= this._timeScale,
                0 !== this._timeOffset && (t += this._timeOffset * this._animationData.duration),
                n > 0 && (t >= a || -a >= t) ? (this.playState <= 0 && 3 === this._animationState._playheadState && (this.playState = 1),
                this.currentPlayTimes = n,
                0 > t ? this.currentTime = 0 : this.currentTime = this._duration + 1e-6) : (0 !== this.playState && 3 === this._animationState._playheadState && (this.playState = 0),
                0 > t ? (t = -t,
                this.currentPlayTimes = Math.floor(t / this._duration),
                this.currentTime = this._duration - t % this._duration) : (this.currentPlayTimes = Math.floor(t / this._duration),
                this.currentTime = t % this._duration)),
                this.currentTime += this._position
            } else
                this.playState = this._actionTimeline.playState,
                this.currentPlayTimes = this._actionTimeline.currentPlayTimes,
                this.currentTime = this._actionTimeline.currentTime;
            return this.currentPlayTimes === r && this.currentTime === i ? !1 : ((0 > e && this.playState !== e || this.playState <= 0 && this.currentPlayTimes !== r) && (this._frameIndex = -1),
            !0)
        }
        ,
        e.prototype.init = function(t, e, r) {
            this._armature = t,
            this._animationState = e,
            this._timelineData = r,
            this._actionTimeline = this._animationState._actionTimeline,
            this === this._actionTimeline && (this._actionTimeline = null),
            this._animationData = this._animationState._animationData,
            this._frameRate = this._animationData.parent.frameRate,
            this._frameRateR = 1 / this._frameRate,
            this._position = this._animationState._position,
            this._duration = this._animationState._duration,
            this._dragonBonesData = this._animationData.parent.parent,
            null !== this._timelineData && (this._frameIntArray = this._dragonBonesData.frameIntArray,
            this._frameFloatArray = this._dragonBonesData.frameFloatArray,
            this._frameArray = this._dragonBonesData.frameArray,
            this._timelineArray = this._dragonBonesData.timelineArray,
            this._frameIndices = this._dragonBonesData.frameIndices,
            this._frameCount = this._timelineArray[this._timelineData.offset + 2],
            this._frameValueOffset = this._timelineArray[this._timelineData.offset + 4],
            this._timeScale = 100 / this._timelineArray[this._timelineData.offset + 0],
            this._timeOffset = .01 * this._timelineArray[this._timelineData.offset + 1])
        }
        ,
        e.prototype.fadeOut = function() {}
        ,
        e.prototype.update = function(t) {
            if (this._setCurrentTime(t)) {
                if (this._frameCount > 1) {
                    var e = Math.floor(this.currentTime * this._frameRate)
                      , r = this._frameIndices[this._timelineData.frameIndicesOffset + e];
                    this._frameIndex !== r && (this._frameIndex = r,
                    this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + this._frameIndex],
                    this._onArriveAtFrame())
                } else
                    this._frameIndex < 0 && (this._frameIndex = 0,
                    null !== this._timelineData && (this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5]),
                    this._onArriveAtFrame());
                0 !== this._tweenState && this._onUpdateFrame()
            }
        }
        ,
        e
    }(t.BaseObject);
    t.TimelineState = e;
    var r = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e._getEasingValue = function(t, e, r) {
            var i = e;
            switch (t) {
            case 3:
                i = Math.pow(e, 2);
                break;
            case 4:
                i = 1 - Math.pow(1 - e, 2);
                break;
            case 5:
                i = .5 * (1 - Math.cos(e * Math.PI))
            }
            return (i - e) * r + e
        }
        ,
        e._getEasingCurveValue = function(t, e, r, i) {
            if (0 >= t)
                return 0;
            if (t >= 1)
                return 1;
            var n = r + 1
              , a = Math.floor(t * n)
              , s = 0 === a ? 0 : e[i + a - 1]
              , o = a === n - 1 ? 1e4 : e[i + a];
            return 1e-4 * (s + (o - s) * (t * n - a))
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this._tweenType = 0,
            this._curveCount = 0,
            this._framePosition = 0,
            this._frameDurationR = 0,
            this._tweenProgress = 0,
            this._tweenEasing = 0
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (this._frameCount > 1 && (this._frameIndex !== this._frameCount - 1 || 0 === this._animationState.playTimes || this._animationState.currentPlayTimes < this._animationState.playTimes - 1))
                if (this._tweenType = this._frameArray[this._frameOffset + 1],
                this._tweenState = 0 === this._tweenType ? 1 : 2,
                2 === this._tweenType ? this._curveCount = this._frameArray[this._frameOffset + 2] : 0 !== this._tweenType && 1 !== this._tweenType && (this._tweenEasing = .01 * this._frameArray[this._frameOffset + 2]),
                this._framePosition = this._frameArray[this._frameOffset] * this._frameRateR,
                this._frameIndex === this._frameCount - 1)
                    this._frameDurationR = 1 / (this._animationData.duration - this._framePosition);
                else {
                    var t = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + this._frameIndex + 1]
                      , e = this._frameArray[t] * this._frameRateR - this._framePosition;
                    e > 0 ? this._frameDurationR = 1 / e : this._frameDurationR = 0
                }
            else
                this._tweenState = 1
        }
        ,
        e.prototype._onUpdateFrame = function() {
            2 === this._tweenState ? (this._tweenProgress = (this.currentTime - this._framePosition) * this._frameDurationR,
            2 === this._tweenType ? this._tweenProgress = e._getEasingCurveValue(this._tweenProgress, this._frameArray, this._curveCount, this._frameOffset + 3) : 1 !== this._tweenType && (this._tweenProgress = e._getEasingValue(this._tweenType, this._tweenProgress, this._tweenEasing))) : this._tweenProgress = 0
        }
        ,
        e
    }(e);
    t.TweenTimelineState = r;
    var i = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.bone = null,
            this.bonePose = null
        }
        ,
        e.prototype.blend = function(t) {
            var e = this.bone._blendState.blendWeight
              , r = this.bone.animationPose
              , i = this.bonePose.result;
            2 === t ? (r.x += i.x * e,
            r.y += i.y * e,
            r.rotation += i.rotation * e,
            r.skew += i.skew * e,
            r.scaleX += (i.scaleX - 1) * e,
            r.scaleY += (i.scaleY - 1) * e) : 1 !== e ? (r.x = i.x * e,
            r.y = i.y * e,
            r.rotation = i.rotation * e,
            r.skew = i.skew * e,
            r.scaleX = (i.scaleX - 1) * e + 1,
            r.scaleY = (i.scaleY - 1) * e + 1) : (r.x = i.x,
            r.y = i.y,
            r.rotation = i.rotation,
            r.skew = i.skew,
            r.scaleX = i.scaleX,
            r.scaleY = i.scaleY),
            (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) && (this.bone._transformDirty = !0)
        }
        ,
        e
    }(r);
    t.BoneTimelineState = i;
    var n = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.slot = null
        }
        ,
        e
    }(r);
    t.SlotTimelineState = n;
    var a = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.constraint = null
        }
        ,
        e
    }(r);
    t.ConstraintTimelineState = a
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.ActionTimelineState]"
        }
        ,
        r.prototype._onCrossFrame = function(e) {
            var r = this._armature.eventDispatcher;
            if (this._animationState.actionEnabled)
                for (var i = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5 + e], n = this._frameArray[i + 1], a = this._animationData.parent.actions, s = 0; n > s; ++s) {
                    var o = this._frameArray[i + 2 + s]
                      , l = a[o];
                    if (0 === l.type) {
                        var h = t.BaseObject.borrowObject(t.EventObject);
                        h.time = this._frameArray[i] / this._frameRate,
                        h.animationState = this._animationState,
                        t.EventObject.actionDataToInstance(l, h, this._armature),
                        this._armature._bufferAction(h, !0)
                    } else {
                        var u = 10 === l.type ? t.EventObject.FRAME_EVENT : t.EventObject.SOUND_EVENT;
                        if (11 === l.type || r.hasDBEventListener(u)) {
                            var h = t.BaseObject.borrowObject(t.EventObject);
                            h.time = this._frameArray[i] / this._frameRate,
                            h.animationState = this._animationState,
                            t.EventObject.actionDataToInstance(l, h, this._armature),
                            this._armature._dragonBones.bufferEvent(h)
                        }
                    }
                }
        }
        ,
        r.prototype._onArriveAtFrame = function() {}
        ,
        r.prototype._onUpdateFrame = function() {}
        ,
        r.prototype.update = function(e) {
            var r = this.playState
              , i = this.currentPlayTimes
              , n = this.currentTime;
            if (this._setCurrentTime(e)) {
                var a = this._armature.eventDispatcher;
                if (0 > r) {
                    if (this.playState === r)
                        return;
                    if (this._animationState.displayControl && this._animationState.resetToPose && this._armature._sortZOrder(null, 0),
                    i = this.currentPlayTimes,
                    a.hasDBEventListener(t.EventObject.START)) {
                        var s = t.BaseObject.borrowObject(t.EventObject);
                        s.type = t.EventObject.START,
                        s.armature = this._armature,
                        s.animationState = this._animationState,
                        this._armature._dragonBones.bufferEvent(s)
                    }
                }
                var o = this._animationState.timeScale < 0
                  , l = null
                  , h = null;
                if (this.currentPlayTimes !== i && (a.hasDBEventListener(t.EventObject.LOOP_COMPLETE) && (l = t.BaseObject.borrowObject(t.EventObject),
                l.type = t.EventObject.LOOP_COMPLETE,
                l.armature = this._armature,
                l.animationState = this._animationState),
                this.playState > 0 && a.hasDBEventListener(t.EventObject.COMPLETE) && (h = t.BaseObject.borrowObject(t.EventObject),
                h.type = t.EventObject.COMPLETE,
                h.armature = this._armature,
                h.animationState = this._animationState)),
                this._frameCount > 1) {
                    var u = this._timelineData
                      , c = Math.floor(this.currentTime * this._frameRate)
                      , f = this._frameIndices[u.frameIndicesOffset + c];
                    if (this._frameIndex !== f) {
                        var d = this._frameIndex;
                        if (this._frameIndex = f,
                        null !== this._timelineArray)
                            if (this._frameOffset = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + this._frameIndex],
                            o) {
                                if (0 > d) {
                                    var p = Math.floor(n * this._frameRate);
                                    d = this._frameIndices[u.frameIndicesOffset + p],
                                    this.currentPlayTimes === i && d === f && (d = -1)
                                }
                                for (; d >= 0; ) {
                                    var _ = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + d]
                                      , m = this._frameArray[_] / this._frameRate;
                                    if (this._position <= m && m <= this._position + this._duration && this._onCrossFrame(d),
                                    null !== l && 0 === d && (this._armature._dragonBones.bufferEvent(l),
                                    l = null),
                                    d > 0 ? d-- : d = this._frameCount - 1,
                                    d === f)
                                        break
                                }
                            } else {
                                if (0 > d) {
                                    var p = Math.floor(n * this._frameRate);
                                    d = this._frameIndices[u.frameIndicesOffset + p];
                                    var _ = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + d]
                                      , m = this._frameArray[_] / this._frameRate;
                                    this.currentPlayTimes === i && (m >= n ? d > 0 ? d-- : d = this._frameCount - 1 : d === f && (d = -1))
                                }
                                for (; d >= 0; ) {
                                    d < this._frameCount - 1 ? d++ : d = 0;
                                    var _ = this._animationData.frameOffset + this._timelineArray[u.offset + 5 + d]
                                      , m = this._frameArray[_] / this._frameRate;
                                    if (this._position <= m && m <= this._position + this._duration && this._onCrossFrame(d),
                                    null !== l && 0 === d && (this._armature._dragonBones.bufferEvent(l),
                                    l = null),
                                    d === f)
                                        break
                                }
                            }
                    }
                } else if (this._frameIndex < 0 && (this._frameIndex = 0,
                null !== this._timelineData)) {
                    this._frameOffset = this._animationData.frameOffset + this._timelineArray[this._timelineData.offset + 5];
                    var m = this._frameArray[this._frameOffset] / this._frameRate;
                    this.currentPlayTimes === i ? m >= n && this._onCrossFrame(this._frameIndex) : this._position <= m && (o || null === l || (this._armature._dragonBones.bufferEvent(l),
                    l = null),
                    this._onCrossFrame(this._frameIndex))
                }
                null !== l && this._armature._dragonBones.bufferEvent(l),
                null !== h && this._armature._dragonBones.bufferEvent(h)
            }
        }
        ,
        r.prototype.setCurrentTime = function(t) {
            this._setCurrentTime(t),
            this._frameIndex = -1
        }
        ,
        r
    }(t.TimelineState);
    t.ActionTimelineState = e;
    var r = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.ZOrderTimelineState]"
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (this.playState >= 0) {
                var t = this._frameArray[this._frameOffset + 1];
                t > 0 ? this._armature._sortZOrder(this._frameArray, this._frameOffset + 2) : this._armature._sortZOrder(null, 0)
            }
        }
        ,
        e.prototype._onUpdateFrame = function() {}
        ,
        e
    }(t.TimelineState);
    t.ZOrderTimelineState = r;
    var i = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.BoneAllTimelineState]"
        }
        ,
        r.prototype._onArriveAtFrame = function() {
            if (e.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var t = this._animationData.frameFloatOffset + this._frameValueOffset + 6 * this._frameIndex
                  , r = this._armature._armatureData.scale
                  , i = this._frameFloatArray
                  , n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.x = i[t++] * r,
                n.y = i[t++] * r,
                n.rotation = i[t++],
                n.skew = i[t++],
                n.scaleX = i[t++],
                n.scaleY = i[t++],
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (t = this._animationData.frameFloatOffset + this._frameValueOffset),
                a.x = i[t++] * r - n.x,
                a.y = i[t++] * r - n.y,
                a.rotation = i[t++] - n.rotation,
                a.skew = i[t++] - n.skew,
                a.scaleX = i[t++] - n.scaleX,
                a.scaleY = i[t++] - n.scaleY) : (a.x = 0,
                a.y = 0,
                a.rotation = 0,
                a.skew = 0,
                a.scaleX = 0,
                a.scaleY = 0)
            } else {
                var n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.x = 0,
                n.y = 0,
                n.rotation = 0,
                n.skew = 0,
                n.scaleX = 1,
                n.scaleY = 1,
                a.x = 0,
                a.y = 0,
                a.rotation = 0,
                a.skew = 0,
                a.scaleX = 0,
                a.scaleY = 0
            }
        }
        ,
        r.prototype._onUpdateFrame = function() {
            e.prototype._onUpdateFrame.call(this);
            var t = this.bonePose.current
              , r = this.bonePose.delta
              , i = this.bonePose.result;
            this.bone._transformDirty = !0,
            2 !== this._tweenState && (this._tweenState = 0),
            i.x = t.x + r.x * this._tweenProgress,
            i.y = t.y + r.y * this._tweenProgress,
            i.rotation = t.rotation + r.rotation * this._tweenProgress,
            i.skew = t.skew + r.skew * this._tweenProgress,
            i.scaleX = t.scaleX + r.scaleX * this._tweenProgress,
            i.scaleY = t.scaleY + r.scaleY * this._tweenProgress
        }
        ,
        r.prototype.fadeOut = function() {
            var e = this.bonePose.result;
            e.rotation = t.Transform.normalizeRadian(e.rotation),
            e.skew = t.Transform.normalizeRadian(e.skew)
        }
        ,
        r
    }(t.BoneTimelineState);
    t.BoneAllTimelineState = i;
    var n = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.BoneTranslateTimelineState]"
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex
                  , r = this._armature._armatureData.scale
                  , i = this._frameFloatArray
                  , n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.x = i[e++] * r,
                n.y = i[e++] * r,
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameFloatOffset + this._frameValueOffset),
                a.x = i[e++] * r - n.x,
                a.y = i[e++] * r - n.y) : (a.x = 0,
                a.y = 0)
            } else {
                var n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.x = 0,
                n.y = 0,
                a.x = 0,
                a.y = 0
            }
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this);
            var e = this.bonePose.current
              , r = this.bonePose.delta
              , i = this.bonePose.result;
            this.bone._transformDirty = !0,
            2 !== this._tweenState && (this._tweenState = 0),
            i.x = e.x + r.x * this._tweenProgress,
            i.y = e.y + r.y * this._tweenProgress
        }
        ,
        e
    }(t.BoneTimelineState);
    t.BoneTranslateTimelineState = n;
    var a = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.BoneRotateTimelineState]"
        }
        ,
        r.prototype._onArriveAtFrame = function() {
            if (e.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var r = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex
                  , i = this._frameFloatArray
                  , n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.rotation = i[r++],
                n.skew = i[r++],
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 ? (r = this._animationData.frameFloatOffset + this._frameValueOffset,
                a.rotation = t.Transform.normalizeRadian(i[r++] - n.rotation)) : a.rotation = i[r++] - n.rotation,
                a.skew = i[r++] - n.skew) : (a.rotation = 0,
                a.skew = 0)
            } else {
                var n = this.bonePose.current
                  , a = this.bonePose.delta;
                n.rotation = 0,
                n.skew = 0,
                a.rotation = 0,
                a.skew = 0
            }
        }
        ,
        r.prototype._onUpdateFrame = function() {
            e.prototype._onUpdateFrame.call(this);
            var t = this.bonePose.current
              , r = this.bonePose.delta
              , i = this.bonePose.result;
            this.bone._transformDirty = !0,
            2 !== this._tweenState && (this._tweenState = 0),
            i.rotation = t.rotation + r.rotation * this._tweenProgress,
            i.skew = t.skew + r.skew * this._tweenProgress
        }
        ,
        r.prototype.fadeOut = function() {
            var e = this.bonePose.result;
            e.rotation = t.Transform.normalizeRadian(e.rotation),
            e.skew = t.Transform.normalizeRadian(e.skew)
        }
        ,
        r
    }(t.BoneTimelineState);
    t.BoneRotateTimelineState = a;
    var s = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.BoneScaleTimelineState]"
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._animationData.frameFloatOffset + this._frameValueOffset + 2 * this._frameIndex
                  , r = this._frameFloatArray
                  , i = this.bonePose.current
                  , n = this.bonePose.delta;
                i.scaleX = r[e++],
                i.scaleY = r[e++],
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameFloatOffset + this._frameValueOffset),
                n.scaleX = r[e++] - i.scaleX,
                n.scaleY = r[e++] - i.scaleY) : (n.scaleX = 0,
                n.scaleY = 0)
            } else {
                var i = this.bonePose.current
                  , n = this.bonePose.delta;
                i.scaleX = 1,
                i.scaleY = 1,
                n.scaleX = 0,
                n.scaleY = 0
            }
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this);
            var e = this.bonePose.current
              , r = this.bonePose.delta
              , i = this.bonePose.result;
            this.bone._transformDirty = !0,
            2 !== this._tweenState && (this._tweenState = 0),
            i.scaleX = e.scaleX + r.scaleX * this._tweenProgress,
            i.scaleY = e.scaleY + r.scaleY * this._tweenProgress
        }
        ,
        e
    }(t.BoneTimelineState);
    t.BoneScaleTimelineState = s;
    var o = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [],
            e._delta = [],
            e._result = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.SurfaceTimelineState]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.surface = null,
            this._frameFloatOffset = 0,
            this._valueCount = 0,
            this._deformCount = 0,
            this._valueOffset = 0,
            this._current.length = 0,
            this._delta.length = 0,
            this._result.length = 0
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount
                  , r = this._armature._armatureData.scale
                  , i = this._frameFloatArray;
                if (2 === this._tweenState) {
                    var n = e + this._valueCount;
                    this._frameIndex === this._frameCount - 1 && (n = this._animationData.frameFloatOffset + this._frameValueOffset);
                    for (var a = 0; a < this._valueCount; ++a)
                        this._delta[a] = i[n + a] * r - (this._current[a] = i[e + a] * r)
                } else
                    for (var a = 0; a < this._valueCount; ++a)
                        this._current[a] = i[e + a] * r
            } else
                for (var a = 0; a < this._valueCount; ++a)
                    this._current[a] = 0
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this),
            this.surface._transformDirty = !0,
            2 !== this._tweenState && (this._tweenState = 0);
            for (var e = 0; e < this._valueCount; ++e)
                this._result[e] = this._current[e] + this._delta[e] * this._tweenProgress
        }
        ,
        e.prototype.init = function(e, r, i) {
            if (t.prototype.init.call(this, e, r, i),
            null !== this._timelineData) {
                var n = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3];
                this._deformCount = this._frameIntArray[n + 1],
                this._valueCount = this._frameIntArray[n + 2],
                this._valueOffset = this._frameIntArray[n + 3],
                this._frameFloatOffset = this._frameIntArray[n + 4] + this._animationData.frameFloatOffset
            } else
                this._deformCount = this.surface._deformVertices.length,
                this._valueCount = this._deformCount,
                this._valueOffset = 0,
                this._frameFloatOffset = 0;
            this._current.length = this._valueCount,
            this._delta.length = this._valueCount,
            this._result.length = this._valueCount;
            for (var a = 0; a < this._valueCount; ++a)
                this._delta[a] = 0
        }
        ,
        e.prototype.blend = function(t) {
            for (var e = this.surface._blendState.blendWeight, r = this.surface._deformVertices, i = 0; i < this._deformCount; ++i) {
                var n = 0;
                n = i < this._valueOffset ? this._frameFloatArray[this._frameFloatOffset + i] : i < this._valueOffset + this._valueCount ? this._result[i - this._valueOffset] : this._frameFloatArray[this._frameFloatOffset + i - this._valueCount],
                2 === t ? r[i] += n * e : 1 !== e ? r[i] = n * e : r[i] = n
            }
            (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) && (this.surface._transformDirty = !0)
        }
        ,
        e
    }(t.TweenTimelineState);
    t.SurfaceTimelineState = o;
    var l = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.SlotDislayTimelineState]"
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (this.playState >= 0) {
                var t = null !== this._timelineData ? this._frameArray[this._frameOffset + 1] : this.slot._slotData.displayIndex;
                this.slot.displayIndex !== t && this.slot._setDisplayIndex(t, !0)
            }
        }
        ,
        e
    }(t.SlotTimelineState);
    t.SlotDislayTimelineState = l;
    var h = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [0, 0, 0, 0, 0, 0, 0, 0],
            e._delta = [0, 0, 0, 0, 0, 0, 0, 0],
            e._result = [0, 0, 0, 0, 0, 0, 0, 0],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.SlotColorTimelineState]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this._dirty = !1
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._dragonBonesData.intArray
                  , r = this._frameIntArray
                  , i = this._animationData.frameIntOffset + this._frameValueOffset + 1 * this._frameIndex
                  , n = r[i];
                0 > n && (n += 65536),
                this._current[0] = e[n++],
                this._current[1] = e[n++],
                this._current[2] = e[n++],
                this._current[3] = e[n++],
                this._current[4] = e[n++],
                this._current[5] = e[n++],
                this._current[6] = e[n++],
                this._current[7] = e[n++],
                2 === this._tweenState && (n = this._frameIndex === this._frameCount - 1 ? r[this._animationData.frameIntOffset + this._frameValueOffset] : r[i + 1],
                0 > n && (n += 65536),
                this._delta[0] = e[n++] - this._current[0],
                this._delta[1] = e[n++] - this._current[1],
                this._delta[2] = e[n++] - this._current[2],
                this._delta[3] = e[n++] - this._current[3],
                this._delta[4] = e[n++] - this._current[4],
                this._delta[5] = e[n++] - this._current[5],
                this._delta[6] = e[n++] - this._current[6],
                this._delta[7] = e[n++] - this._current[7])
            } else {
                var a = this.slot._slotData.color;
                this._current[0] = 100 * a.alphaMultiplier,
                this._current[1] = 100 * a.redMultiplier,
                this._current[2] = 100 * a.greenMultiplier,
                this._current[3] = 100 * a.blueMultiplier,
                this._current[4] = a.alphaOffset,
                this._current[5] = a.redOffset,
                this._current[6] = a.greenOffset,
                this._current[7] = a.blueOffset
            }
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this),
            this._dirty = !0,
            2 !== this._tweenState && (this._tweenState = 0),
            this._result[0] = .01 * (this._current[0] + this._delta[0] * this._tweenProgress),
            this._result[1] = .01 * (this._current[1] + this._delta[1] * this._tweenProgress),
            this._result[2] = .01 * (this._current[2] + this._delta[2] * this._tweenProgress),
            this._result[3] = .01 * (this._current[3] + this._delta[3] * this._tweenProgress),
            this._result[4] = this._current[4] + this._delta[4] * this._tweenProgress,
            this._result[5] = this._current[5] + this._delta[5] * this._tweenProgress,
            this._result[6] = this._current[6] + this._delta[6] * this._tweenProgress,
            this._result[7] = this._current[7] + this._delta[7] * this._tweenProgress
        }
        ,
        e.prototype.fadeOut = function() {
            this._tweenState = 0,
            this._dirty = !1
        }
        ,
        e.prototype.update = function(e) {
            if (t.prototype.update.call(this, e),
            0 !== this._tweenState || this._dirty) {
                var r = this.slot._colorTransform;
                if (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) {
                    if (r.alphaMultiplier !== this._result[0] || r.redMultiplier !== this._result[1] || r.greenMultiplier !== this._result[2] || r.blueMultiplier !== this._result[3] || r.alphaOffset !== this._result[4] || r.redOffset !== this._result[5] || r.greenOffset !== this._result[6] || r.blueOffset !== this._result[7]) {
                        var i = Math.pow(this._animationState._fadeProgress, 4);
                        r.alphaMultiplier += (this._result[0] - r.alphaMultiplier) * i,
                        r.redMultiplier += (this._result[1] - r.redMultiplier) * i,
                        r.greenMultiplier += (this._result[2] - r.greenMultiplier) * i,
                        r.blueMultiplier += (this._result[3] - r.blueMultiplier) * i,
                        r.alphaOffset += (this._result[4] - r.alphaOffset) * i,
                        r.redOffset += (this._result[5] - r.redOffset) * i,
                        r.greenOffset += (this._result[6] - r.greenOffset) * i,
                        r.blueOffset += (this._result[7] - r.blueOffset) * i,
                        this.slot._colorDirty = !0
                    }
                } else
                    this._dirty && (this._dirty = !1,
                    (r.alphaMultiplier !== this._result[0] || r.redMultiplier !== this._result[1] || r.greenMultiplier !== this._result[2] || r.blueMultiplier !== this._result[3] || r.alphaOffset !== this._result[4] || r.redOffset !== this._result[5] || r.greenOffset !== this._result[6] || r.blueOffset !== this._result[7]) && (r.alphaMultiplier = this._result[0],
                    r.redMultiplier = this._result[1],
                    r.greenMultiplier = this._result[2],
                    r.blueMultiplier = this._result[3],
                    r.alphaOffset = this._result[4],
                    r.redOffset = this._result[5],
                    r.greenOffset = this._result[6],
                    r.blueOffset = this._result[7],
                    this.slot._colorDirty = !0))
            }
        }
        ,
        e
    }(t.SlotTimelineState);
    t.SlotColorTimelineState = h;
    var u = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._current = [],
            e._delta = [],
            e._result = [],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.DeformTimelineState]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.vertexOffset = 0,
            this._dirty = !1,
            this._frameFloatOffset = 0,
            this._valueCount = 0,
            this._deformCount = 0,
            this._valueOffset = 0,
            this._current.length = 0,
            this._delta.length = 0,
            this._result.length = 0
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._animationData.frameFloatOffset + this._frameValueOffset + this._frameIndex * this._valueCount
                  , r = this._armature._armatureData.scale
                  , i = this._frameFloatArray;
                if (2 === this._tweenState) {
                    var n = e + this._valueCount;
                    this._frameIndex === this._frameCount - 1 && (n = this._animationData.frameFloatOffset + this._frameValueOffset);
                    for (var a = 0; a < this._valueCount; ++a)
                        this._delta[a] = i[n + a] * r - (this._current[a] = i[e + a] * r)
                } else
                    for (var a = 0; a < this._valueCount; ++a)
                        this._current[a] = i[e + a] * r
            } else
                for (var a = 0; a < this._valueCount; ++a)
                    this._current[a] = 0
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this),
            this._dirty = !0,
            2 !== this._tweenState && (this._tweenState = 0);
            for (var e = 0; e < this._valueCount; ++e)
                this._result[e] = this._current[e] + this._delta[e] * this._tweenProgress
        }
        ,
        e.prototype.init = function(e, r, i) {
            if (t.prototype.init.call(this, e, r, i),
            null !== this._timelineData) {
                var n = this._animationData.frameIntOffset + this._timelineArray[this._timelineData.offset + 3];
                this.vertexOffset = this._frameIntArray[n + 0],
                this.vertexOffset < 0 && (this.vertexOffset += 65536),
                this._deformCount = this._frameIntArray[n + 1],
                this._valueCount = this._frameIntArray[n + 2],
                this._valueOffset = this._frameIntArray[n + 3],
                this._frameFloatOffset = this._frameIntArray[n + 4] + this._animationData.frameFloatOffset
            } else {
                var a = this.slot._deformVertices;
                this._deformCount = null !== a ? a.vertices.length : 0,
                this._valueCount = this._deformCount,
                this._valueOffset = 0,
                this._frameFloatOffset = 0
            }
            this._current.length = this._valueCount,
            this._delta.length = this._valueCount,
            this._result.length = this._valueCount;
            for (var s = 0; s < this._valueCount; ++s)
                this._delta[s] = 0
        }
        ,
        e.prototype.fadeOut = function() {
            this._tweenState = 0,
            this._dirty = !1
        }
        ,
        e.prototype.update = function(e) {
            var r = this.slot._deformVertices;
            if (null !== r && null !== r.verticesData && r.verticesData.offset === this.vertexOffset && (t.prototype.update.call(this, e),
            0 !== this._tweenState || this._dirty)) {
                var i = r.vertices;
                if (0 !== this._animationState._fadeState || 0 !== this._animationState._subFadeState) {
                    for (var n = Math.pow(this._animationState._fadeProgress, 2), a = 0; a < this._deformCount; ++a)
                        a < this._valueOffset ? i[a] += (this._frameFloatArray[this._frameFloatOffset + a] - i[a]) * n : a < this._valueOffset + this._valueCount ? i[a] += (this._result[a - this._valueOffset] - i[a]) * n : i[a] += (this._frameFloatArray[this._frameFloatOffset + a - this._valueCount] - i[a]) * n;
                    r.verticesDirty = !0
                } else if (this._dirty) {
                    this._dirty = !1;
                    for (var a = 0; a < this._deformCount; ++a)
                        a < this._valueOffset ? i[a] = this._frameFloatArray[this._frameFloatOffset + a] : a < this._valueOffset + this._valueCount ? i[a] = this._result[a - this._valueOffset] : i[a] = this._frameFloatArray[this._frameFloatOffset + a - this._valueCount];
                    r.verticesDirty = !0
                }
            }
        }
        ,
        e
    }(t.SlotTimelineState);
    t.DeformTimelineState = u;
    var c = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.IKConstraintTimelineState]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this._current = 0,
            this._delta = 0
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            t.prototype._onArriveAtFrame.call(this);
            var e = this.constraint;
            if (null !== this._timelineData) {
                var r = this._animationData.frameIntOffset + this._frameValueOffset + 2 * this._frameIndex
                  , i = this._frameIntArray
                  , n = 0 !== i[r++];
                this._current = .01 * i[r++],
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (r = this._animationData.frameIntOffset + this._frameValueOffset),
                this._delta = .01 * i[r + 1] - this._current) : this._delta = 0,
                e._bendPositive = n
            } else {
                var a = e._constraintData;
                this._current = a.weight,
                this._delta = 0,
                e._bendPositive = a.bendPositive
            }
            e.invalidUpdate()
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this),
            2 !== this._tweenState && (this._tweenState = 0);
            var e = this.constraint;
            e._weight = this._current + this._delta * this._tweenProgress,
            e.invalidUpdate()
        }
        ,
        e
    }(t.ConstraintTimelineState);
    t.IKConstraintTimelineState = c;
    var f = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e._floats = [0, 0, 0, 0, 0, 0],
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.AnimationTimelineState]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            this.animationState = null
        }
        ,
        e.prototype._onArriveAtFrame = function() {
            if (t.prototype._onArriveAtFrame.call(this),
            null !== this._timelineData) {
                var e = this._animationData.frameIntOffset + this._frameValueOffset + 2 * this._frameIndex
                  , r = 1 / this.animationState._animationData.parent.frameRate
                  , i = this._frameIntArray;
                this._floats[0] = i[e++] * r,
                this._floats[3] = .01 * i[e++],
                2 === this._tweenState ? (this._frameIndex === this._frameCount - 1 && (e = this._animationData.frameIntOffset + this._frameValueOffset),
                this._floats[1] = i[e++] * r - this._floats[0],
                this._floats[4] = .01 * i[e++] - this._floats[3]) : (this._floats[1] = 0,
                this._floats[4] = 0)
            }
        }
        ,
        e.prototype._onUpdateFrame = function() {
            t.prototype._onUpdateFrame.call(this),
            2 !== this._tweenState && (this._tweenState = 0),
            this._floats[0] >= 0 && (this._floats[2] = this._floats[0] + this._floats[1] * this._tweenProgress),
            this._floats[5] = this._floats[3] + this._floats[4] * this._tweenProgress
        }
        ,
        e.prototype.blend = function(t) {
            var e = this.animationState
              , r = e._blendState.blendWeight;
            2 === t ? (e.weight += this._floats[5] * r,
            e.currentTime += this._floats[2] * r) : (e.weight = this._floats[5] * r,
            e.currentTime = this._floats[2] * r)
        }
        ,
        e
    }(t.TweenTimelineState);
    t.AnimationTimelineState = f
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.actionDataToInstance = function(t, r, i) {
            0 === t.type ? r.type = e.FRAME_EVENT : r.type = 10 === t.type ? e.FRAME_EVENT : e.SOUND_EVENT,
            r.name = t.name,
            r.armature = i,
            r.actionData = t,
            r.data = t.data,
            null !== t.bone && (r.bone = i.getBone(t.bone.name)),
            null !== t.slot && (r.slot = i.getSlot(t.slot.name))
        }
        ,
        e.toString = function() {
            return "[class dragonBones.EventObject]"
        }
        ,
        e.prototype._onClear = function() {
            this.time = 0,
            this.type = "",
            this.name = "",
            this.armature = null,
            this.bone = null,
            this.slot = null,
            this.animationState = null,
            this.actionData = null,
            this.data = null
        }
        ,
        e.START = "start",
        e.LOOP_COMPLETE = "loopComplete",
        e.COMPLETE = "complete",
        e.FADE_IN = "fadeIn",
        e.FADE_IN_COMPLETE = "fadeInComplete",
        e.FADE_OUT = "fadeOut",
        e.FADE_OUT_COMPLETE = "fadeOutComplete",
        e.FRAME_EVENT = "frameEvent",
        e.SOUND_EVENT = "soundEvent",
        e
    }(t.BaseObject);
    t.EventObject = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function e() {}
        return e._getArmatureType = function(t) {
            switch (t.toLowerCase()) {
            case "stage":
                return 2;
            case "armature":
                return 0;
            case "movieclip":
                return 1;
            default:
                return 0
            }
        }
        ,
        e._getBoneType = function(t) {
            switch (t.toLowerCase()) {
            case "bone":
                return 0;
            case "surface":
                return 1;
            default:
                return 0
            }
        }
        ,
        e._getDisplayType = function(t) {
            switch (t.toLowerCase()) {
            case "image":
                return 0;
            case "mesh":
                return 2;
            case "armature":
                return 1;
            case "boundingbox":
                return 3;
            case "path":
                return 4;
            default:
                return 0
            }
        }
        ,
        e._getBoundingBoxType = function(t) {
            switch (t.toLowerCase()) {
            case "rectangle":
                return 0;
            case "ellipse":
                return 1;
            case "polygon":
                return 2;
            default:
                return 0
            }
        }
        ,
        e._getActionType = function(t) {
            switch (t.toLowerCase()) {
            case "play":
                return 0;
            case "frame":
                return 10;
            case "sound":
                return 11;
            default:
                return 0
            }
        }
        ,
        e._getBlendMode = function(t) {
            switch (t.toLowerCase()) {
            case "normal":
                return 0;
            case "add":
                return 1;
            case "alpha":
                return 2;
            case "darken":
                return 3;
            case "difference":
                return 4;
            case "erase":
                return 5;
            case "hardlight":
                return 6;
            case "invert":
                return 7;
            case "layer":
                return 8;
            case "lighten":
                return 9;
            case "multiply":
                return 10;
            case "overlay":
                return 11;
            case "screen":
                return 12;
            case "subtract":
                return 13;
            default:
                return 0
            }
        }
        ,
        e._getPositionMode = function(t) {
            switch (t.toLocaleLowerCase()) {
            case "percent":
                return 1;
            case "fixed":
                return 0;
            default:
                return 1
            }
        }
        ,
        e._getSpacingMode = function(t) {
            switch (t.toLocaleLowerCase()) {
            case "length":
                return 0;
            case "percent":
                return 2;
            case "fixed":
                return 1;
            default:
                return 0
            }
        }
        ,
        e._getRotateMode = function(t) {
            switch (t.toLocaleLowerCase()) {
            case "tangent":
                return 0;
            case "chain":
                return 1;
            case "chainscale":
                return 2;
            default:
                return 0
            }
        }
        ,
        e.parseDragonBonesData = function(e) {
            return console.warn("Deprecated."),
            e instanceof ArrayBuffer ? t.BinaryDataParser.getInstance().parseDragonBonesData(e) : t.ObjectDataParser.getInstance().parseDragonBonesData(e)
        }
        ,
        e.parseTextureAtlasData = function(r, i) {
            void 0 === i && (i = 1),
            console.warn("已废弃");
            for (var n = {}, a = r[e.SUB_TEXTURE], s = 0, o = a.length; o > s; s++) {
                var l = a[s]
                  , h = l[e.NAME]
                  , u = new t.Rectangle
                  , c = null;
                u.x = l[e.X] / i,
                u.y = l[e.Y] / i,
                u.width = l[e.WIDTH] / i,
                u.height = l[e.HEIGHT] / i,
                e.FRAME_WIDTH in l && (c = new t.Rectangle,
                c.x = l[e.FRAME_X] / i,
                c.y = l[e.FRAME_Y] / i,
                c.width = l[e.FRAME_WIDTH] / i,
                c.height = l[e.FRAME_HEIGHT] / i),
                n[h] = {
                    region: u,
                    frame: c,
                    rotated: !1
                }
            }
            return n
        }
        ,
        e.DATA_VERSION_2_3 = "2.3",
        e.DATA_VERSION_3_0 = "3.0",
        e.DATA_VERSION_4_0 = "4.0",
        e.DATA_VERSION_4_5 = "4.5",
        e.DATA_VERSION_5_0 = "5.0",
        e.DATA_VERSION_5_5 = "5.5",
        e.DATA_VERSION = e.DATA_VERSION_5_5,
        e.DATA_VERSIONS = [e.DATA_VERSION_4_0, e.DATA_VERSION_4_5, e.DATA_VERSION_5_0, e.DATA_VERSION_5_5],
        e.TEXTURE_ATLAS = "textureAtlas",
        e.SUB_TEXTURE = "SubTexture",
        e.FORMAT = "format",
        e.IMAGE_PATH = "imagePath",
        e.WIDTH = "width",
        e.HEIGHT = "height",
        e.ROTATED = "rotated",
        e.FRAME_X = "frameX",
        e.FRAME_Y = "frameY",
        e.FRAME_WIDTH = "frameWidth",
        e.FRAME_HEIGHT = "frameHeight",
        e.DRADON_BONES = "dragonBones",
        e.USER_DATA = "userData",
        e.ARMATURE = "armature",
        e.BONE = "bone",
        e.SURFACE = "surface",
        e.SLOT = "slot",
        e.CONSTRAINT = "constraint",
        e.IK = "ik",
        e.PATH_CONSTRAINT = "path",
        e.SKIN = "skin",
        e.DISPLAY = "display",
        e.ANIMATION = "animation",
        e.Z_ORDER = "zOrder",
        e.FFD = "ffd",
        e.FRAME = "frame",
        e.TRANSLATE_FRAME = "translateFrame",
        e.ROTATE_FRAME = "rotateFrame",
        e.SCALE_FRAME = "scaleFrame",
        e.DISPLAY_FRAME = "displayFrame",
        e.COLOR_FRAME = "colorFrame",
        e.DEFAULT_ACTIONS = "defaultActions",
        e.ACTIONS = "actions",
        e.EVENTS = "events",
        e.INTS = "ints",
        e.FLOATS = "floats",
        e.STRINGS = "strings",
        e.CANVAS = "canvas",
        e.TRANSFORM = "transform",
        e.PIVOT = "pivot",
        e.AABB = "aabb",
        e.COLOR = "color",
        e.VERSION = "version",
        e.COMPATIBLE_VERSION = "compatibleVersion",
        e.FRAME_RATE = "frameRate",
        e.TYPE = "type",
        e.SUB_TYPE = "subType",
        e.NAME = "name",
        e.PARENT = "parent",
        e.TARGET = "target",
        e.STAGE = "stage",
        e.SHARE = "share",
        e.PATH = "path",
        e.LENGTH = "length",
        e.DISPLAY_INDEX = "displayIndex",
        e.BLEND_MODE = "blendMode",
        e.INHERIT_TRANSLATION = "inheritTranslation",
        e.INHERIT_ROTATION = "inheritRotation",
        e.INHERIT_SCALE = "inheritScale",
        e.INHERIT_REFLECTION = "inheritReflection",
        e.INHERIT_ANIMATION = "inheritAnimation",
        e.INHERIT_DEFORM = "inheritDeform",
        e.SEGMENT_X = "segmentX",
        e.SEGMENT_Y = "segmentY",
        e.BEND_POSITIVE = "bendPositive",
        e.CHAIN = "chain",
        e.WEIGHT = "weight",
        e.FADE_IN_TIME = "fadeInTime",
        e.PLAY_TIMES = "playTimes",
        e.SCALE = "scale",
        e.OFFSET = "offset",
        e.POSITION = "position",
        e.DURATION = "duration",
        e.TWEEN_EASING = "tweenEasing",
        e.TWEEN_ROTATE = "tweenRotate",
        e.TWEEN_SCALE = "tweenScale",
        e.CLOCK_WISE = "clockwise",
        e.CURVE = "curve",
        e.SOUND = "sound",
        e.EVENT = "event",
        e.ACTION = "action",
        e.X = "x",
        e.Y = "y",
        e.SKEW_X = "skX",
        e.SKEW_Y = "skY",
        e.SCALE_X = "scX",
        e.SCALE_Y = "scY",
        e.VALUE = "value",
        e.ROTATE = "rotate",
        e.SKEW = "skew",
        e.ALPHA_OFFSET = "aO",
        e.RED_OFFSET = "rO",
        e.GREEN_OFFSET = "gO",
        e.BLUE_OFFSET = "bO",
        e.ALPHA_MULTIPLIER = "aM",
        e.RED_MULTIPLIER = "rM",
        e.GREEN_MULTIPLIER = "gM",
        e.BLUE_MULTIPLIER = "bM",
        e.UVS = "uvs",
        e.VERTICES = "vertices",
        e.TRIANGLES = "triangles",
        e.WEIGHTS = "weights",
        e.SLOT_POSE = "slotPose",
        e.BONE_POSE = "bonePose",
        e.GLUE_WEIGHTS = "glueWeights",
        e.GLUE_MESHES = "glueMeshes",
        e.BONES = "bones",
        e.POSITION_MODE = "positionMode",
        e.SPACING_MODE = "spacingMode",
        e.ROTATE_MODE = "rotateMode",
        e.SPACING = "spacing",
        e.ROTATE_OFFSET = "rotateOffset",
        e.ROTATE_MIX = "rotateMix",
        e.TRANSLATE_MIX = "translateMix",
        e.TARGET_DISPLAY = "targetDisplay",
        e.CLOSED = "closed",
        e.CONSTANT_SPEED = "constantSpeed",
        e.VERTEX_COUNT = "vertexCount",
        e.LENGTHS = "lengths",
        e.GOTO_AND_PLAY = "gotoAndPlay",
        e.DEFAULT_NAME = "default",
        e
    }();
    t.DataParser = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function i() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r._rawTextureAtlasIndex = 0,
            r._rawBones = [],
            r._data = null,
            r._armature = null,
            r._bone = null,
            r._surface = null,
            r._slot = null,
            r._skin = null,
            r._mesh = null,
            r._animation = null,
            r._timeline = null,
            r._rawTextureAtlases = null,
            r._defaultColorOffset = -1,
            r._prevClockwise = 0,
            r._prevRotation = 0,
            r._helpMatrixA = new t.Matrix,
            r._helpMatrixB = new t.Matrix,
            r._helpTransform = new t.Transform,
            r._helpColorTransform = new t.ColorTransform,
            r._helpPoint = new t.Point,
            r._helpArray = [],
            r._intArray = [],
            r._floatArray = [],
            r._frameIntArray = [],
            r._frameFloatArray = [],
            r._frameArray = [],
            r._timelineArray = [],
            r._cacheRawMeshes = [],
            r._cacheMeshes = [],
            r._actionFrames = [],
            r._weightSlotPose = {},
            r._weightBonePoses = {},
            r._cacheBones = {},
            r._slotChildActions = {},
            r
        }
        return __extends(i, e),
        i._getBoolean = function(t, e, r) {
            if (e in t) {
                var i = t[e]
                  , n = typeof i;
                if ("boolean" === n)
                    return i;
                if ("string" !== n)
                    return !!i;
                switch (i) {
                case "0":
                case "NaN":
                case "":
                case "false":
                case "null":
                case "undefined":
                    return !1;
                default:
                    return !0
                }
            }
            return r
        }
        ,
        i._getNumber = function(t, e, r) {
            if (e in t) {
                var i = t[e];
                return null === i || "NaN" === i ? r : +i || 0
            }
            return r
        }
        ,
        i._getString = function(e, r, i) {
            if (r in e) {
                var n = e[r]
                  , a = typeof n;
                if ("string" === a) {
                    if (t.DragonBones.webAssembly)
                        for (var s = 0, o = n.length; o > s; ++s)
                            if (n.charCodeAt(s) > 255)
                                return encodeURI(n);
                    return n
                }
                return String(n)
            }
            return i
        }
        ,
        i.prototype._getCurvePoint = function(t, e, r, i, n, a, s, o, l, h) {
            var u = 1 - l
              , c = u * u
              , f = l * l
              , d = u * c
              , p = 3 * l * c
              , _ = 3 * u * f
              , m = l * f;
            h.x = d * t + p * r + _ * n + m * s,
            h.y = d * e + p * i + _ * a + m * o
        }
        ,
        i.prototype._samplingEasingCurve = function(t, e) {
            for (var r = t.length, i = -2, n = 0, a = e.length; a > n; ++n) {
                for (var s = (n + 1) / (a + 1); (r > i + 6 ? t[i + 6] : 1) < s; )
                    i += 6;
                for (var o = i >= 0 && r > i + 6, l = o ? t[i] : 0, h = o ? t[i + 1] : 0, u = t[i + 2], c = t[i + 3], f = t[i + 4], d = t[i + 5], p = o ? t[i + 6] : 1, _ = o ? t[i + 7] : 1, m = 0, g = 1; g - m > 1e-4; ) {
                    var y = .5 * (g + m);
                    this._getCurvePoint(l, h, u, c, f, d, p, _, y, this._helpPoint),
                    s - this._helpPoint.x > 0 ? m = y : g = y
                }
                e[n] = this._helpPoint.y
            }
        }
        ,
        i.prototype._parseActionDataInFrame = function(e, r, i, n) {
            t.DataParser.EVENT in e && this._mergeActionFrame(e[t.DataParser.EVENT], r, 10, i, n),
            t.DataParser.SOUND in e && this._mergeActionFrame(e[t.DataParser.SOUND], r, 11, i, n),
            t.DataParser.ACTION in e && this._mergeActionFrame(e[t.DataParser.ACTION], r, 0, i, n),
            t.DataParser.EVENTS in e && this._mergeActionFrame(e[t.DataParser.EVENTS], r, 10, i, n),
            t.DataParser.ACTIONS in e && this._mergeActionFrame(e[t.DataParser.ACTIONS], r, 0, i, n)
        }
        ,
        i.prototype._mergeActionFrame = function(e, i, n, a, s) {
            for (var o = t.DragonBones.webAssembly ? this._armature.actions.size() : this._armature.actions.length, l = this._parseActionData(e, n, a, s), h = 0, u = null, c = 0, f = l; c < f.length; c++) {
                var d = f[c];
                this._armature.addAction(d, !1)
            }
            0 === this._actionFrames.length && (u = new r,
            u.frameStart = 0,
            this._actionFrames.push(u),
            u = null);
            for (var p = 0, _ = this._actionFrames; p < _.length; p++) {
                var m = _[p];
                if (m.frameStart === i) {
                    u = m;
                    break
                }
                if (m.frameStart > i)
                    break;
                h++
            }
            null === u && (u = new r,
            u.frameStart = i,
            this._actionFrames.splice(h + 1, 0, u));
            for (var g = 0; g < l.length; ++g)
                u.actions.push(o + g)
        }
        ,
        i.prototype._parseArmature = function(e, r) {
            var n = t.BaseObject.borrowObject(t.ArmatureData);
            if (n.name = i._getString(e, t.DataParser.NAME, ""),
            n.frameRate = i._getNumber(e, t.DataParser.FRAME_RATE, this._data.frameRate),
            n.scale = r,
            t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? n.type = t.DataParser._getArmatureType(e[t.DataParser.TYPE]) : n.type = i._getNumber(e, t.DataParser.TYPE, 0),
            0 === n.frameRate && (n.frameRate = 24),
            this._armature = n,
            t.DataParser.CANVAS in e) {
                var a = e[t.DataParser.CANVAS]
                  , s = t.BaseObject.borrowObject(t.CanvasData);
                t.DataParser.COLOR in a ? s.hasBackground = !0 : s.hasBackground = !1,
                s.color = i._getNumber(a, t.DataParser.COLOR, 0),
                s.x = i._getNumber(a, t.DataParser.X, 0) * n.scale,
                s.y = i._getNumber(a, t.DataParser.Y, 0) * n.scale,
                s.width = i._getNumber(a, t.DataParser.WIDTH, 0) * n.scale,
                s.height = i._getNumber(a, t.DataParser.HEIGHT, 0) * n.scale,
                n.canvas = s
            }
            if (t.DataParser.AABB in e) {
                var o = e[t.DataParser.AABB];
                n.aabb.x = i._getNumber(o, t.DataParser.X, 0) * n.scale,
                n.aabb.y = i._getNumber(o, t.DataParser.Y, 0) * n.scale,
                n.aabb.width = i._getNumber(o, t.DataParser.WIDTH, 0) * n.scale,
                n.aabb.height = i._getNumber(o, t.DataParser.HEIGHT, 0) * n.scale
            }
            if (t.DataParser.BONE in e)
                for (var l = e[t.DataParser.BONE], h = 0, u = l; h < u.length; h++) {
                    var c = u[h]
                      , f = i._getString(c, t.DataParser.PARENT, "")
                      , d = this._parseBone(c);
                    if (f.length > 0) {
                        var p = n.getBone(f);
                        null !== p ? d.parent = p : (f in this._cacheBones || (this._cacheBones[f] = []),
                        this._cacheBones[f].push(d))
                    }
                    if (d.name in this._cacheBones) {
                        for (var _ = 0, m = this._cacheBones[d.name]; _ < m.length; _++) {
                            var g = m[_];
                            g.parent = d
                        }
                        delete this._cacheBones[d.name]
                    }
                    n.addBone(d),
                    this._rawBones.push(d)
                }
            if (t.DataParser.IK in e)
                for (var y = e[t.DataParser.IK], v = 0, b = y; v < b.length; v++) {
                    var w = b[v]
                      , T = this._parseIKConstraint(w);
                    T && n.addConstraint(T)
                }
            if (n.sortBones(),
            t.DataParser.SLOT in e)
                for (var D = 0, S = e[t.DataParser.SLOT], E = 0, A = S; E < A.length; E++) {
                    var x = A[E];
                    n.addSlot(this._parseSlot(x, D++))
                }
            if (t.DataParser.SKIN in e)
                for (var P = e[t.DataParser.SKIN], C = 0, O = P; C < O.length; C++) {
                    var k = O[C];
                    n.addSkin(this._parseSkin(k))
                }
            if (t.DataParser.PATH_CONSTRAINT in e)
                for (var I = e[t.DataParser.PATH_CONSTRAINT], R = 0, B = I; R < B.length; R++) {
                    var M = B[R]
                      , T = this._parsePathConstraint(M);
                    T && n.addConstraint(T)
                }
            for (var F = 0, L = this._cacheRawMeshes.length; L > F; ++F) {
                var N = this._cacheRawMeshes[F];
                t.DataParser.GLUE_WEIGHTS in N && t.DataParser.GLUE_MESHES in N && this._parseMeshGlue(N, this._cacheMeshes[F])
            }
            for (var F = 0, L = this._cacheRawMeshes.length; L > F; ++F) {
                var j = this._cacheRawMeshes[F]
                  , z = i._getString(j, t.DataParser.SHARE, "");
                if (0 !== z.length) {
                    var U = i._getString(j, t.DataParser.SKIN, t.DataParser.DEFAULT_NAME);
                    0 === U.length && (U = t.DataParser.DEFAULT_NAME);
                    var V = n.getMesh(U, "", z);
                    if (null !== V) {
                        var $ = this._cacheMeshes[F];
                        $.vertices.shareFrom(V.vertices)
                    }
                }
            }
            if (t.DataParser.ANIMATION in e)
                for (var G = e[t.DataParser.ANIMATION], W = 0, H = G; W < H.length; W++) {
                    var Y = H[W]
                      , X = this._parseAnimation(Y);
                    n.addAnimation(X)
                }
            if (t.DataParser.DEFAULT_ACTIONS in e)
                for (var Z = this._parseActionData(e[t.DataParser.DEFAULT_ACTIONS], 0, null, null), q = 0, K = Z; q < K.length; q++) {
                    var J = K[q];
                    if (n.addAction(J, !0),
                    0 === J.type) {
                        var X = n.getAnimation(J.name);
                        null !== X && (n.defaultAnimation = X)
                    }
                }
            if (t.DataParser.ACTIONS in e)
                for (var Z = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null), Q = 0, te = Z; Q < te.length; Q++) {
                    var J = te[Q];
                    n.addAction(J, !1)
                }
            this._rawBones.length = 0,
            this._cacheRawMeshes.length = 0,
            this._cacheMeshes.length = 0,
            this._armature = null;
            for (var ee in this._weightSlotPose)
                delete this._weightSlotPose[ee];
            for (var ee in this._weightBonePoses)
                delete this._weightBonePoses[ee];
            for (var ee in this._cacheBones)
                delete this._cacheBones[ee];
            for (var ee in this._slotChildActions)
                delete this._slotChildActions[ee];
            return n
        }
        ,
        i.prototype._parseBone = function(e) {
            var r = 0
              , n = this._armature.scale;
            if (r = t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? t.DataParser._getBoneType(e[t.DataParser.TYPE]) : i._getNumber(e, t.DataParser.TYPE, 0),
            0 === r) {
                var a = t.BaseObject.borrowObject(t.BoneData);
                return a.inheritTranslation = i._getBoolean(e, t.DataParser.INHERIT_TRANSLATION, !0),
                a.inheritRotation = i._getBoolean(e, t.DataParser.INHERIT_ROTATION, !0),
                a.inheritScale = i._getBoolean(e, t.DataParser.INHERIT_SCALE, !0),
                a.inheritReflection = i._getBoolean(e, t.DataParser.INHERIT_REFLECTION, !0),
                a.length = i._getNumber(e, t.DataParser.LENGTH, 0) * n,
                a.name = i._getString(e, t.DataParser.NAME, ""),
                t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], a.transform, n),
                a
            }
            var s = t.BaseObject.borrowObject(t.SurfaceData);
            if (s.name = i._getString(e, t.DataParser.NAME, ""),
            s.segmentX = i._getNumber(e, t.DataParser.SEGMENT_X, 0),
            s.segmentY = i._getNumber(e, t.DataParser.SEGMENT_Y, 0),
            s.vertices.length = (s.segmentX + 1) * (s.segmentY + 1) * 2,
            t.DataParser.VERTICES in e)
                for (var o = e[t.DataParser.VERTICES], l = 0, h = s.vertices.length; h > l; ++l)
                    l < o.length ? s.vertices[l] = o[l] * n : s.vertices[l] = 0;
            return s
        }
        ,
        i.prototype._parseIKConstraint = function(e) {
            var r = this._armature.getBone(i._getString(e, t.DataParser.BONE, ""));
            if (null === r)
                return null;
            var n = this._armature.getBone(i._getString(e, t.DataParser.TARGET, ""));
            if (null === n)
                return null;
            var a = t.BaseObject.borrowObject(t.IKConstraintData);
            a.scaleEnabled = i._getBoolean(e, t.DataParser.SCALE, !1),
            a.bendPositive = i._getBoolean(e, t.DataParser.BEND_POSITIVE, !0),
            a.weight = i._getNumber(e, t.DataParser.WEIGHT, 1),
            a.name = i._getString(e, t.DataParser.NAME, ""),
            a.type = 0,
            a.target = n;
            var s = i._getNumber(e, t.DataParser.CHAIN, 0);
            return s > 0 && null !== r.parent ? (a.root = r.parent,
            a.bone = r) : (a.root = r,
            a.bone = null),
            a
        }
        ,
        i.prototype._parsePathConstraint = function(e) {
            var r = this._armature.getSlot(i._getString(e, t.DataParser.TARGET, ""));
            if (null === r)
                return null;
            var n = this._armature.defaultSkin;
            if (null === n)
                return null;
            var a = n.getDisplay(r.name, i._getString(e, t.DataParser.TARGET_DISPLAY, r.name));
            if (null === a || !(a instanceof t.PathDisplayData))
                return null;
            var s = e[t.DataParser.BONES];
            if (null === s || 0 === s.length)
                return null;
            var o = t.BaseObject.borrowObject(t.PathConstraintData);
            o.name = i._getString(e, t.DataParser.NAME, ""),
            o.type = 1,
            o.pathSlot = r,
            o.pathDisplayData = a,
            o.target = r.parent,
            o.positionMode = t.DataParser._getPositionMode(i._getString(e, t.DataParser.POSITION_MODE, "")),
            o.spacingMode = t.DataParser._getSpacingMode(i._getString(e, t.DataParser.SPACING_MODE, "")),
            o.rotateMode = t.DataParser._getRotateMode(i._getString(e, t.DataParser.ROTATE_MODE, "")),
            o.position = i._getNumber(e, t.DataParser.POSITION, 0),
            o.spacing = i._getNumber(e, t.DataParser.SPACING, 0),
            o.rotateOffset = i._getNumber(e, t.DataParser.ROTATE_OFFSET, 0),
            o.rotateMix = i._getNumber(e, t.DataParser.ROTATE_MIX, 1),
            o.translateMix = i._getNumber(e, t.DataParser.TRANSLATE_MIX, 1);
            for (var l = 0, h = s; l < h.length; l++) {
                var u = h[l]
                  , c = this._armature.getBone(u);
                null !== c && (o.AddBone(c),
                null === o.root && (o.root = c))
            }
            return o
        }
        ,
        i.prototype._parseSlot = function(e, r) {
            var n = t.BaseObject.borrowObject(t.SlotData);
            return n.displayIndex = i._getNumber(e, t.DataParser.DISPLAY_INDEX, 0),
            n.zOrder = r,
            n.name = i._getString(e, t.DataParser.NAME, ""),
            n.parent = this._armature.getBone(i._getString(e, t.DataParser.PARENT, "")),
            t.DataParser.BLEND_MODE in e && "string" == typeof e[t.DataParser.BLEND_MODE] ? n.blendMode = t.DataParser._getBlendMode(e[t.DataParser.BLEND_MODE]) : n.blendMode = i._getNumber(e, t.DataParser.BLEND_MODE, 0),
            t.DataParser.COLOR in e ? (n.color = t.SlotData.createColor(),
            this._parseColorTransform(e[t.DataParser.COLOR], n.color)) : n.color = t.SlotData.DEFAULT_COLOR,
            t.DataParser.ACTIONS in e && (this._slotChildActions[n.name] = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null)),
            n
        }
        ,
        i.prototype._parseSkin = function(e) {
            var r = t.BaseObject.borrowObject(t.SkinData);
            if (r.name = i._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME),
            0 === r.name.length && (r.name = t.DataParser.DEFAULT_NAME),
            t.DataParser.SLOT in e) {
                var n = e[t.DataParser.SLOT];
                this._skin = r;
                for (var a = 0, s = n; a < s.length; a++) {
                    var o = s[a]
                      , l = i._getString(o, t.DataParser.NAME, "")
                      , h = this._armature.getSlot(l);
                    if (null !== h) {
                        if (this._slot = h,
                        t.DataParser.DISPLAY in o)
                            for (var u = o[t.DataParser.DISPLAY], c = 0, f = u; c < f.length; c++) {
                                var d = f[c];
                                d ? r.addDisplay(l, this._parseDisplay(d)) : r.addDisplay(l, null)
                            }
                        this._slot = null
                    }
                }
                this._skin = null
            }
            return r
        }
        ,
        i.prototype._parseDisplay = function(e) {
            var r = i._getString(e, t.DataParser.NAME, "")
              , n = i._getString(e, t.DataParser.PATH, "")
              , a = 0
              , s = null;
            switch (a = t.DataParser.TYPE in e && "string" == typeof e[t.DataParser.TYPE] ? t.DataParser._getDisplayType(e[t.DataParser.TYPE]) : i._getNumber(e, t.DataParser.TYPE, a)) {
            case 0:
                var o = s = t.BaseObject.borrowObject(t.ImageDisplayData);
                o.name = r,
                o.path = n.length > 0 ? n : r,
                this._parsePivot(e, o);
                break;
            case 1:
                var l = s = t.BaseObject.borrowObject(t.ArmatureDisplayData);
                if (l.name = r,
                l.path = n.length > 0 ? n : r,
                l.inheritAnimation = !0,
                t.DataParser.ACTIONS in e)
                    for (var h = this._parseActionData(e[t.DataParser.ACTIONS], 0, null, null), u = 0, c = h; u < c.length; u++) {
                        var f = c[u];
                        l.addAction(f)
                    }
                else if (this._slot.name in this._slotChildActions) {
                    var d = this._skin.getDisplays(this._slot.name);
                    if (null === d ? 0 === this._slot.displayIndex : this._slot.displayIndex === d.length) {
                        for (var p = 0, _ = this._slotChildActions[this._slot.name]; p < _.length; p++) {
                            var f = _[p];
                            l.addAction(f)
                        }
                        delete this._slotChildActions[this._slot.name]
                    }
                }
                break;
            case 2:
                var m = s = t.BaseObject.borrowObject(t.MeshDisplayData);
                m.vertices.inheritDeform = i._getBoolean(e, t.DataParser.INHERIT_DEFORM, !0),
                m.name = r,
                m.path = n.length > 0 ? n : r,
                m.vertices.data = this._data,
                t.DataParser.SHARE in e ? (this._cacheRawMeshes.push(e),
                this._cacheMeshes.push(m)) : this._parseMesh(e, m),
                t.DataParser.GLUE_WEIGHTS in e && t.DataParser.GLUE_MESHES in e && (this._cacheRawMeshes.push(e),
                this._cacheMeshes.push(m));
                break;
            case 3:
                var g = this._parseBoundingBox(e);
                if (null !== g) {
                    var y = s = t.BaseObject.borrowObject(t.BoundingBoxDisplayData);
                    y.name = r,
                    y.path = n.length > 0 ? n : r,
                    y.boundingBox = g
                }
                break;
            case 4:
                var v = e[t.DataParser.LENGTHS]
                  , b = s = t.BaseObject.borrowObject(t.PathDisplayData);
                b.closed = i._getBoolean(e, t.DataParser.CLOSED, !1),
                b.constantSpeed = i._getBoolean(e, t.DataParser.CONSTANT_SPEED, !1),
                b.name = r,
                b.path = n.length > 0 ? n : r,
                b.vertices.data = this._data,
                b.curveLengths.length = v.length;
                for (var w = 0, T = v.length; T > w; ++w)
                    b.curveLengths[w] = v[w];
                this._parsePath(e, b)
            }
            return null !== s && t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], s.transform, this._armature.scale),
            s
        }
        ,
        i.prototype._parsePath = function(e, r) {
            var n = e[t.DataParser.VERTICES]
              , a = i._getNumber(e, t.DataParser.VERTEX_COUNT, 0)
              , s = this._floatArray.length
              , o = this._intArray.length;
            if (r.vertices.offset = o,
            this._intArray.length += 2,
            this._intArray[o + 0] = a,
            this._intArray[o + 2] = s,
            t.DataParser.WEIGHTS in e) {
                var l = e[t.DataParser.WEIGHTS]
                  , h = e[t.DataParser.BONES]
                  , u = h.length
                  , c = Math.floor(l.length - a) / 2
                  , f = this._intArray.length
                  , d = this._floatArray.length
                  , p = this._armature.sortedBones
                  , _ = t.BaseObject.borrowObject(t.WeightData);
                _.count = c,
                _.offset = f,
                this._intArray.length += 2 + u + a + c,
                this._intArray[f + 0] = u,
                this._intArray[f + 1] = d;
                for (var m = 0; u > m; m++) {
                    var g = h[m]
                      , y = this._rawBones[g];
                    _.addBone(y),
                    this._intArray[f + 2 + m] = p.indexOf(y)
                }
                this._floatArray.length += 3 * c;
                for (var m = 0, v = 0, b = 0, w = f + 2 + u, T = d; c > m; m++) {
                    var D = l[v++];
                    this._intArray[w++] = D;
                    for (var S = 0; D > S; S++) {
                        var E = l[v++]
                          , A = l[v++]
                          , x = n[b++]
                          , P = n[b++];
                        this._intArray[w++] = h.indexOf(E),
                        this._floatArray[T++] = A,
                        this._floatArray[T++] = x,
                        this._floatArray[T++] = P
                    }
                }
                r.vertices.weight = _
            } else {
                this._floatArray.length += n.length;
                for (var m = 0, C = n.length; C > m; ++m)
                    this._floatArray[s + m] = n[m]
            }
        }
        ,
        i.prototype._parsePivot = function(e, r) {
            if (t.DataParser.PIVOT in e) {
                var n = e[t.DataParser.PIVOT];
                r.pivot.x = i._getNumber(n, t.DataParser.X, 0),
                r.pivot.y = i._getNumber(n, t.DataParser.Y, 0)
            } else
                r.pivot.x = .5,
                r.pivot.y = .5
        }
        ,
        i.prototype._parseMesh = function(e, r) {
            var i = e[t.DataParser.VERTICES]
              , n = e[t.DataParser.UVS]
              , a = e[t.DataParser.TRIANGLES]
              , s = Math.floor(i.length / 2)
              , o = Math.floor(a.length / 3)
              , l = this._floatArray.length
              , h = l + 2 * s
              , u = this._intArray.length
              , c = this._skin.name + "_" + this._slot.name + "_" + r.name;
            r.vertices.offset = u,
            this._intArray.length += 4 + 3 * o,
            this._intArray[u + 0] = s,
            this._intArray[u + 1] = o,
            this._intArray[u + 2] = l;
            for (var f = 0, d = 3 * o; d > f; ++f)
                this._intArray[u + 4 + f] = a[f];
            this._floatArray.length += 2 * s + 2 * s;
            for (var f = 0, d = 2 * s; d > f; ++f)
                this._floatArray[l + f] = i[f],
                this._floatArray[h + f] = n[f];
            if (t.DataParser.WEIGHTS in e) {
                var p = e[t.DataParser.WEIGHTS]
                  , _ = e[t.DataParser.SLOT_POSE]
                  , m = e[t.DataParser.BONE_POSE]
                  , g = this._armature.sortedBones
                  , y = new Array
                  , v = Math.floor(m.length / 7)
                  , b = this._floatArray.length
                  , w = Math.floor(p.length - s) / 2
                  , T = this._intArray.length
                  , D = t.BaseObject.borrowObject(t.WeightData);
                D.count = w,
                D.offset = T,
                y.length = v,
                this._intArray.length += 2 + v + s + w,
                this._intArray[T + 1] = b;
                for (var f = 0; v > f; ++f) {
                    var S = m[7 * f]
                      , E = this._rawBones[S];
                    D.addBone(E),
                    y[f] = S,
                    this._intArray[T + 2 + f] = g.indexOf(E)
                }
                this._floatArray.length += 3 * w,
                this._helpMatrixA.copyFromArray(_, 0);
                for (var f = 0, A = 0, x = T + 2 + v, P = b; s > f; ++f) {
                    var C = 2 * f
                      , O = this._intArray[x++] = p[A++]
                      , k = this._floatArray[l + C]
                      , I = this._floatArray[l + C + 1];
                    this._helpMatrixA.transformPoint(k, I, this._helpPoint),
                    k = this._helpPoint.x,
                    I = this._helpPoint.y;
                    for (var R = 0; O > R; ++R) {
                        var S = p[A++]
                          , B = y.indexOf(S);
                        this._helpMatrixB.copyFromArray(m, 7 * B + 1),
                        this._helpMatrixB.invert(),
                        this._helpMatrixB.transformPoint(k, I, this._helpPoint),
                        this._intArray[x++] = B,
                        this._floatArray[P++] = p[A++],
                        this._floatArray[P++] = this._helpPoint.x,
                        this._floatArray[P++] = this._helpPoint.y
                    }
                }
                r.vertices.weight = D,
                this._weightSlotPose[c] = _,
                this._weightBonePoses[c] = m
            }
        }
        ,
        i.prototype._parseMeshGlue = function(t, e) {}
        ,
        i.prototype._parseBoundingBox = function(e) {
            var r = null
              , n = 0;
            switch (n = t.DataParser.SUB_TYPE in e && "string" == typeof e[t.DataParser.SUB_TYPE] ? t.DataParser._getBoundingBoxType(e[t.DataParser.SUB_TYPE]) : i._getNumber(e, t.DataParser.SUB_TYPE, n)) {
            case 0:
                r = t.BaseObject.borrowObject(t.RectangleBoundingBoxData);
                break;
            case 1:
                r = t.BaseObject.borrowObject(t.EllipseBoundingBoxData);
                break;
            case 2:
                r = this._parsePolygonBoundingBox(e)
            }
            return null !== r && (r.color = i._getNumber(e, t.DataParser.COLOR, 0),
            (0 === r.type || 1 === r.type) && (r.width = i._getNumber(e, t.DataParser.WIDTH, 0),
            r.height = i._getNumber(e, t.DataParser.HEIGHT, 0))),
            r
        }
        ,
        i.prototype._parsePolygonBoundingBox = function(e) {
            var r = t.BaseObject.borrowObject(t.PolygonBoundingBoxData);
            if (t.DataParser.VERTICES in e) {
                var i = this._armature.scale
                  , n = e[t.DataParser.VERTICES]
                  , a = r.vertices;
                t.DragonBones.webAssembly ? a.resize(n.length, 0) : a.length = n.length;
                for (var s = 0, o = n.length; o > s; s += 2) {
                    var l = n[s] * i
                      , h = n[s + 1] * i;
                    t.DragonBones.webAssembly ? (a.set(s, l),
                    a.set(s + 1, h)) : (a[s] = l,
                    a[s + 1] = h),
                    0 === s ? (r.x = l,
                    r.y = h,
                    r.width = l,
                    r.height = h) : (l < r.x ? r.x = l : l > r.width && (r.width = l),
                    h < r.y ? r.y = h : h > r.height && (r.height = h))
                }
                r.width -= r.x,
                r.height -= r.y
            } else
                console.warn("Data error.\n Please reexport DragonBones Data to fixed the bug.");
            return r
        }
        ,
        i.prototype._parseAnimation = function(e) {
            var r = t.BaseObject.borrowObject(t.AnimationData);
            if (r.frameCount = Math.max(i._getNumber(e, t.DataParser.DURATION, 1), 1),
            r.playTimes = i._getNumber(e, t.DataParser.PLAY_TIMES, 1),
            r.duration = r.frameCount / this._armature.frameRate,
            r.fadeInTime = i._getNumber(e, t.DataParser.FADE_IN_TIME, 0),
            r.scale = i._getNumber(e, t.DataParser.SCALE, 1),
            r.name = i._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME),
            0 === r.name.length && (r.name = t.DataParser.DEFAULT_NAME),
            r.frameIntOffset = this._frameIntArray.length,
            r.frameFloatOffset = this._frameFloatArray.length,
            r.frameOffset = this._frameArray.length,
            this._animation = r,
            t.DataParser.FRAME in e) {
                var n = e[t.DataParser.FRAME]
                  , a = n.length;
                if (a > 0)
                    for (var s = 0, o = 0; a > s; ++s) {
                        var l = n[s];
                        this._parseActionDataInFrame(l, o, null, null),
                        o += i._getNumber(l, t.DataParser.DURATION, 1)
                    }
            }
            if (t.DataParser.Z_ORDER in e && (this._animation.zOrderTimeline = this._parseTimeline(e[t.DataParser.Z_ORDER], null, t.DataParser.FRAME, 1, !1, !1, 0, this._parseZOrderFrame)),
            t.DataParser.BONE in e)
                for (var h = e[t.DataParser.BONE], u = 0, c = h; u < c.length; u++) {
                    var f = c[u];
                    this._parseBoneTimeline(f)
                }
            if (t.DataParser.SURFACE in e)
                for (var h = e[t.DataParser.SURFACE], d = 0, p = h; d < p.length; d++) {
                    var f = p[d]
                      , _ = i._getString(f, t.DataParser.NAME, "");
                    if (this._surface = this._armature.getBone(_),
                    null !== this._surface) {
                        var m = this._parseTimeline(f, null, t.DataParser.FRAME, 50, !1, !0, 0, this._parseSurfaceFrame);
                        null !== m && this._animation.addSurfaceTimeline(this._surface, m),
                        this._surface = null
                    }
                }
            if (t.DataParser.SLOT in e)
                for (var h = e[t.DataParser.SLOT], g = 0, y = h; g < y.length; g++) {
                    var f = y[g];
                    this._parseSlotTimeline(f)
                }
            if (t.DataParser.FFD in e)
                for (var h = e[t.DataParser.FFD], v = 0, b = h; v < b.length; v++) {
                    var f = b[v]
                      , w = i._getString(f, t.DataParser.SKIN, t.DataParser.DEFAULT_NAME)
                      , T = i._getString(f, t.DataParser.SLOT, "")
                      , D = i._getString(f, t.DataParser.NAME, "");
                    if (0 === w.length && (w = t.DataParser.DEFAULT_NAME),
                    this._slot = this._armature.getSlot(T),
                    this._mesh = this._armature.getMesh(w, T, D),
                    null !== this._slot && null !== this._mesh) {
                        var m = this._parseTimeline(f, null, t.DataParser.FRAME, 22, !1, !0, 0, this._parseSlotFFDFrame);
                        null !== m && this._animation.addSlotTimeline(this._slot, m),
                        this._slot = null,
                        this._mesh = null
                    }
                }
            if (t.DataParser.IK in e)
                for (var h = e[t.DataParser.IK], S = 0, E = h; S < E.length; S++) {
                    var f = E[S]
                      , A = i._getString(f, t.DataParser.NAME, "")
                      , x = this._armature.getConstraint(A);
                    if (null !== x) {
                        var m = this._parseTimeline(f, null, t.DataParser.FRAME, 30, !0, !1, 2, this._parseIKConstraintFrame);
                        null !== m && this._animation.addConstraintTimeline(x, m)
                    }
                }
            if (t.DataParser.ANIMATION in e)
                for (var h = e[t.DataParser.ANIMATION], P = 0, C = h; P < C.length; P++) {
                    var f = C[P]
                      , O = i._getString(f, t.DataParser.NAME, "")
                      , m = this._parseTimeline(f, null, t.DataParser.FRAME, 40, !0, !1, 2, this._parseAnimationFrame);
                    null !== m && this._animation.addAnimationTimeline(O, m)
                }
            return this._actionFrames.length > 0 && (this._animation.actionTimeline = this._parseTimeline(null, this._actionFrames, "", 0, !1, !1, 0, this._parseActionFrame),
            this._actionFrames.length = 0),
            this._animation = null,
            r
        }
        ,
        i.prototype._parseTimeline = function(e, n, a, s, o, l, h, u) {
            if (null !== e && a.length > 0 && a in e && (n = e[a]),
            null === n)
                return null;
            var c = n.length;
            if (0 === c)
                return null;
            var f = this._frameIntArray.length
              , d = this._frameFloatArray.length
              , p = t.BaseObject.borrowObject(t.TimelineData)
              , _ = this._timelineArray.length;
            if (this._timelineArray.length += 5 + c,
            null !== e ? (this._timelineArray[_ + 0] = Math.round(100 * i._getNumber(e, t.DataParser.SCALE, 1)),
            this._timelineArray[_ + 1] = Math.round(100 * i._getNumber(e, t.DataParser.OFFSET, 0))) : (this._timelineArray[_ + 0] = 100,
            this._timelineArray[_ + 1] = 0),
            this._timelineArray[_ + 2] = c,
            this._timelineArray[_ + 3] = h,
            o ? this._timelineArray[_ + 4] = f - this._animation.frameIntOffset : l ? this._timelineArray[_ + 4] = d - this._animation.frameFloatOffset : this._timelineArray[_ + 4] = 0,
            this._timeline = p,
            p.type = s,
            p.offset = _,
            1 === c)
                p.frameIndicesOffset = -1,
                this._timelineArray[_ + 5 + 0] = u.call(this, n[0], 0, 0) - this._animation.frameOffset;
            else {
                var m = this._animation.frameCount + 1
                  , g = this._data.frameIndices
                  , y = 0;
                t.DragonBones.webAssembly ? (y = g.size(),
                g.resize(y + m, 0)) : (y = g.length,
                g.length += m),
                p.frameIndicesOffset = y;
                for (var v = 0, b = 0, w = 0, T = 0; m > v; ++v) {
                    if (v >= w + T && c > b) {
                        var D = n[b];
                        w = v,
                        T = b === c - 1 ? this._animation.frameCount - w : D instanceof r ? this._actionFrames[b + 1].frameStart - w : i._getNumber(D, t.DataParser.DURATION, 1),
                        this._timelineArray[_ + 5 + b] = u.call(this, D, w, T) - this._animation.frameOffset,
                        b++
                    }
                    t.DragonBones.webAssembly ? g.set(y + v, b - 1) : g[y + v] = b - 1
                }
            }
            return this._timeline = null,
            p
        }
        ,
        i.prototype._parseBoneTimeline = function(e) {
            var r = this._armature.getBone(i._getString(e, t.DataParser.NAME, ""));
            if (null !== r) {
                if (this._bone = r,
                this._slot = this._armature.getSlot(this._bone.name),
                t.DataParser.TRANSLATE_FRAME in e) {
                    var n = this._parseTimeline(e, null, t.DataParser.TRANSLATE_FRAME, 11, !1, !0, 2, this._parseBoneTranslateFrame);
                    null !== n && this._animation.addBoneTimeline(r, n)
                }
                if (t.DataParser.ROTATE_FRAME in e) {
                    var n = this._parseTimeline(e, null, t.DataParser.ROTATE_FRAME, 12, !1, !0, 2, this._parseBoneRotateFrame);
                    null !== n && this._animation.addBoneTimeline(r, n)
                }
                if (t.DataParser.SCALE_FRAME in e) {
                    var n = this._parseTimeline(e, null, t.DataParser.SCALE_FRAME, 13, !1, !0, 2, this._parseBoneScaleFrame);
                    null !== n && this._animation.addBoneTimeline(r, n)
                }
                if (t.DataParser.FRAME in e) {
                    var n = this._parseTimeline(e, null, t.DataParser.FRAME, 10, !1, !0, 6, this._parseBoneAllFrame);
                    null !== n && this._animation.addBoneTimeline(r, n)
                }
                this._bone = null,
                this._slot = null
            }
        }
        ,
        i.prototype._parseSlotTimeline = function(e) {
            var r = this._armature.getSlot(i._getString(e, t.DataParser.NAME, ""));
            if (null !== r) {
                this._slot = r;
                var n = null;
                n = t.DataParser.DISPLAY_FRAME in e ? this._parseTimeline(e, null, t.DataParser.DISPLAY_FRAME, 20, !1, !1, 0, this._parseSlotDisplayFrame) : this._parseTimeline(e, null, t.DataParser.FRAME, 20, !1, !1, 0, this._parseSlotDisplayFrame),
                null !== n && this._animation.addSlotTimeline(r, n);
                var a = null;
                a = t.DataParser.COLOR_FRAME in e ? this._parseTimeline(e, null, t.DataParser.COLOR_FRAME, 21, !0, !1, 1, this._parseSlotColorFrame) : this._parseTimeline(e, null, t.DataParser.FRAME, 21, !0, !1, 1, this._parseSlotColorFrame),
                null !== a && this._animation.addSlotTimeline(r, a),
                this._slot = null
            }
        }
        ,
        i.prototype._parseFrame = function(t, e, r) {
            var i = this._frameArray.length;
            return this._frameArray.length += 1,
            this._frameArray[i + 0] = e,
            i
        }
        ,
        i.prototype._parseTweenFrame = function(e, r, n) {
            var a = this._parseFrame(e, r, n);
            if (n > 0)
                if (t.DataParser.CURVE in e) {
                    var s = n + 1;
                    this._helpArray.length = s,
                    this._samplingEasingCurve(e[t.DataParser.CURVE], this._helpArray),
                    this._frameArray.length += 2 + this._helpArray.length,
                    this._frameArray[a + 1] = 2,
                    this._frameArray[a + 2] = s;
                    for (var o = 0; s > o; ++o)
                        this._frameArray[a + 3 + o] = Math.round(1e4 * this._helpArray[o])
                } else {
                    var l = -2
                      , h = l;
                    t.DataParser.TWEEN_EASING in e && (h = i._getNumber(e, t.DataParser.TWEEN_EASING, l)),
                    h === l ? (this._frameArray.length += 1,
                    this._frameArray[a + 1] = 0) : 0 === h ? (this._frameArray.length += 1,
                    this._frameArray[a + 1] = 1) : 0 > h ? (this._frameArray.length += 2,
                    this._frameArray[a + 1] = 3,
                    this._frameArray[a + 2] = Math.round(100 * -h)) : 1 >= h ? (this._frameArray.length += 2,
                    this._frameArray[a + 1] = 4,
                    this._frameArray[a + 2] = Math.round(100 * h)) : (this._frameArray.length += 2,
                    this._frameArray[a + 1] = 5,
                    this._frameArray[a + 2] = Math.round(100 * h - 100))
                }
            else
                this._frameArray.length += 1,
                this._frameArray[a + 1] = 0;
            return a
        }
        ,
        i.prototype._parseActionFrame = function(t, e, r) {
            var i = this._frameArray.length
              , n = t.actions.length;
            this._frameArray.length += 2 + n,
            this._frameArray[i + 0] = e,
            this._frameArray[i + 0 + 1] = n;
            for (var a = 0; n > a; ++a)
                this._frameArray[i + 0 + 2 + a] = t.actions[a];
            return i
        }
        ,
        i.prototype._parseZOrderFrame = function(e, r, i) {
            var n = this._parseFrame(e, r, i);
            if (t.DataParser.Z_ORDER in e) {
                var a = e[t.DataParser.Z_ORDER];
                if (a.length > 0) {
                    for (var s = this._armature.sortedSlots.length, o = new Array(s - a.length / 2), l = new Array(s), h = 0; h < o.length; ++h)
                        o[h] = 0;
                    for (var u = 0; s > u; ++u)
                        l[u] = -1;
                    for (var c = 0, f = 0, d = 0, p = a.length; p > d; d += 2) {
                        for (var _ = a[d], m = a[d + 1]; c !== _; )
                            o[f++] = c++;
                        var g = c + m;
                        l[g] = c++
                    }
                    for (; s > c; )
                        o[f++] = c++;
                    this._frameArray.length += 1 + s,
                    this._frameArray[n + 1] = s;
                    for (var y = s; y--; )
                        -1 === l[y] ? this._frameArray[n + 2 + y] = o[--f] || 0 : this._frameArray[n + 2 + y] = l[y] || 0;
                    return n
                }
            }
            return this._frameArray.length += 1,
            this._frameArray[n + 1] = 0,
            n
        }
        ,
        i.prototype._parseBoneAllFrame = function(e, r, n) {
            this._helpTransform.identity(),
            t.DataParser.TRANSFORM in e && this._parseTransform(e[t.DataParser.TRANSFORM], this._helpTransform, 1);
            var a = this._helpTransform.rotation;
            0 !== r && (0 === this._prevClockwise ? a = this._prevRotation + t.Transform.normalizeRadian(a - this._prevRotation) : ((this._prevClockwise > 0 ? a >= this._prevRotation : a <= this._prevRotation) && (this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1),
            a = this._prevRotation + a - this._prevRotation + t.Transform.PI_D * this._prevClockwise)),
            this._prevClockwise = i._getNumber(e, t.DataParser.TWEEN_ROTATE, 0),
            this._prevRotation = a;
            var s = this._parseTweenFrame(e, r, n)
              , o = this._frameFloatArray.length;
            return this._frameFloatArray.length += 6,
            this._frameFloatArray[o++] = this._helpTransform.x,
            this._frameFloatArray[o++] = this._helpTransform.y,
            this._frameFloatArray[o++] = a,
            this._frameFloatArray[o++] = this._helpTransform.skew,
            this._frameFloatArray[o++] = this._helpTransform.scaleX,
            this._frameFloatArray[o++] = this._helpTransform.scaleY,
            this._parseActionDataInFrame(e, r, this._bone, this._slot),
            s
        }
        ,
        i.prototype._parseBoneTranslateFrame = function(e, r, n) {
            var a = this._parseTweenFrame(e, r, n)
              , s = this._frameFloatArray.length;
            return this._frameFloatArray.length += 2,
            this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.X, 0),
            this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.Y, 0),
            a
        }
        ,
        i.prototype._parseBoneRotateFrame = function(e, r, n) {
            var a = i._getNumber(e, t.DataParser.ROTATE, 0) * t.Transform.DEG_RAD;
            0 !== r && (0 === this._prevClockwise ? a = this._prevRotation + t.Transform.normalizeRadian(a - this._prevRotation) : ((this._prevClockwise > 0 ? a >= this._prevRotation : a <= this._prevRotation) && (this._prevClockwise = this._prevClockwise > 0 ? this._prevClockwise - 1 : this._prevClockwise + 1),
            a = this._prevRotation + a - this._prevRotation + t.Transform.PI_D * this._prevClockwise)),
            this._prevClockwise = i._getNumber(e, t.DataParser.CLOCK_WISE, 0),
            this._prevRotation = a;
            var s = this._parseTweenFrame(e, r, n)
              , o = this._frameFloatArray.length;
            return this._frameFloatArray.length += 2,
            this._frameFloatArray[o++] = a,
            this._frameFloatArray[o++] = i._getNumber(e, t.DataParser.SKEW, 0) * t.Transform.DEG_RAD,
            s
        }
        ,
        i.prototype._parseBoneScaleFrame = function(e, r, n) {
            var a = this._parseTweenFrame(e, r, n)
              , s = this._frameFloatArray.length;
            return this._frameFloatArray.length += 2,
            this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.X, 1),
            this._frameFloatArray[s++] = i._getNumber(e, t.DataParser.Y, 1),
            a
        }
        ,
        i.prototype._parseSurfaceFrame = function(e, r, n) {
            var a = this._frameFloatArray.length
              , s = this._parseTweenFrame(e, r, n)
              , o = e[t.DataParser.VERTICES]
              , l = i._getNumber(e, t.DataParser.OFFSET, 0)
              , h = this._surface.vertices.length / 2
              , u = 0
              , c = 0;
            this._frameFloatArray.length += 2 * h;
            for (var f = 0; 2 * h > f; f += 2)
                u = l > f || f - l >= o.length ? 0 : o[f - l],
                c = l > f + 1 || f + 1 - l >= o.length ? 0 : o[f + 1 - l],
                this._frameFloatArray[a + f] = u,
                this._frameFloatArray[a + f + 1] = c;
            if (0 === r) {
                var d = this._frameIntArray.length;
                this._frameIntArray.length += 5,
                this._frameIntArray[d + 0] = 0,
                this._frameIntArray[d + 1] = this._frameFloatArray.length - a,
                this._frameIntArray[d + 2] = this._frameFloatArray.length - a,
                this._frameIntArray[d + 3] = 0,
                this._frameIntArray[d + 4] = a - this._animation.frameFloatOffset,
                this._timelineArray[this._timeline.offset + 3] = d - this._animation.frameIntOffset
            }
            return s
        }
        ,
        i.prototype._parseSlotDisplayFrame = function(e, r, n) {
            var a = this._parseFrame(e, r, n);
            return this._frameArray.length += 1,
            t.DataParser.VALUE in e ? this._frameArray[a + 1] = i._getNumber(e, t.DataParser.VALUE, 0) : this._frameArray[a + 1] = i._getNumber(e, t.DataParser.DISPLAY_INDEX, 0),
            this._parseActionDataInFrame(e, r, this._slot.parent, this._slot),
            a
        }
        ,
        i.prototype._parseSlotColorFrame = function(e, r, i) {
            var n = this._parseTweenFrame(e, r, i)
              , a = -1;
            if (t.DataParser.VALUE in e || t.DataParser.COLOR in e) {
                var s = t.DataParser.VALUE in e ? e[t.DataParser.VALUE] : e[t.DataParser.COLOR];
                for (var o in s) {
                    this._parseColorTransform(s, this._helpColorTransform),
                    a = this._intArray.length,
                    this._intArray.length += 8,
                    this._intArray[a++] = Math.round(100 * this._helpColorTransform.alphaMultiplier),
                    this._intArray[a++] = Math.round(100 * this._helpColorTransform.redMultiplier),
                    this._intArray[a++] = Math.round(100 * this._helpColorTransform.greenMultiplier),
                    this._intArray[a++] = Math.round(100 * this._helpColorTransform.blueMultiplier),
                    this._intArray[a++] = Math.round(this._helpColorTransform.alphaOffset),
                    this._intArray[a++] = Math.round(this._helpColorTransform.redOffset),
                    this._intArray[a++] = Math.round(this._helpColorTransform.greenOffset),
                    this._intArray[a++] = Math.round(this._helpColorTransform.blueOffset),
                    a -= 8;
                    break
                }
            }
            0 > a && (this._defaultColorOffset < 0 && (this._defaultColorOffset = a = this._intArray.length,
            this._intArray.length += 8,
            this._intArray[a++] = 100,
            this._intArray[a++] = 100,
            this._intArray[a++] = 100,
            this._intArray[a++] = 100,
            this._intArray[a++] = 0,
            this._intArray[a++] = 0,
            this._intArray[a++] = 0,
            this._intArray[a++] = 0),
            a = this._defaultColorOffset);
            var l = this._frameIntArray.length;
            return this._frameIntArray.length += 1,
            this._frameIntArray[l] = a,
            n
        }
        ,
        i.prototype._parseSlotFFDFrame = function(e, r, n) {
            var a = this._frameFloatArray.length
              , s = this._parseTweenFrame(e, r, n)
              , o = t.DataParser.VERTICES in e ? e[t.DataParser.VERTICES] : null
              , l = i._getNumber(e, t.DataParser.OFFSET, 0)
              , h = this._intArray[this._mesh.vertices.offset + 0]
              , u = this._mesh.parent.name + "_" + this._slot.name + "_" + this._mesh.name
              , c = this._mesh.vertices.weight
              , f = 0
              , d = 0
              , p = 0
              , _ = 0;
            if (null !== c) {
                var m = this._weightSlotPose[u];
                this._helpMatrixA.copyFromArray(m, 0),
                this._frameFloatArray.length += 2 * c.count,
                p = c.offset + 2 + c.bones.length
            } else
                this._frameFloatArray.length += 2 * h;
            for (var g = 0; 2 * h > g; g += 2)
                if (null === o ? (f = 0,
                d = 0) : (f = l > g || g - l >= o.length ? 0 : o[g - l],
                d = l > g + 1 || g + 1 - l >= o.length ? 0 : o[g + 1 - l]),
                null !== c) {
                    var y = this._weightBonePoses[u]
                      , v = this._intArray[p++];
                    this._helpMatrixA.transformPoint(f, d, this._helpPoint, !0),
                    f = this._helpPoint.x,
                    d = this._helpPoint.y;
                    for (var b = 0; v > b; ++b) {
                        var w = this._intArray[p++];
                        this._helpMatrixB.copyFromArray(y, 7 * w + 1),
                        this._helpMatrixB.invert(),
                        this._helpMatrixB.transformPoint(f, d, this._helpPoint, !0),
                        this._frameFloatArray[a + _++] = this._helpPoint.x,
                        this._frameFloatArray[a + _++] = this._helpPoint.y
                    }
                } else
                    this._frameFloatArray[a + g] = f,
                    this._frameFloatArray[a + g + 1] = d;
            if (0 === r) {
                var T = this._frameIntArray.length;
                this._frameIntArray.length += 5,
                this._frameIntArray[T + 0] = this._mesh.vertices.offset,
                this._frameIntArray[T + 1] = this._frameFloatArray.length - a,
                this._frameIntArray[T + 2] = this._frameFloatArray.length - a,
                this._frameIntArray[T + 3] = 0,
                this._frameIntArray[T + 4] = a - this._animation.frameFloatOffset,
                this._timelineArray[this._timeline.offset + 3] = T - this._animation.frameIntOffset
            }
            return s
        }
        ,
        i.prototype._parseIKConstraintFrame = function(e, r, n) {
            var a = this._parseTweenFrame(e, r, n)
              , s = this._frameIntArray.length;
            return this._frameIntArray.length += 2,
            this._frameIntArray[s++] = i._getBoolean(e, t.DataParser.BEND_POSITIVE, !0) ? 1 : 0,
            this._frameIntArray[s++] = Math.round(100 * i._getNumber(e, t.DataParser.WEIGHT, 1)),
            a
        }
        ,
        i.prototype._parseAnimationFrame = function(e, r, n) {
            var a = this._parseTweenFrame(e, r, n)
              , s = this._frameIntArray.length;
            return this._frameIntArray.length += 2,
            this._frameIntArray[s++] = i._getNumber(e, t.DataParser.VALUE, 0),
            this._frameIntArray[s++] = Math.round(100 * i._getNumber(e, t.DataParser.WEIGHT, 1)),
            a
        }
        ,
        i.prototype._parseActionData = function(e, r, n, a) {
            var s = new Array;
            if ("string" == typeof e) {
                var o = t.BaseObject.borrowObject(t.ActionData);
                o.type = r,
                o.name = e,
                o.bone = n,
                o.slot = a,
                s.push(o)
            } else if (e instanceof Array)
                for (var l = 0, h = e; l < h.length; l++) {
                    var u = h[l]
                      , o = t.BaseObject.borrowObject(t.ActionData);
                    if (t.DataParser.GOTO_AND_PLAY in u ? (o.type = 0,
                    o.name = i._getString(u, t.DataParser.GOTO_AND_PLAY, "")) : (t.DataParser.TYPE in u && "string" == typeof u[t.DataParser.TYPE] ? o.type = t.DataParser._getActionType(u[t.DataParser.TYPE]) : o.type = i._getNumber(u, t.DataParser.TYPE, r),
                    o.name = i._getString(u, t.DataParser.NAME, "")),
                    t.DataParser.BONE in u) {
                        var c = i._getString(u, t.DataParser.BONE, "");
                        o.bone = this._armature.getBone(c)
                    } else
                        o.bone = n;
                    if (t.DataParser.SLOT in u) {
                        var f = i._getString(u, t.DataParser.SLOT, "");
                        o.slot = this._armature.getSlot(f)
                    } else
                        o.slot = a;
                    var d = null;
                    if (t.DataParser.INTS in u) {
                        null === d && (d = t.BaseObject.borrowObject(t.UserData));
                        for (var p = u[t.DataParser.INTS], _ = 0, m = p; _ < m.length; _++) {
                            var g = m[_];
                            d.addInt(g)
                        }
                    }
                    if (t.DataParser.FLOATS in u) {
                        null === d && (d = t.BaseObject.borrowObject(t.UserData));
                        for (var y = u[t.DataParser.FLOATS], v = 0, b = y; v < b.length; v++) {
                            var g = b[v];
                            d.addFloat(g)
                        }
                    }
                    if (t.DataParser.STRINGS in u) {
                        null === d && (d = t.BaseObject.borrowObject(t.UserData));
                        for (var w = u[t.DataParser.STRINGS], T = 0, D = w; T < D.length; T++) {
                            var g = D[T];
                            d.addString(g)
                        }
                    }
                    o.data = d,
                    s.push(o)
                }
            return s
        }
        ,
        i.prototype._parseTransform = function(e, r, n) {
            r.x = i._getNumber(e, t.DataParser.X, 0) * n,
            r.y = i._getNumber(e, t.DataParser.Y, 0) * n,
            t.DataParser.ROTATE in e || t.DataParser.SKEW in e ? (r.rotation = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.ROTATE, 0) * t.Transform.DEG_RAD),
            r.skew = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW, 0) * t.Transform.DEG_RAD)) : (t.DataParser.SKEW_X in e || t.DataParser.SKEW_Y in e) && (r.rotation = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW_Y, 0) * t.Transform.DEG_RAD),
            r.skew = t.Transform.normalizeRadian(i._getNumber(e, t.DataParser.SKEW_X, 0) * t.Transform.DEG_RAD) - r.rotation),
            r.scaleX = i._getNumber(e, t.DataParser.SCALE_X, 1),
            r.scaleY = i._getNumber(e, t.DataParser.SCALE_Y, 1)
        }
        ,
        i.prototype._parseColorTransform = function(e, r) {
            r.alphaMultiplier = .01 * i._getNumber(e, t.DataParser.ALPHA_MULTIPLIER, 100),
            r.redMultiplier = .01 * i._getNumber(e, t.DataParser.RED_MULTIPLIER, 100),
            r.greenMultiplier = .01 * i._getNumber(e, t.DataParser.GREEN_MULTIPLIER, 100),
            r.blueMultiplier = .01 * i._getNumber(e, t.DataParser.BLUE_MULTIPLIER, 100),
            r.alphaOffset = i._getNumber(e, t.DataParser.ALPHA_OFFSET, 0),
            r.redOffset = i._getNumber(e, t.DataParser.RED_OFFSET, 0),
            r.greenOffset = i._getNumber(e, t.DataParser.GREEN_OFFSET, 0),
            r.blueOffset = i._getNumber(e, t.DataParser.BLUE_OFFSET, 0)
        }
        ,
        i.prototype._parseArray = function(t) {
            this._intArray.length = 0,
            this._floatArray.length = 0,
            this._frameIntArray.length = 0,
            this._frameFloatArray.length = 0,
            this._frameArray.length = 0,
            this._timelineArray.length = 0
        }
        ,
        i.prototype._modifyArray = function() {
            this._intArray.length % Int16Array.BYTES_PER_ELEMENT !== 0 && this._intArray.push(0),
            this._frameIntArray.length % Int16Array.BYTES_PER_ELEMENT !== 0 && this._frameIntArray.push(0),
            this._frameArray.length % Int16Array.BYTES_PER_ELEMENT !== 0 && this._frameArray.push(0),
            this._timelineArray.length % Uint16Array.BYTES_PER_ELEMENT !== 0 && this._timelineArray.push(0);
            var e = this._intArray.length * Int16Array.BYTES_PER_ELEMENT
              , r = this._floatArray.length * Float32Array.BYTES_PER_ELEMENT
              , i = this._frameIntArray.length * Int16Array.BYTES_PER_ELEMENT
              , n = this._frameFloatArray.length * Float32Array.BYTES_PER_ELEMENT
              , a = this._frameArray.length * Int16Array.BYTES_PER_ELEMENT
              , s = this._timelineArray.length * Uint16Array.BYTES_PER_ELEMENT
              , o = e + r + i + n + a + s;
            if (t.DragonBones.webAssembly) {
                for (var l = t.webAssemblyModule.HEAP16.buffer, h = t.webAssemblyModule._malloc(o), u = new Int16Array(l,h,this._intArray.length), c = new Float32Array(l,h + e,this._floatArray.length), f = new Int16Array(l,h + e + r,this._frameIntArray.length), d = new Float32Array(l,h + e + r + i,this._frameFloatArray.length), p = new Int16Array(l,h + e + r + i + n,this._frameArray.length), _ = new Uint16Array(l,h + e + r + i + n + a,this._timelineArray.length), m = 0, g = this._intArray.length; g > m; ++m)
                    u[m] = this._intArray[m];
                for (var m = 0, g = this._floatArray.length; g > m; ++m)
                    c[m] = this._floatArray[m];
                for (var m = 0, g = this._frameIntArray.length; g > m; ++m)
                    f[m] = this._frameIntArray[m];
                for (var m = 0, g = this._frameFloatArray.length; g > m; ++m)
                    d[m] = this._frameFloatArray[m];
                for (var m = 0, g = this._frameArray.length; g > m; ++m)
                    p[m] = this._frameArray[m];
                for (var m = 0, g = this._timelineArray.length; g > m; ++m)
                    _[m] = this._timelineArray[m];
                t.webAssemblyModule.setDataBinary(this._data, h, e, r, i, n, a, s)
            } else {
                for (var y = new ArrayBuffer(o), u = new Int16Array(y,0,this._intArray.length), c = new Float32Array(y,e,this._floatArray.length), f = new Int16Array(y,e + r,this._frameIntArray.length), d = new Float32Array(y,e + r + i,this._frameFloatArray.length), p = new Int16Array(y,e + r + i + n,this._frameArray.length), _ = new Uint16Array(y,e + r + i + n + a,this._timelineArray.length), m = 0, g = this._intArray.length; g > m; ++m)
                    u[m] = this._intArray[m];
                for (var m = 0, g = this._floatArray.length; g > m; ++m)
                    c[m] = this._floatArray[m];
                for (var m = 0, g = this._frameIntArray.length; g > m; ++m)
                    f[m] = this._frameIntArray[m];
                for (var m = 0, g = this._frameFloatArray.length; g > m; ++m)
                    d[m] = this._frameFloatArray[m];
                for (var m = 0, g = this._frameArray.length; g > m; ++m)
                    p[m] = this._frameArray[m];
                for (var m = 0, g = this._timelineArray.length; g > m; ++m)
                    _[m] = this._timelineArray[m];
                this._data.binary = y,
                this._data.intArray = u,
                this._data.floatArray = c,
                this._data.frameIntArray = f,
                this._data.frameFloatArray = d,
                this._data.frameArray = p,
                this._data.timelineArray = _
            }
            this._defaultColorOffset = -1
        }
        ,
        i.prototype.parseDragonBonesData = function(e, r) {
            void 0 === r && (r = 1),
            console.assert(null !== e && void 0 !== e, "Data error.");
            var n = i._getString(e, t.DataParser.VERSION, "")
              , a = i._getString(e, t.DataParser.COMPATIBLE_VERSION, "");
            if (t.DataParser.DATA_VERSIONS.indexOf(n) >= 0 || t.DataParser.DATA_VERSIONS.indexOf(a) >= 0) {
                var s = t.BaseObject.borrowObject(t.DragonBonesData);
                if (s.version = n,
                s.name = i._getString(e, t.DataParser.NAME, ""),
                s.frameRate = i._getNumber(e, t.DataParser.FRAME_RATE, 24),
                0 === s.frameRate && (s.frameRate = 24),
                t.DataParser.ARMATURE in e) {
                    this._data = s,
                    this._parseArray(e);
                    for (var o = e[t.DataParser.ARMATURE], l = 0, h = o; l < h.length; l++) {
                        var u = h[l];
                        s.addArmature(this._parseArmature(u, r))
                    }
                    this._data.binary || this._modifyArray(),
                    t.DataParser.STAGE in e ? s.stage = s.getArmature(i._getString(e, t.DataParser.STAGE, "")) : s.armatureNames.length > 0 && (s.stage = s.getArmature(s.armatureNames[0])),
                    this._data = null
                }
                return t.DataParser.TEXTURE_ATLAS in e && (this._rawTextureAtlases = e[t.DataParser.TEXTURE_ATLAS]),
                s
            }
            return console.assert(!1, "Nonsupport data version: " + n + "\nPlease convert DragonBones data to support version.\nRead more: https://github.com/DragonBones/Tools/"),
            null
        }
        ,
        i.prototype.parseTextureAtlasData = function(e, r, n) {
            if (void 0 === n && (n = 1),
            console.assert(void 0 !== e),
            null === e) {
                if (null === this._rawTextureAtlases || 0 === this._rawTextureAtlases.length)
                    return !1;
                var a = this._rawTextureAtlases[this._rawTextureAtlasIndex++];
                return this.parseTextureAtlasData(a, r, n),
                this._rawTextureAtlasIndex >= this._rawTextureAtlases.length && (this._rawTextureAtlasIndex = 0,
                this._rawTextureAtlases = null),
                !0
            }
            if (r.width = i._getNumber(e, t.DataParser.WIDTH, 0),
            r.height = i._getNumber(e, t.DataParser.HEIGHT, 0),
            r.scale = 1 === n ? 1 / i._getNumber(e, t.DataParser.SCALE, 1) : n,
            r.name = i._getString(e, t.DataParser.NAME, ""),
            r.imagePath = i._getString(e, t.DataParser.IMAGE_PATH, ""),
            t.DataParser.SUB_TEXTURE in e)
                for (var s = e[t.DataParser.SUB_TEXTURE], o = 0, l = s.length; l > o; ++o) {
                    var h = s[o]
                      , u = r.createTexture();
                    u.rotated = i._getBoolean(h, t.DataParser.ROTATED, !1),
                    u.name = i._getString(h, t.DataParser.NAME, ""),
                    u.region.x = i._getNumber(h, t.DataParser.X, 0),
                    u.region.y = i._getNumber(h, t.DataParser.Y, 0),
                    u.region.width = i._getNumber(h, t.DataParser.WIDTH, 0),
                    u.region.height = i._getNumber(h, t.DataParser.HEIGHT, 0);
                    var c = i._getNumber(h, t.DataParser.FRAME_WIDTH, -1)
                      , f = i._getNumber(h, t.DataParser.FRAME_HEIGHT, -1);
                    c > 0 && f > 0 && (u.frame = t.TextureData.createRectangle(),
                    u.frame.x = i._getNumber(h, t.DataParser.FRAME_X, 0),
                    u.frame.y = i._getNumber(h, t.DataParser.FRAME_Y, 0),
                    u.frame.width = c,
                    u.frame.height = f),
                    r.addTexture(u)
                }
            return !0
        }
        ,
        i.getInstance = function() {
            return null === i._objectDataParserInstance && (i._objectDataParserInstance = new i),
            i._objectDataParserInstance
        }
        ,
        i._objectDataParserInstance = null,
        i
    }(t.DataParser);
    t.ObjectDataParser = e;
    var r = function() {
        function t() {
            this.frameStart = 0,
            this.actions = []
        }
        return t
    }();
    t.ActionFrame = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        r.prototype._inRange = function(t, e, r) {
            return t >= e && r >= t
        }
        ,
        r.prototype._decodeUTF8 = function(t) {
            for (var e, r = -1, i = -1, n = 65533, a = 0, s = "", o = 0, l = 0, h = 0, u = 0; t.length > a; ) {
                var c = t[a++];
                if (c === r)
                    e = 0 !== l ? n : i;
                else if (0 === l)
                    this._inRange(c, 0, 127) ? e = c : (this._inRange(c, 194, 223) ? (l = 1,
                    u = 128,
                    o = c - 192) : this._inRange(c, 224, 239) ? (l = 2,
                    u = 2048,
                    o = c - 224) : this._inRange(c, 240, 244) && (l = 3,
                    u = 65536,
                    o = c - 240),
                    o *= Math.pow(64, l),
                    e = null);
                else if (this._inRange(c, 128, 191))
                    if (h += 1,
                    o += (c - 128) * Math.pow(64, l - h),
                    h !== l)
                        e = null;
                    else {
                        var f = o
                          , d = u;
                        o = 0,
                        l = 0,
                        h = 0,
                        u = 0,
                        e = this._inRange(f, d, 1114111) && !this._inRange(f, 55296, 57343) ? f : c
                    }
                else
                    o = 0,
                    l = 0,
                    h = 0,
                    u = 0,
                    a--,
                    e = c;
                null !== e && e !== i && (65535 >= e ? e > 0 && (s += String.fromCharCode(e)) : (e -= 65536,
                s += String.fromCharCode(55296 + (e >> 10 & 1023)),
                s += String.fromCharCode(56320 + (1023 & e))))
            }
            return s
        }
        ,
        r.prototype._getUTF16Key = function(t) {
            for (var e = 0, r = t.length; r > e; ++e)
                if (t.charCodeAt(e) > 255)
                    return encodeURI(t);
            return t
        }
        ,
        r.prototype._parseBinaryTimeline = function(e, r, i) {
            void 0 === i && (i = null);
            var n = null !== i ? i : t.BaseObject.borrowObject(t.TimelineData);
            n.type = e,
            n.offset = r,
            this._timeline = n;
            var a = this._timelineArrayBuffer[n.offset + 2];
            if (1 === a)
                n.frameIndicesOffset = -1;
            else {
                var s = 0
                  , o = this._animation.frameCount + 1
                  , l = this._data.frameIndices;
                t.DragonBones.webAssembly ? (s = l.size(),
                l.resize(s + o, 0)) : (s = l.length,
                l.length += o),
                n.frameIndicesOffset = s;
                for (var h = 0, u = 0, c = 0, f = 0; o > h; ++h)
                    h >= c + f && a > u && (c = this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[n.offset + 5 + u]],
                    f = u === a - 1 ? this._animation.frameCount - c : this._frameArrayBuffer[this._animation.frameOffset + this._timelineArrayBuffer[n.offset + 5 + u + 1]] - c,
                    u++),
                    t.DragonBones.webAssembly ? l.set(s + h, u - 1) : l[s + h] = u - 1
            }
            return this._timeline = null,
            n
        }
        ,
        r.prototype._parseVertices = function(e, r) {
            r.offset = e[t.DataParser.OFFSET];
            var i = this._intArrayBuffer[r.offset + 3];
            if (i >= 0) {
                var n = t.BaseObject.borrowObject(t.WeightData)
                  , a = this._intArrayBuffer[r.offset + 0]
                  , s = this._intArrayBuffer[i + 0];
                n.offset = i;
                for (var o = 0; s > o; ++o) {
                    var l = this._intArrayBuffer[i + 2 + o];
                    n.addBone(this._rawBones[l])
                }
                for (var h = i + 2 + s, u = 0, o = 0, c = a; c > o; ++o) {
                    var f = this._intArrayBuffer[h++];
                    u += f,
                    h += f
                }
                n.count = u,
                r.weight = n
            }
        }
        ,
        r.prototype._parseMesh = function(t, e) {
            this._parseVertices(t, e.vertices)
        }
        ,
        r.prototype._parsePath = function(t, e) {
            this._parseVertices(t, e.vertices)
        }
        ,
        r.prototype._parseAnimation = function(e) {
            var r = t.BaseObject.borrowObject(t.AnimationData);
            r.frameCount = Math.max(t.ObjectDataParser._getNumber(e, t.DataParser.DURATION, 1), 1),
            r.playTimes = t.ObjectDataParser._getNumber(e, t.DataParser.PLAY_TIMES, 1),
            r.duration = r.frameCount / this._armature.frameRate,
            r.fadeInTime = t.ObjectDataParser._getNumber(e, t.DataParser.FADE_IN_TIME, 0),
            r.scale = t.ObjectDataParser._getNumber(e, t.DataParser.SCALE, 1),
            r.name = t.ObjectDataParser._getString(e, t.DataParser.NAME, t.DataParser.DEFAULT_NAME),
            0 === r.name.length && (r.name = t.DataParser.DEFAULT_NAME);
            var i = e[t.DataParser.OFFSET];
            if (r.frameIntOffset = i[0],
            r.frameFloatOffset = i[1],
            r.frameOffset = i[2],
            this._animation = r,
            t.DataParser.ACTION in e && (r.actionTimeline = this._parseBinaryTimeline(0, e[t.DataParser.ACTION])),
            t.DataParser.Z_ORDER in e && (r.zOrderTimeline = this._parseBinaryTimeline(1, e[t.DataParser.Z_ORDER])),
            t.DataParser.BONE in e) {
                var n = e[t.DataParser.BONE];
                for (var a in n) {
                    var s = n[a];
                    t.DragonBones.webAssembly && (a = this._getUTF16Key(a));
                    var o = this._armature.getBone(a);
                    if (null !== o)
                        for (var l = 0, h = s.length; h > l; l += 2) {
                            var u = s[l]
                              , c = s[l + 1]
                              , f = this._parseBinaryTimeline(u, c);
                            this._animation.addBoneTimeline(o, f)
                        }
                }
            }
            if (t.DataParser.SURFACE in e) {
                var n = e[t.DataParser.SURFACE];
                for (var a in n) {
                    var s = n[a];
                    t.DragonBones.webAssembly && (a = this._getUTF16Key(a));
                    var d = this._armature.getBone(a);
                    if (null !== d)
                        for (var l = 0, h = s.length; h > l; l += 2) {
                            var u = s[l]
                              , c = s[l + 1]
                              , f = this._parseBinaryTimeline(u, c);
                            this._animation.addSurfaceTimeline(d, f)
                        }
                }
            }
            if (t.DataParser.SLOT in e) {
                var n = e[t.DataParser.SLOT];
                for (var a in n) {
                    var s = n[a];
                    t.DragonBones.webAssembly && (a = this._getUTF16Key(a));
                    var p = this._armature.getSlot(a);
                    if (null !== p)
                        for (var l = 0, h = s.length; h > l; l += 2) {
                            var u = s[l]
                              , c = s[l + 1]
                              , f = this._parseBinaryTimeline(u, c);
                            this._animation.addSlotTimeline(p, f)
                        }
                }
            }
            if (t.DataParser.CONSTRAINT in e) {
                var n = e[t.DataParser.CONSTRAINT];
                for (var a in n) {
                    var s = n[a];
                    t.DragonBones.webAssembly && (a = this._getUTF16Key(a));
                    var _ = this._armature.getConstraint(a);
                    if (null !== _)
                        for (var l = 0, h = s.length; h > l; l += 2) {
                            var u = s[l]
                              , c = s[l + 1]
                              , f = this._parseBinaryTimeline(u, c);
                            this._animation.addConstraintTimeline(_, f)
                        }
                }
            }
            if (t.DataParser.ANIMATION in e) {
                var n = e[t.DataParser.ANIMATION];
                for (var a in n) {
                    var s = n[a];
                    t.DragonBones.webAssembly && (a = this._getUTF16Key(a));
                    for (var l = 0, h = s.length; h > l; l += 2) {
                        var u = s[l]
                          , c = s[l + 1]
                          , f = this._parseBinaryTimeline(u, c);
                        this._animation.addAnimationTimeline(a, f)
                    }
                }
            }
            return this._animation = null,
            r
        }
        ,
        r.prototype._parseArray = function(e) {
            var r = e[t.DataParser.OFFSET]
              , i = r[1]
              , n = r[3]
              , a = r[5]
              , s = r[7]
              , o = r[9]
              , l = r[11]
              , h = new Int16Array(this._binary,this._binaryOffset + r[0],i / Int16Array.BYTES_PER_ELEMENT)
              , u = new Float32Array(this._binary,this._binaryOffset + r[2],n / Float32Array.BYTES_PER_ELEMENT)
              , c = new Int16Array(this._binary,this._binaryOffset + r[4],a / Int16Array.BYTES_PER_ELEMENT)
              , f = new Float32Array(this._binary,this._binaryOffset + r[6],s / Float32Array.BYTES_PER_ELEMENT)
              , d = new Int16Array(this._binary,this._binaryOffset + r[8],o / Int16Array.BYTES_PER_ELEMENT)
              , p = new Uint16Array(this._binary,this._binaryOffset + r[10],l / Uint16Array.BYTES_PER_ELEMENT);
            if (t.DragonBones.webAssembly) {
                for (var _ = i + n + a + s + o + l, m = t.webAssemblyModule._malloc(_), g = new Uint8Array(this._binary,this._binaryOffset,_ / Uint8Array.BYTES_PER_ELEMENT), y = new Uint8Array(t.webAssemblyModule.HEAP16.buffer,m,g.length), v = 0, b = g.length; b > v; ++v)
                    y[v] = g[v];
                t.webAssemblyModule.setDataBinary(this._data, m, i, n, a, s, o, l),
                this._intArrayBuffer = h,
                this._floatArrayBuffer = u,
                this._frameIntArrayBuffer = c,
                this._frameFloatArrayBuffer = f,
                this._frameArrayBuffer = d,
                this._timelineArrayBuffer = p
            } else
                this._data.binary = this._binary,
                this._data.intArray = this._intArrayBuffer = h,
                this._data.floatArray = this._floatArrayBuffer = u,
                this._data.frameIntArray = this._frameIntArrayBuffer = c,
                this._data.frameFloatArray = this._frameFloatArrayBuffer = f,
                this._data.frameArray = this._frameArrayBuffer = d,
                this._data.timelineArray = this._timelineArrayBuffer = p
        }
        ,
        r.prototype.parseDragonBonesData = function(t, r) {
            void 0 === r && (r = 1),
            console.assert(null !== t && void 0 !== t && t instanceof ArrayBuffer, "Data error.");
            var i = new Uint8Array(t,0,8);
            if (i[0] !== "D".charCodeAt(0) || i[1] !== "B".charCodeAt(0) || i[2] !== "D".charCodeAt(0) || i[3] !== "T".charCodeAt(0))
                return console.assert(!1, "Nonsupport data."),
                null;
            var n = new Uint32Array(t,8,1)[0]
              , a = new Uint8Array(t,12,n)
              , s = this._decodeUTF8(a)
              , o = JSON.parse(s);
            return this._binaryOffset = 12 + n,
            this._binary = t,
            e.prototype.parseDragonBonesData.call(this, o, r)
        }
        ,
        r.getInstance = function() {
            return null === r._binaryDataParserInstance && (r._binaryDataParserInstance = new r),
            r._binaryDataParserInstance
        }
        ,
        r._binaryDataParserInstance = null,
        r
    }(t.ObjectDataParser);
    t.BinaryDataParser = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function() {
        function e(r) {
            void 0 === r && (r = null),
            this.autoSearch = !1,
            this._dragonBonesDataMap = {},
            this._textureAtlasDataMap = {},
            this._dragonBones = null,
            this._dataParser = null,
            null === e._objectParser && (e._objectParser = new t.ObjectDataParser),
            null === e._binaryParser && (e._binaryParser = new t.BinaryDataParser),
            this._dataParser = null !== r ? r : e._objectParser
        }
        return e.prototype._isSupportMesh = function() {
            return !0
        }
        ,
        e.prototype._getTextureData = function(t, e) {
            if (t in this._textureAtlasDataMap)
                for (var r = 0, i = this._textureAtlasDataMap[t]; r < i.length; r++) {
                    var n = i[r]
                      , a = n.getTexture(e);
                    if (null !== a)
                        return a
                }
            if (this.autoSearch)
                for (var s in this._textureAtlasDataMap)
                    for (var o = 0, l = this._textureAtlasDataMap[s]; o < l.length; o++) {
                        var n = l[o];
                        if (n.autoSearch) {
                            var a = n.getTexture(e);
                            if (null !== a)
                                return a
                        }
                    }
            return null
        }
        ,
        e.prototype._fillBuildArmaturePackage = function(t, e, r, i, n) {
            var a = null
              , s = null;
            if (e.length > 0 && e in this._dragonBonesDataMap && (a = this._dragonBonesDataMap[e],
            s = a.getArmature(r)),
            null === s && (0 === e.length || this.autoSearch))
                for (var o in this._dragonBonesDataMap)
                    if (a = this._dragonBonesDataMap[o],
                    (0 === e.length || a.autoSearch) && (s = a.getArmature(r),
                    null !== s)) {
                        e = o;
                        break
                    }
            if (null !== s) {
                if (t.dataName = e,
                t.textureAtlasName = n,
                t.data = a,
                t.armature = s,
                t.skin = null,
                i.length > 0 && (t.skin = s.getSkin(i),
                null === t.skin && this.autoSearch))
                    for (var o in this._dragonBonesDataMap) {
                        var l = this._dragonBonesDataMap[o]
                          , h = l.getArmature(i);
                        if (null !== h) {
                            t.skin = h.defaultSkin;
                            break
                        }
                    }
                return null === t.skin && (t.skin = s.defaultSkin),
                !0
            }
            return !1
        }
        ,
        e.prototype._buildBones = function(e, r) {
            for (var i = 0, n = e.armature.sortedBones; i < n.length; i++) {
                var a = n[i]
                  , s = t.BaseObject.borrowObject(0 === a.type ? t.Bone : t.Surface);
                s.init(a, r)
            }
        }
        ,
        e.prototype._buildSlots = function(e, r) {
            var i = e.skin
              , n = e.armature.defaultSkin;
            if (null !== i && null !== n) {
                var a = {};
                for (var s in n.displays) {
                    var o = n.getDisplays(s);
                    a[s] = o
                }
                if (i !== n)
                    for (var s in i.displays) {
                        var o = i.getDisplays(s);
                        a[s] = o
                    }
                for (var l = 0, h = e.armature.sortedSlots; l < h.length; l++) {
                    var u = h[l]
                      , c = u.name in a ? a[u.name] : null
                      , f = this._buildSlot(e, u, r);
                    if (f.rawDisplayDatas = c,
                    null !== c) {
                        for (var d = new Array, p = 0, _ = t.DragonBones.webAssembly ? c.size() : c.length; _ > p; ++p) {
                            var m = t.DragonBones.webAssembly ? c.get(p) : c[p];
                            null !== m ? d.push(this._getSlotDisplay(e, m, null, f)) : d.push(null)
                        }
                        f._setDisplayList(d)
                    }
                    f._setDisplayIndex(u.displayIndex, !0)
                }
            }
        }
        ,
        e.prototype._buildConstraints = function(e, r) {
            var i = e.armature.constraints;
            for (var n in i) {
                var a = i[n];
                switch (a.type) {
                case 0:
                    var s = t.BaseObject.borrowObject(t.IKConstraint);
                    s.init(a, r),
                    r._addConstraint(s);
                    break;
                case 1:
                    var o = t.BaseObject.borrowObject(t.PathConstraint);
                    o.init(a, r),
                    r._addConstraint(o);
                    break;
                default:
                    var l = t.BaseObject.borrowObject(t.IKConstraint);
                    l.init(a, r),
                    r._addConstraint(l)
                }
            }
        }
        ,
        e.prototype._buildChildArmature = function(t, e, r) {
            return this.buildArmature(r.path, null !== t ? t.dataName : "", "", null !== t ? t.textureAtlasName : "")
        }
        ,
        e.prototype._getSlotDisplay = function(e, r, i, n) {
            var a = null !== e ? e.dataName : r.parent.parent.parent.name
              , s = null;
            switch (r.type) {
            case 0:
                var o = r;
                null === o.texture ? o.texture = this._getTextureData(a, r.path) : null !== e && e.textureAtlasName.length > 0 && (o.texture = this._getTextureData(e.textureAtlasName, r.path)),
                s = null !== i && 2 === i.type && this._isSupportMesh() ? n.meshDisplay : n.rawDisplay;
                break;
            case 2:
                var l = r;
                null === l.texture ? l.texture = this._getTextureData(a, l.path) : null !== e && e.textureAtlasName.length > 0 && (l.texture = this._getTextureData(e.textureAtlasName, l.path)),
                s = this._isSupportMesh() ? n.meshDisplay : n.rawDisplay;
                break;
            case 1:
                var h = r
                  , u = this._buildChildArmature(e, n, r);
                if (null !== u) {
                    if (u.inheritAnimation = h.inheritAnimation,
                    !u.inheritAnimation) {
                        var c = h.actions.length > 0 ? h.actions : u.armatureData.defaultActions;
                        if (c.length > 0)
                            for (var f = 0, d = c; f < d.length; f++) {
                                var p = d[f]
                                  , _ = t.BaseObject.borrowObject(t.EventObject);
                                t.EventObject.actionDataToInstance(p, _, n.armature),
                                _.slot = n,
                                n.armature._bufferAction(_, !1)
                            }
                        else
                            u.animation.play()
                    }
                    h.armature = u.armatureData
                }
                s = u;
                break;
            case 3:
            }
            return s
        }
        ,
        e.prototype.parseDragonBonesData = function(t, r, i) {
            void 0 === r && (r = null),
            void 0 === i && (i = 1);
            for (var n = t instanceof ArrayBuffer ? e._binaryParser : this._dataParser, a = n.parseDragonBonesData(t, i); ; ) {
                var s = this._buildTextureAtlasData(null, null);
                if (!n.parseTextureAtlasData(null, s, i)) {
                    s.returnToPool();
                    break
                }
                this.addTextureAtlasData(s, r)
            }
            return null !== a && this.addDragonBonesData(a, r),
            a
        }
        ,
        e.prototype.parseTextureAtlasData = function(t, e, r, i) {
            void 0 === r && (r = null),
            void 0 === i && (i = 1);
            var n = this._buildTextureAtlasData(null, null);
            return this._dataParser.parseTextureAtlasData(t, n, i),
            this._buildTextureAtlasData(n, e || null),
            this.addTextureAtlasData(n, r),
            n
        }
        ,
        e.prototype.updateTextureAtlasData = function(t, e) {
            var r = this.getTextureAtlasData(t);
            if (null !== r)
                for (var i = 0, n = r.length; n > i; ++i)
                    i < e.length && this._buildTextureAtlasData(r[i], e[i])
        }
        ,
        e.prototype.getDragonBonesData = function(t) {
            return t in this._dragonBonesDataMap ? this._dragonBonesDataMap[t] : null
        }
        ,
        e.prototype.addDragonBonesData = function(t, e) {
            if (void 0 === e && (e = null),
            e = null !== e ? e : t.name,
            e in this._dragonBonesDataMap) {
                if (this._dragonBonesDataMap[e] === t)
                    return;
                return void console.warn("Can not add same name data: " + e)
            }
            this._dragonBonesDataMap[e] = t
        }
        ,
        e.prototype.removeDragonBonesData = function(t, e) {
            void 0 === e && (e = !0),
            t in this._dragonBonesDataMap && (e && this._dragonBones.bufferObject(this._dragonBonesDataMap[t]),
            delete this._dragonBonesDataMap[t])
        }
        ,
        e.prototype.getTextureAtlasData = function(t) {
            return t in this._textureAtlasDataMap ? this._textureAtlasDataMap[t] : null
        }
        ,
        e.prototype.addTextureAtlasData = function(t, e) {
            void 0 === e && (e = null),
            e = null !== e ? e : t.name;
            var r = e in this._textureAtlasDataMap ? this._textureAtlasDataMap[e] : this._textureAtlasDataMap[e] = [];
            r.indexOf(t) < 0 && r.push(t)
        }
        ,
        e.prototype.removeTextureAtlasData = function(t, e) {
            if (void 0 === e && (e = !0),
            t in this._textureAtlasDataMap) {
                var r = this._textureAtlasDataMap[t];
                if (e)
                    for (var i = 0, n = r; i < n.length; i++) {
                        var a = n[i];
                        this._dragonBones.bufferObject(a)
                    }
                delete this._textureAtlasDataMap[t]
            }
        }
        ,
        e.prototype.getArmatureData = function(t, e) {
            void 0 === e && (e = "");
            var i = new r;
            return this._fillBuildArmaturePackage(i, e, t, "", "") ? i.armature : null
        }
        ,
        e.prototype.clear = function(t) {
            void 0 === t && (t = !0);
            for (var e in this._dragonBonesDataMap)
                t && this._dragonBones.bufferObject(this._dragonBonesDataMap[e]),
                delete this._dragonBonesDataMap[e];
            for (var e in this._textureAtlasDataMap) {
                if (t)
                    for (var r = this._textureAtlasDataMap[e], i = 0, n = r; i < n.length; i++) {
                        var a = n[i];
                        this._dragonBones.bufferObject(a)
                    }
                delete this._textureAtlasDataMap[e]
            }
        }
        ,
        e.prototype.buildArmature = function(t, e, i, n) {
            void 0 === e && (e = ""),
            void 0 === i && (i = ""),
            void 0 === n && (n = "");
            var a = new r;
            if (!this._fillBuildArmaturePackage(a, e || "", t, i || "", n || ""))
                return console.warn("No armature data: " + t + ", " + (null !== e ? e : "")),
                null;
            var s = this._buildArmature(a);
            return this._buildBones(a, s),
            this._buildSlots(a, s),
            this._buildConstraints(a, s),
            s.invalidUpdate(null, !0),
            s.advanceTime(0),
            s
        }
        ,
        e.prototype.replaceDisplay = function(e, r, i) {
            void 0 === i && (i = -1),
            0 > i && (i = e.displayIndex),
            0 > i && (i = 0),
            e.replaceDisplayData(r, i);
            var n = e.displayList;
            if (n.length <= i) {
                n.length = i + 1;
                for (var a = 0, s = n.length; s > a; ++a)
                    n[a] || (n[a] = null)
            }
            if (null !== r) {
                var o = e.rawDisplayDatas
                  , l = null;
                o && (t.DragonBones.webAssembly ? i < o.size() && (l = o.get(i)) : i < o.length && (l = o[i])),
                n[i] = this._getSlotDisplay(null, r, l, e)
            } else
                n[i] = null;
            e.displayList = n
        }
        ,
        e.prototype.replaceSlotDisplay = function(t, e, r, i, n, a) {
            void 0 === a && (a = -1);
            var s = this.getArmatureData(e, t || "");
            if (!s || !s.defaultSkin)
                return !1;
            var o = s.defaultSkin.getDisplay(r, i);
            return o ? (this.replaceDisplay(n, o, a),
            !0) : !1
        }
        ,
        e.prototype.replaceSlotDisplayList = function(e, r, i, n) {
            var a = this.getArmatureData(r, e || "");
            if (!a || !a.defaultSkin)
                return !1;
            var s = a.defaultSkin.getDisplays(i);
            if (!s)
                return !1;
            for (var o = 0, l = 0, h = t.DragonBones.webAssembly ? s.size() : s.length; h > l; ++l) {
                var u = t.DragonBones.webAssembly ? s.get(l) : s[l];
                this.replaceDisplay(n, u, o++)
            }
            return !0
        }
        ,
        e.prototype.replaceSkin = function(e, r, i, n) {
            void 0 === i && (i = !1),
            void 0 === n && (n = null);
            for (var a = !1, s = r.parent.defaultSkin, o = 0, l = e.getSlots(); o < l.length; o++) {
                var h = l[o];
                if (!(null !== n && n.indexOf(h.name) >= 0)) {
                    var u = r.getDisplays(h.name);
                    if (u || (null !== s && r !== s && (u = s.getDisplays(h.name)),
                    u)) {
                        var c = t.DragonBones.webAssembly ? u.size() : u.length
                          , f = h.displayList;
                        f.length = c;
                        for (var d = 0, p = c; p > d; ++d) {
                            var _ = t.DragonBones.webAssembly ? u.get(d) : u[d];
                            null !== _ ? f[d] = this._getSlotDisplay(null, _, null, h) : f[d] = null
                        }
                        a = !0,
                        h.rawDisplayDatas = u,
                        h.displayList = f
                    } else
                        i && (h.rawDisplayDatas = null,
                        h.displayList = [])
                }
            }
            return a
        }
        ,
        e.prototype.replaceAnimation = function(e, r, i) {
            void 0 === i && (i = !0);
            var n = r.defaultSkin;
            if (null === n)
                return !1;
            if (i)
                e.animation.animations = r.animations;
            else {
                var a = e.animation.animations
                  , s = {};
                for (var o in a)
                    s[o] = a[o];
                for (var o in r.animations)
                    s[o] = r.animations[o];
                e.animation.animations = s
            }
            for (var l = 0, h = e.getSlots(); l < h.length; l++)
                for (var u = h[l], c = 0, f = 0, d = u.displayList; f < d.length; f++) {
                    var p = d[f];
                    if (p instanceof t.Armature) {
                        var _ = n.getDisplays(u.name);
                        if (null !== _ && c < (t.DragonBones.webAssembly ? _.size() : _.length)) {
                            var m = t.DragonBones.webAssembly ? _.get(c) : _[c];
                            if (null !== m && 1 === m.type) {
                                var g = this.getArmatureData(m.path, m.parent.parent.parent.name);
                                g && this.replaceAnimation(p, g, i)
                            }
                        }
                    }
                    c++
                }
            return !0
        }
        ,
        e.prototype.getAllDragonBonesData = function() {
            return this._dragonBonesDataMap
        }
        ,
        e.prototype.getAllTextureAtlasData = function() {
            return this._textureAtlasDataMap
        }
        ,
        Object.defineProperty(e.prototype, "clock", {
            get: function() {
                return this._dragonBones.clock
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "dragonBones", {
            get: function() {
                return this._dragonBones
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.changeSkin = function(t, e, r) {
            return void 0 === r && (r = null),
            this.replaceSkin(t, e, !1, r)
        }
        ,
        e.prototype.copyAnimationsToArmature = function(t, e, r, i, n) {
            void 0 === r && (r = ""),
            void 0 === i && (i = ""),
            void 0 === n && (n = !0);
            var a = this.getArmatureData(e, i);
            return a ? this.replaceAnimation(t, a, n) : !1
        }
        ,
        e._objectParser = null,
        e._binaryParser = null,
        e
    }();
    t.BaseFactory = e;
    var r = function() {
        function t() {
            this.dataName = "",
            this.textureAtlasName = "",
            this.skin = null
        }
        return t
    }();
    t.BuildArmaturePackage = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function i() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._renderTexture = null,
            t
        }
        return __extends(i, e),
        i.toString = function() {
            return "[class dragonBones.EgretTextureAtlasData]"
        }
        ,
        i.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this.disposeEnabled && null !== this._renderTexture && this._renderTexture.dispose(),
            this.disposeEnabled = !1,
            this._renderTexture = null
        }
        ,
        i.prototype.createTexture = function() {
            return t.BaseObject.borrowObject(r)
        }
        ,
        Object.defineProperty(i.prototype, "renderTexture", {
            get: function() {
                return this._renderTexture
            },
            set: function(t) {
                if (this._renderTexture !== t)
                    if (this._renderTexture = t,
                    null !== this._renderTexture) {
                        var e = this._renderTexture.bitmapData
                          , r = this.width > 0 ? this.width : e.width
                          , i = this.height > 0 ? this.height : e.height;
                        for (var n in this.textures) {
                            var a = egret.$TextureScaleFactor
                              , s = this.textures[n]
                              , o = s.region.width
                              , l = s.region.height;
                            null === s.renderTexture && (s.renderTexture = new egret.Texture),
                            s.renderTexture.bitmapData = e,
                            s.rotated ? s.renderTexture.$initData(s.region.x * a, s.region.y * a, l * a, o * a, 0, 0, l * a, o * a, r, i, s.rotated) : s.renderTexture.$initData(s.region.x * a, s.region.y * a, o * a, l * a, 0, 0, o * a, l * a, r, i)
                        }
                    } else
                        for (var n in this.textures) {
                            var s = this.textures[n];
                            s.renderTexture = null
                        }
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.dispose = function() {
            console.warn("已废弃。"),
            this.returnToPool()
        }
        ,
        Object.defineProperty(i.prototype, "texture", {
            get: function() {
                return console.warn("已废弃。"),
                this.renderTexture
            },
            enumerable: !0,
            configurable: !0
        }),
        i
    }(t.TextureAtlasData);
    t.EgretTextureAtlasData = e;
    var r = function(t) {
        function e() {
            var e = null !== t && t.apply(this, arguments) || this;
            return e.renderTexture = null,
            e
        }
        return __extends(e, t),
        e.toString = function() {
            return "[class dragonBones.EgretTextureData]"
        }
        ,
        e.prototype._onClear = function() {
            t.prototype._onClear.call(this),
            null !== this.renderTexture,
            this.renderTexture = null
        }
        ,
        e
    }(t.TextureData);
    t.EgretTextureData = r
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            return null !== e && e.apply(this, arguments) || this
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "eventObject", {
            get: function() {
                return this.data
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationName", {
            get: function() {
                var t = this.eventObject.animationState;
                return null !== t ? t.name : ""
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "armature", {
            get: function() {
                return this.eventObject.armature
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "bone", {
            get: function() {
                return this.eventObject.bone
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "slot", {
            get: function() {
                return this.eventObject.slot
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationState", {
            get: function() {
                return this.eventObject.animationState
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "frameLabel", {
            get: function() {
                return this.eventObject.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "sound", {
            get: function() {
                return this.eventObject.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "movementID", {
            get: function() {
                return this.animationName
            },
            enumerable: !0,
            configurable: !0
        }),
        r.START = t.EventObject.START,
        r.LOOP_COMPLETE = t.EventObject.LOOP_COMPLETE,
        r.COMPLETE = t.EventObject.COMPLETE,
        r.FADE_IN = t.EventObject.FADE_IN,
        r.FADE_IN_COMPLETE = t.EventObject.FADE_IN_COMPLETE,
        r.FADE_OUT = t.EventObject.FADE_OUT,
        r.FADE_OUT_COMPLETE = t.EventObject.FADE_OUT_COMPLETE,
        r.FRAME_EVENT = t.EventObject.FRAME_EVENT,
        r.SOUND_EVENT = t.EventObject.SOUND_EVENT,
        r.ANIMATION_FRAME_EVENT = t.EventObject.FRAME_EVENT,
        r.BONE_FRAME_EVENT = t.EventObject.FRAME_EVENT,
        r.MOVEMENT_FRAME_EVENT = t.EventObject.FRAME_EVENT,
        r.SOUND = t.EventObject.SOUND_EVENT,
        r
    }(egret.Event);
    t.EgretEvent = e;
    var r = function(r) {
        function i() {
            var t = null !== r && r.apply(this, arguments) || this;
            return t.debugDraw = !1,
            t._batchEnabled = !(global.nativeRender || global.bricks),
            t._childDirty = !0,
            t._debugDraw = !1,
            t._armature = null,
            t._bounds = null,
            t._debugDrawer = null,
            t
        }
        return __extends(i, r),
        i._cleanBeforeRender = function() {}
        ,
        i.prototype.dbInit = function(t) {
            this._armature = t,
            this._batchEnabled && (this.$renderNode = new egret.sys.GroupNode,
            this.$renderNode.cleanBeforeRender = i._cleanBeforeRender)
        }
        ,
        i.prototype.dbClear = function() {
            this._armature = null,
            this._bounds = null,
            this._debugDrawer = null
        }
        ,
        i.prototype.dbUpdate = function() {
            var e = t.DragonBones.debugDraw || this.debugDraw;
            if (e || this._debugDraw)
                if (this._debugDraw = e,
                this._debugDraw) {
                    null === this._debugDrawer && (this._debugDrawer = new egret.Sprite),
                    this._debugDrawer.parent !== this && this.addChild(this._debugDrawer);
                    var r = 2
                      , i = this._debugDrawer.graphics;
                    i.clear();
                    for (var n = 0, a = this._armature.getBones(); n < a.length; n++) {
                        var s = a[n];
                        if (0 === s.boneData.type) {
                            var o = Math.max(s.boneData.length, r)
                              , l = s.globalTransformMatrix.tx
                              , h = s.globalTransformMatrix.ty
                              , u = l - s.globalTransformMatrix.a * r
                              , c = h - s.globalTransformMatrix.b * r
                              , f = l + s.globalTransformMatrix.a * o
                              , d = h + s.globalTransformMatrix.b * o
                              , p = l + c - h
                              , _ = h + u - l
                              , m = l - c + h
                              , g = h - u + l;
                            i.lineStyle(2, 65535, .7),
                            i.moveTo(u, c),
                            i.lineTo(f, d),
                            i.moveTo(p, _),
                            i.lineTo(m, g)
                        } else {
                            var y = s
                              , v = y._boneData
                              , b = v.segmentX
                              , w = v.segmentY
                              , T = y._vertices;
                            i.lineStyle(2, 16776960, .7);
                            for (var D = 0; w > D; ++D)
                                for (var S = 0; b > S; ++S) {
                                    var E = 2 * (S + D * (b + 1))
                                      , A = T[E]
                                      , x = T[E + 1];
                                    i.moveTo(A, x),
                                    i.lineTo(T[E + 2], T[E + 3]),
                                    i.moveTo(A, x),
                                    i.lineTo(T[E + 2 * (b + 1)], T[E + 2 * (b + 1) + 1]),
                                    S === b - 1 && (i.moveTo(T[E + 2], T[E + 3]),
                                    i.lineTo(T[E + 2 * (b + 2)], T[E + 2 * (b + 2) + 1])),
                                    D === w - 1 && (i.moveTo(T[E + 2 * (b + 1)], T[E + 2 * (b + 1) + 1]),
                                    i.lineTo(T[E + 2 * (b + 2)], T[E + 2 * (b + 2) + 1]))
                                }
                        }
                    }
                    for (var P = 0, C = this._armature.getSlots(); P < C.length; P++) {
                        var O = C[P]
                          , k = O.boundingBoxData;
                        if (null !== k) {
                            var I = this._debugDrawer.getChildByName(O.name);
                            switch (null === I && (I = new egret.Shape,
                            I.name = O.name,
                            this._debugDrawer.addChild(I)),
                            I.graphics.clear(),
                            I.graphics.lineStyle(2, 16711935, .7),
                            k.type) {
                            case 0:
                                I.graphics.drawRect(.5 * -k.width, .5 * -k.height, k.width, k.height);
                                break;
                            case 1:
                                I.graphics.drawEllipse(.5 * -k.width, .5 * -k.height, k.width, k.height);
                                break;
                            case 2:
                                for (var T = k.vertices, R = 0; R < T.length; R += 2) {
                                    var A = T[R]
                                      , x = T[R + 1];
                                    0 === R ? I.graphics.moveTo(A, x) : I.graphics.lineTo(A, x)
                                }
                                I.graphics.lineTo(T[0], T[1])
                            }
                            O.updateTransformAndMatrix(),
                            O.updateGlobalTransform(),
                            I.$setMatrix(O.globalTransformMatrix, !1)
                        } else {
                            var I = this._debugDrawer.getChildByName(O.name);
                            null !== I && this._debugDrawer.removeChild(I)
                        }
                    }
                } else
                    null !== this._debugDrawer && this._debugDrawer.parent === this && this.removeChild(this._debugDrawer);
            !t.isV5 && this._batchEnabled && this._childDirty && this.$invalidateContentBounds()
        }
        ,
        i.prototype.dispose = function(t) {
            void 0 === t && (t = !0),
            null !== this._armature && (this._armature.dispose(),
            this._armature = null)
        }
        ,
        i.prototype.dispatchDBEvent = function(t, i) {
            var n = egret.Event.create(e, t);
            n.data = i,
            r.prototype.dispatchEvent.call(this, n),
            egret.Event.release(n)
        }
        ,
        i.prototype.hasDBEventListener = function(t) {
            return this.hasEventListener(t)
        }
        ,
        i.prototype.addDBEventListener = function(t, e, r) {
            this.addEventListener(t, e, r)
        }
        ,
        i.prototype.removeDBEventListener = function(t, e, r) {
            this.removeEventListener(t, e, r)
        }
        ,
        i.prototype.disableBatch = function() {
            if (this._batchEnabled && this._armature) {
                for (var t = 0, e = this._armature.getSlots(); t < e.length; t++) {
                    var r = e[t]
                      , i = r._deformVertices && r._deformVertices.verticesData ? r.meshDisplay : r.rawDisplay;
                    r.display || i !== r.meshDisplay || (i = r.rawDisplay);
                    var n = i.$renderNode;
                    n.matrix && i.$setMatrix(r.globalTransformMatrix, !1),
                    this.addChild(i)
                }
                this._batchEnabled = !1,
                this.$renderNode.cleanBeforeRender = null,
                this.$renderNode = null,
                this.armature.invalidUpdate(null, !0)
            }
        }
        ,
        Object.defineProperty(i.prototype, "armature", {
            get: function() {
                return this._armature
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "animation", {
            get: function() {
                return this._armature.animation
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.$measureContentBounds = function(e) {
            if (this._batchEnabled && this._armature) {
                if (this._childDirty) {
                    this._childDirty = !1;
                    for (var i = !0, n = new egret.Rectangle, a = 0, s = this._armature.getSlots(); a < s.length; a++) {
                        var o = s[a]
                          , l = o.display;
                        if (l && l.$renderNode && l.$renderNode.image) {
                            var h = l.$renderNode.matrix;
                            if (l === o.meshDisplay) {
                                var u = l.$renderNode.vertices;
                                if (!(u && u.length > 0))
                                    continue;
                                n.setTo(999999, 999999, -999999, -999999);
                                for (var c = 0, f = u.length; f > c; c += 2) {
                                    var d = u[c]
                                      , p = u[c + 1];
                                    n.x > d && (n.x = d),
                                    n.width < d && (n.width = d),
                                    n.y > p && (n.y = p),
                                    n.height < p && (n.height = p)
                                }
                                n.width -= n.x,
                                n.height -= n.y
                            } else {
                                var _ = o.displayData;
                                if (!(_ && _ instanceof t.ImageDisplayData && _.texture))
                                    continue;
                                var m = _.texture.parent.scale;
                                n.x = 0,
                                n.y = 0,
                                n.width = _.texture.region.width * m,
                                n.height = _.texture.region.height * m
                            }
                            h.$transformBounds(n);
                            var g = n.x
                              , y = n.y
                              , v = n.x + n.width
                              , b = n.y + n.height;
                            i ? (i = !1,
                            e.x = g,
                            e.y = y,
                            e.width = v,
                            e.height = b) : (g < e.x && (e.x = g),
                            y < e.y && (e.y = y),
                            v > e.width && (e.width = v),
                            b > e.height && (e.height = b))
                        }
                    }
                    e.width -= e.x,
                    e.height -= e.y,
                    t.isV5 && (null === this._bounds && (this._bounds = new egret.Rectangle),
                    this._bounds.copyFrom(e))
                } else
                    t.isV5 && (null === this._bounds && (this._bounds = new egret.Rectangle),
                    e.copyFrom(this._bounds));
                return e
            }
            return r.prototype.$measureContentBounds.call(this, e)
        }
        ,
        i.prototype.hasEvent = function(t) {
            return this.hasDBEventListener(t)
        }
        ,
        i.prototype.addEvent = function(t, e, r) {
            this.addDBEventListener(t, e, r)
        }
        ,
        i.prototype.removeEvent = function(t, e, r) {
            this.removeDBEventListener(t, e, r)
        }
        ,
        i.prototype.advanceTimeBySelf = function(e) {
            e ? this._armature.clock = t.EgretFactory.factory.clock : this._armature.clock = null
        }
        ,
        i
    }(egret.DisplayObjectContainer);
    t.EgretArmatureDisplay = r;
    var i = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(e);
    t.Event = i;
    var n = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(e);
    t.ArmatureEvent = n;
    var a = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(e);
    t.AnimationEvent = a;
    var s = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(e);
    t.FrameEvent = s;
    var o = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(e);
    t.SoundEvent = o;
    var l = function(e) {
        function r(r, i, n) {
            void 0 === n && (n = 1);
            var a = e.call(this) || this;
            return console.warn("已废弃"),
            a._onClear(),
            t.ObjectDataParser.getInstance().parseTextureAtlasData(i, a, n),
            a.renderTexture = r,
            a
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.EgretTextureAtlas]"
        }
        ,
        r
    }(t.EgretTextureAtlasData);
    t.EgretTextureAtlas = l;
    var h = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e
    }(l);
    t.EgretSheetAtlas = h;
    var u = function() {
        function e() {}
        return e.getInstance = function() {
            return console.warn("已废弃"),
            t.EgretFactory.factory.soundEventManager
        }
        ,
        e
    }();
    t.SoundEventManager = u;
    var c = function() {
        function t() {
            console.warn("已废弃")
        }
        return t
    }();
    t.AnimationCacheManager = c
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    var e = function(e) {
        function r() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.transformUpdateEnabled = !1,
            t._armatureDisplay = null,
            t._renderDisplay = null,
            t._colorFilter = null,
            t
        }
        return __extends(r, e),
        r.toString = function() {
            return "[class dragonBones.EgretSlot]"
        }
        ,
        r.prototype.init = function(r, i, n, a) {
            e.prototype.init.call(this, r, i, n, a),
            t.isV5 ? this._updateTransform = this._updateTransformV5 : this._updateTransform = this._updateTransformV4
        }
        ,
        r.prototype._onClear = function() {
            e.prototype._onClear.call(this),
            this._armatureDisplay = null,
            this._renderDisplay = null,
            this._colorFilter = null
        }
        ,
        r.prototype._initDisplay = function(t, e) {}
        ,
        r.prototype._disposeDisplay = function(t, e) {}
        ,
        r.prototype._onUpdateDisplay = function() {
            if (this._armatureDisplay = this._armature.display,
            this._renderDisplay = null !== this._display ? this._display : this._rawDisplay,
            t.isV5 && this._armatureDisplay._batchEnabled && (this._renderDisplay !== this._rawDisplay || this._renderDisplay.$renderNode instanceof egret.sys.BitmapNode || (this._renderDisplay.$renderNode = new egret.sys.BitmapNode)),
            this._armatureDisplay._batchEnabled)
                if (this._renderDisplay !== this._rawDisplay && this._renderDisplay !== this._meshDisplay)
                    this._armatureDisplay.disableBatch();
                else {
                    var e = this._renderDisplay.$renderNode;
                    e.matrix || (e.matrix = new egret.Matrix)
                }
        }
        ,
        r.prototype._addDisplay = function() {
            this._armatureDisplay._batchEnabled ? this._armatureDisplay.$renderNode.addNode(this._renderDisplay.$renderNode) : this._armatureDisplay.addChild(this._renderDisplay)
        }
        ,
        r.prototype._replaceDisplay = function(t) {
            var e = t;
            if (this._armatureDisplay._batchEnabled) {
                var r = this._armatureDisplay.$renderNode.drawData;
                r[r.indexOf(e.$renderNode)] = this._renderDisplay.$renderNode
            } else
                this._armatureDisplay.addChild(this._renderDisplay),
                this._armatureDisplay.swapChildren(this._renderDisplay, e),
                this._armatureDisplay.removeChild(e)
        }
        ,
        r.prototype._removeDisplay = function() {
            if (this._armatureDisplay._batchEnabled) {
                var t = this._armatureDisplay.$renderNode.drawData;
                t.splice(t.indexOf(this._renderDisplay.$renderNode), 1)
            } else
                this._renderDisplay.parent.removeChild(this._renderDisplay)
        }
        ,
        r.prototype._updateZOrder = function() {
            if (this._armatureDisplay._batchEnabled) {
                var t = this._armatureDisplay.$renderNode.drawData;
                t[this._zOrder] = this._renderDisplay.$renderNode
            } else {
                var e = this._armatureDisplay.getChildIndex(this._renderDisplay);
                if (e === this._zOrder)
                    return;
                this._armatureDisplay.addChildAt(this._renderDisplay, this._zOrder)
            }
        }
        ,
        r.prototype._updateVisible = function() {
            var t = this._parent.visible && this._visible;
            if (this._armatureDisplay._batchEnabled) {
                var e = this._renderDisplay.$renderNode;
                e.alpha = t ? 1 : 0
            } else
                this._renderDisplay.visible = t
        }
        ,
        r.prototype._updateBlendMode = function() {
            switch (this._blendMode) {
            case 0:
                this._renderDisplay.blendMode = egret.BlendMode.NORMAL;
                break;
            case 1:
                this._renderDisplay.blendMode = egret.BlendMode.ADD;
                break;
            case 5:
                this._renderDisplay.blendMode = egret.BlendMode.ERASE
            }
            if (this._armatureDisplay._batchEnabled) {
                var t = this._renderDisplay.$renderNode;
                t.blendMode = egret.sys.blendModeToNumber(this._renderDisplay.blendMode)
            }
        }
        ,
        r.prototype._updateColor = function() {
            if (1 !== this._colorTransform.redMultiplier || 1 !== this._colorTransform.greenMultiplier || 1 !== this._colorTransform.blueMultiplier || 0 !== this._colorTransform.redOffset || 0 !== this._colorTransform.greenOffset || 0 !== this._colorTransform.blueOffset || 0 !== this._colorTransform.alphaOffset) {
                null === this._colorFilter && (this._colorFilter = new egret.ColorMatrixFilter);
                var t = this._colorFilter.matrix;
                if (t[0] = this._colorTransform.redMultiplier,
                t[6] = this._colorTransform.greenMultiplier,
                t[12] = this._colorTransform.blueMultiplier,
                t[18] = this._colorTransform.alphaMultiplier,
                t[4] = this._colorTransform.redOffset,
                t[9] = this._colorTransform.greenOffset,
                t[14] = this._colorTransform.blueOffset,
                t[19] = this._colorTransform.alphaOffset,
                this._colorFilter.matrix = t,
                this._armatureDisplay._batchEnabled) {
                    var e = this._renderDisplay.$renderNode;
                    e.filter = this._colorFilter,
                    e.alpha = 1
                }
                var r = this._renderDisplay.filters;
                r || (r = []),
                r.indexOf(this._colorFilter) < 0 && r.push(this._colorFilter),
                this._renderDisplay.filters = r,
                this._renderDisplay.alpha = 1
            } else {
                if (this._armatureDisplay._batchEnabled) {
                    var e = this._renderDisplay.$renderNode;
                    e.filter = null,
                    e.alpha = this._colorTransform.alphaMultiplier
                }
                this._renderDisplay.filters = null,
                this._renderDisplay.alpha = this._colorTransform.alphaMultiplier
            }
        }
        ,
        r.prototype._updateFrame = function() {
            var e = null !== this._deformVertices && this._display === this._meshDisplay ? this._deformVertices.verticesData : null
              , r = this._textureData;
            if (this._displayIndex >= 0 && null !== this._display && null !== r) {
                if (null !== this._armature.replacedTexture && null !== this._rawDisplayDatas && this._rawDisplayDatas.indexOf(this._displayData) >= 0) {
                    var i = r.parent;
                    null === this._armature._replaceTextureAtlasData ? (i = t.BaseObject.borrowObject(t.EgretTextureAtlasData),
                    i.copyFrom(r.parent),
                    i.renderTexture = this._armature.replacedTexture,
                    this._armature._replaceTextureAtlasData = i) : i = this._armature._replaceTextureAtlasData,
                    r = i.getTexture(r.name)
                }
                if (null !== r.renderTexture) {
                    if (null !== e) {
                        var n = e.data
                          , a = n.intArray
                          , s = n.floatArray
                          , o = a[e.offset + 0]
                          , l = a[e.offset + 1]
                          , h = a[e.offset + 2];
                        0 > h && (h += 65536);
                        var u = h + 2 * o
                          , c = this._armature._armatureData.scale
                          , f = this._renderDisplay
                          , d = f.$renderNode;
                        d.uvs.length = 2 * o,
                        d.vertices.length = 2 * o,
                        d.indices.length = 3 * l;
                        for (var p = 0, _ = 2 * o; _ > p; ++p)
                            d.vertices[p] = s[h + p] * c,
                            d.uvs[p] = s[u + p];
                        for (var p = 0; 3 * l > p; ++p)
                            d.indices[p] = a[e.offset + 4 + p];
                        if (this._armatureDisplay._batchEnabled) {
                            var m = r.renderTexture
                              , g = this._renderDisplay.$renderNode;
                            if (egret.sys.RenderNode.prototype.cleanBeforeRender.call(g),
                            g.image = m.bitmapData,
                            t.isV5)
                                g.drawMesh(m.$bitmapX, m.$bitmapY, m.$bitmapWidth, m.$bitmapHeight, m.$offsetX, m.$offsetY, m.textureWidth, m.textureHeight),
                                g.imageWidth = m.$sourceWidth,
                                g.imageHeight = m.$sourceHeight;
                            else {
                                var y = m;
                                g.drawMesh(y._bitmapX, y._bitmapY, y._bitmapWidth, y._bitmapHeight, y._offsetX, y._offsetY, y.textureWidth, y.textureHeight),
                                g.imageWidth = y._sourceWidth,
                                g.imageHeight = y._sourceHeight
                            }
                            this._blendModeDirty = !0,
                            this._colorDirty = !0
                        }
                        f.texture = r.renderTexture,
                        f.anchorOffsetX = this._pivotX,
                        f.anchorOffsetY = this._pivotY,
                        f.$updateVertices(),
                        t.isV5 || f.$invalidateTransform();
                        var v = null !== e.weight
                          , b = 0 !== this._parent._boneData.type;
                        (v || b) && this._identityTransform()
                    } else {
                        var c = r.parent.scale * this._armature._armatureData.scale
                          , w = (r.rotated ? r.region.height : r.region.width) * c
                          , T = (r.rotated ? r.region.width : r.region.height) * c
                          , D = this._renderDisplay
                          , m = r.renderTexture;
                        if (D.texture = m,
                        this._armatureDisplay._batchEnabled) {
                            var g = this._renderDisplay.$renderNode;
                            if (egret.sys.RenderNode.prototype.cleanBeforeRender.call(g),
                            g.image = m.bitmapData,
                            t.isV5)
                                g.drawImage(m.$bitmapX, m.$bitmapY, m.$bitmapWidth, m.$bitmapHeight, m.$offsetX, m.$offsetY, w, T),
                                g.imageWidth = m.$sourceWidth,
                                g.imageHeight = m.$sourceHeight;
                            else {
                                var y = m;
                                g.drawImage(y._bitmapX, y._bitmapY, y._bitmapWidth, y._bitmapHeight, y._offsetX, y._offsetY, w, T),
                                g.imageWidth = y._sourceWidth,
                                g.imageHeight = y._sourceHeight
                            }
                            this._blendModeDirty = !0,
                            this._colorDirty = !0
                        } else
                            D.width = w,
                            D.height = T;
                        D.anchorOffsetX = this._pivotX,
                        D.anchorOffsetY = this._pivotY
                    }
                    return void (this._visibleDirty = !0)
                }
            }
            this._armatureDisplay._batchEnabled && (this._renderDisplay.$renderNode.image = null);
            var S = this._renderDisplay;
            S.texture = null,
            S.x = 0,
            S.y = 0,
            S.visible = !1
        }
        ,
        r.prototype._updateMesh = function() {
            var e = this._armature._armatureData.scale
              , r = this._deformVertices.vertices
              , i = this._deformVertices.bones
              , n = this._deformVertices.verticesData
              , a = n.weight
              , s = r.length > 0 && n.inheritDeform
              , o = this._renderDisplay
              , l = o.$renderNode;
            if (null !== a) {
                var h = n.data
                  , u = h.intArray
                  , c = h.floatArray
                  , f = u[n.offset + 0]
                  , d = u[a.offset + 1];
                0 > d && (d += 65536);
                for (var p = 0, _ = 0, m = a.offset + 2 + i.length, g = d, y = 0; f > p; ++p) {
                    for (var v = u[m++], b = 0, w = 0, T = 0; v > T; ++T) {
                        var D = u[m++]
                          , S = i[D];
                        if (null !== S) {
                            var E = S.globalTransformMatrix
                              , A = c[g++]
                              , x = c[g++] * e
                              , P = c[g++] * e;
                            s && (x += r[y++],
                            P += r[y++]),
                            b += (E.a * x + E.c * P + E.tx) * A,
                            w += (E.b * x + E.d * P + E.ty) * A
                        }
                    }
                    l.vertices[_++] = b,
                    l.vertices[_++] = w
                }
                o.$updateVertices(),
                t.isV5 || o.$invalidateTransform()
            } else if (s) {
                var C = 0 !== this._parent._boneData.type
                  , h = n.data
                  , u = h.intArray
                  , c = h.floatArray
                  , f = u[n.offset + 0]
                  , O = u[n.offset + 2];
                0 > O && (O += 65536);
                for (var p = 0, k = 2 * f; k > p; p += 2) {
                    var I = c[O + p] * e + r[p]
                      , R = c[O + p + 1] * e + r[p + 1];
                    if (C) {
                        var E = this._parent._getGlobalTransformMatrix(I, R);
                        l.vertices[p] = E.a * I + E.c * R + E.tx,
                        l.vertices[p + 1] = E.b * I + E.d * R + E.ty
                    } else
                        l.vertices[p] = I,
                        l.vertices[p + 1] = R
                }
                o.$updateVertices(),
                t.isV5 || o.$invalidateTransform()
            }
            this._armatureDisplay._batchEnabled && (this._armatureDisplay._childDirty = !0)
        }
        ,
        r.prototype._updateGlueMesh = function() {}
        ,
        r.prototype._updateTransform = function() {
            throw new Error
        }
        ,
        r.prototype._identityTransform = function() {
            if (this._armatureDisplay._batchEnabled) {
                this._armatureDisplay._childDirty = !0;
                var t = this._renderDisplay.$renderNode.matrix;
                t.a = 1,
                t.b = 0,
                t.c = 0,
                t.d = 1,
                t.tx = 0,
                t.ty = 0
            } else
                egret.$TempMatrix.identity(),
                this._renderDisplay.$setMatrix(egret.$TempMatrix, this.transformUpdateEnabled)
        }
        ,
        r.prototype._updateTransformV4 = function() {
            var t = this.globalTransformMatrix;
            if (this._armatureDisplay._batchEnabled) {
                this._armatureDisplay._childDirty = !0;
                var e = this._renderDisplay.$renderNode.matrix;
                e.a = t.a,
                e.b = t.b,
                e.c = t.c,
                e.d = t.d,
                e.tx = this.globalTransformMatrix.tx - (this.globalTransformMatrix.a * this._pivotX + this.globalTransformMatrix.c * this._pivotY),
                e.ty = this.globalTransformMatrix.ty - (this.globalTransformMatrix.b * this._pivotX + this.globalTransformMatrix.d * this._pivotY)
            } else if (this.transformUpdateEnabled)
                this._renderDisplay.$setMatrix(t, !0);
            else {
                var r = this._renderDisplay.$DisplayObject
                  , e = r[6];
                e.a = this.globalTransformMatrix.a,
                e.b = this.globalTransformMatrix.b,
                e.c = this.globalTransformMatrix.c,
                e.d = this.globalTransformMatrix.d,
                e.tx = this.globalTransformMatrix.tx,
                e.ty = this.globalTransformMatrix.ty,
                this._renderDisplay.$removeFlags(8),
                this._renderDisplay.$invalidatePosition()
            }
        }
        ,
        r.prototype._updateTransformV5 = function() {
            var t = this.globalTransformMatrix;
            if (this._armatureDisplay._batchEnabled) {
                this._armatureDisplay._childDirty = !0;
                var e = this._renderDisplay.$renderNode.matrix;
                e.a = t.a,
                e.b = t.b,
                e.c = t.c,
                e.d = t.d,
                e.tx = this.globalTransformMatrix.tx - (this.globalTransformMatrix.a * this._pivotX + this.globalTransformMatrix.c * this._pivotY),
                e.ty = this.globalTransformMatrix.ty - (this.globalTransformMatrix.b * this._pivotX + this.globalTransformMatrix.d * this._pivotY)
            } else
                this._renderDisplay.$setMatrix(t, this.transformUpdateEnabled)
        }
        ,
        r
    }(t.Slot);
    t.EgretSlot = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    t.isV5 = Number(egret.Capabilities.engineVersion.substr(0, 3)) >= 5.1;
    var e = function(e) {
        function r(i) {
            void 0 === i && (i = null);
            var n = e.call(this, i) || this;
            if (null === r._dragonBonesInstance) {
                var a = new t.EgretArmatureDisplay;
                r._dragonBonesInstance = new t.DragonBones(a),
                r._time = .001 * egret.getTimer(),
                egret.startTick(r._clockHandler, r)
            }
            return n._dragonBones = r._dragonBonesInstance,
            n
        }
        return __extends(r, e),
        r._clockHandler = function(t) {
            t *= .001;
            var e = t - this._time;
            return r._dragonBonesInstance.advanceTime(e),
            this._time = t,
            !1
        }
        ,
        Object.defineProperty(r, "factory", {
            get: function() {
                return null === r._factory && (r._factory = new r),
                r._factory
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype._isSupportMesh = function() {
            return "webgl" === egret.Capabilities.renderMode || egret.Capabilities.runtimeType === egret.RuntimeType.NATIVE ? !0 : (console.warn("Canvas can not support mesh, please change renderMode to webgl."),
            !1)
        }
        ,
        r.prototype._buildTextureAtlasData = function(e, r) {
            if (null !== e)
                if (r instanceof egret.Texture)
                    e.renderTexture = r;
                else {
                    var i = new egret.Texture;
                    i.bitmapData = new egret.BitmapData(r),
                    e.disposeEnabled = !0,
                    e.renderTexture = i
                }
            else
                e = t.BaseObject.borrowObject(t.EgretTextureAtlasData);
            return e
        }
        ,
        r.prototype._buildArmature = function(e) {
            var r = t.BaseObject.borrowObject(t.Armature)
              , i = new t.EgretArmatureDisplay;
            return r.init(e.armature, i, i, this._dragonBones),
            r
        }
        ,
        r.prototype._buildSlot = function(e, r, i) {
            var n = t.BaseObject.borrowObject(t.EgretSlot);
            return n.init(r, i, new egret.Bitmap, new egret.Mesh),
            n
        }
        ,
        r.prototype.buildArmatureDisplay = function(t, e, r, i) {
            void 0 === e && (e = ""),
            void 0 === r && (r = ""),
            void 0 === i && (i = "");
            var n = this.buildArmature(t, e || "", r || "", i || "");
            return null !== n ? (this._dragonBones.clock.add(n),
            n.display) : null
        }
        ,
        r.prototype.getTextureDisplay = function(t, e) {
            void 0 === e && (e = null);
            var r = this._getTextureData(null !== e ? e : "", t);
            if (null !== r && null !== r.renderTexture) {
                var i = r.renderTexture
                  , n = new egret.Bitmap(i);
                return n.width = i.textureWidth * r.parent.scale,
                n.height = i.textureHeight * r.parent.scale,
                n
            }
            return null
        }
        ,
        Object.defineProperty(r.prototype, "soundEventManager", {
            get: function() {
                return this._dragonBones.eventManager
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "clock", {
            get: function() {
                return r.factory.clock
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.addSkeletonData = function(t, e) {
            void 0 === e && (e = null),
            console.warn("已废弃"),
            this.addDragonBonesData(t, e)
        }
        ,
        r.prototype.getSkeletonData = function(t) {
            return console.warn("已废弃"),
            this.getDragonBonesData(t)
        }
        ,
        r.prototype.removeSkeletonData = function(t) {
            console.warn("已废弃"),
            this.removeDragonBonesData(t)
        }
        ,
        r.prototype.addTextureAtlas = function(t, e) {
            void 0 === e && (e = null),
            console.warn("已废弃"),
            this.addTextureAtlasData(t, e)
        }
        ,
        r.prototype.getTextureAtlas = function(t) {
            return console.warn("已废弃"),
            this.getTextureAtlasData(t)
        }
        ,
        r.prototype.removeTextureAtlas = function(t) {
            console.warn("已废弃"),
            this.removeTextureAtlasData(t)
        }
        ,
        r.prototype.buildFastArmature = function(t, e, r) {
            return void 0 === e && (e = ""),
            void 0 === r && (r = ""),
            console.warn("已废弃"),
            this.buildArmature(t, e || "", r || "")
        }
        ,
        r.prototype.dispose = function() {
            console.warn("已废弃"),
            this.clear()
        }
        ,
        r._time = 0,
        r._dragonBonesInstance = null,
        r._factory = null,
        r
    }(t.BaseFactory);
    t.EgretFactory = e
}(dragonBones || (dragonBones = {}));
var dragonBones;
!function(t) {
    function e(t, e) {
        for (var r = 0, i = t.length; i > r; ++r) {
            var n = t[r];
            if (n.name === e)
                return n
        }
        return null
    }
    function r(t) {
        if (t.groupName) {
            var r = c[t.groupName];
            if (r) {
                var i = e(r.movie || r.animation, t.movieName);
                if (i)
                    return t.groupConfig = r,
                    t.movieConfig = i,
                    !0
            }
        }
        if (!t.groupName)
            for (var n in c) {
                var r = c[n];
                if (!t.groupName) {
                    var i = e(r.movie || r.animation, t.movieName);
                    if (i)
                        return t.groupName = n,
                        t.groupConfig = r,
                        t.movieConfig = i,
                        !0
                }
            }
        return !1
    }
    function i(t) {
        return t in c
    }
    function n(t, e, r) {
        if (void 0 === r && (r = null),
        !t)
            throw new Error;
        var i = new egret.ByteArray(t);
        i.endian = egret.Endian.LITTLE_ENDIAN,
        i.position = 8;
        var n = JSON.parse(i.readUTF());
        n.offset = i.position,
        n.arrayBuffer = t,
        n.textures = [];
        var a = n.offset % 4;
        a && (n.offset += 4 - a);
        for (var s = 0, o = n.position.length; o > s; s += 3)
            switch (s / 3) {
            case 1:
                n.displayFrameArray = new Int16Array(n.arrayBuffer,n.offset + n.position[s],n.position[s + 1] / n.position[s + 2]);
                break;
            case 2:
                n.rectangleArray = new Float32Array(n.arrayBuffer,n.offset + n.position[s],n.position[s + 1] / n.position[s + 2]);
                break;
            case 3:
                n.transformArray = new Float32Array(n.arrayBuffer,n.offset + n.position[s],n.position[s + 1] / n.position[s + 2]);
                break;
            case 4:
                n.colorArray = new Int16Array(n.arrayBuffer,n.offset + n.position[s],n.position[s + 1] / n.position[s + 2])
            }
        if (r = r || n.name,
        c[r] && console.warn("Replace group: " + r),
        c[r] = n,
        e instanceof Array)
            for (var s = 0, o = e.length; o > s; ++s) {
                var l = e[s];
                n.textures.push(l)
            }
        else
            n.textures.push(e)
    }
    function a(t) {
        var e = c[t];
        e && delete c[t]
    }
    function s() {
        for (var t in c)
            delete c[t]
    }
    function o(e, i) {
        void 0 === i && (i = null);
        var n = {
            movieName: e,
            groupName: i
        };
        if (r(n)) {
            var a = new p(n);
            return a.clock = t.EgretFactory.factory.clock,
            a
        }
        return console.warn("No movie named: " + e),
        null
    }
    function l(t) {
        var e = c[t];
        if (e) {
            for (var r = [], i = e.movie || e.animation, n = 0, a = i.length; a > n; ++n)
                r.push(i[n].name);
            return r
        }
        return console.warn("No group named: " + t),
        null
    }
    var h = new egret.Rectangle
      , u = new egret.Matrix
      , c = {};
    t.hasMovieGroup = i,
    t.addMovieGroup = n,
    t.removeMovieGroup = a,
    t.removeAllMovieGroup = s,
    t.buildMovie = o,
    t.getMovieNames = l;
    var f = function(t) {
        function e(e) {
            var r = t.call(this, e) || this;
            return r.name = "",
            r.slotName = "",
            r.clipName = "",
            r
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "armature", {
            get: function() {
                return this.movie
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "bone", {
            get: function() {
                return null
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "animationState", {
            get: function() {
                return {
                    name: this.clipName
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "frameLabel", {
            get: function() {
                return this.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "movementID", {
            get: function() {
                return this.clipName
            },
            enumerable: !0,
            configurable: !0
        }),
        e.START = "start",
        e.LOOP_COMPLETE = "loopComplete",
        e.COMPLETE = "complete",
        e.FRAME_EVENT = "frameEvent",
        e.SOUND_EVENT = "soundEvent",
        e
    }(egret.Event);
    t.MovieEvent = f;
    var d = function(t) {
        function e(e) {
            var r = t.call(this) || this;
            return r.displayIndex = -1,
            r.colorIndex = -1,
            r.transformIndex = -1,
            r.rawDisplay = new egret.Bitmap,
            r.childMovies = {},
            r.displayConfig = null,
            r.childMovie = null,
            r.colorFilter = null,
            r.display = r.rawDisplay,
            r.config = e,
            r.rawDisplay.name = r.config.name,
            r.config.blendMode || (r.config.blendMode = 0),
            r
        }
        return __extends(e, t),
        e.prototype.dispose = function() {
            this.rawDisplay = null,
            this.childMovies = null,
            this.config = null,
            this.displayConfig = null,
            this.display = null,
            this.childMovie = null,
            this.colorFilter = null
        }
        ,
        e
    }(egret.HashObject)
      , p = function(e) {
        function r(t) {
            var i = e.call(this) || this;
            i.timeScale = 1,
            i.clipTimeScale = 1,
            i._batchEnabled = !0,
            i._isLockDispose = !1,
            i._isDelayDispose = !1,
            i._isStarted = !1,
            i._isPlaying = !1,
            i._isReversing = !1,
            i._isCompleted = !1,
            i._playTimes = 0,
            i._time = 0,
            i._currentTime = 0,
            i._currentPlayTimes = 0,
            i._cacheFrameIndex = 0,
            i._frameSize = 0,
            i._cacheRectangle = null,
            i._clock = null,
            i._currentFrameConfig = null,
            i._clipNames = [],
            i._slots = [],
            i._childMovies = [],
            i._groupConfig = t.groupConfig,
            i._config = t.movieConfig,
            i._batchEnabled = !(i._config.isNested || i._config.hasChildAnimation),
            i._batchEnabled && (i.$renderNode = new egret.sys.GroupNode,
            i.$renderNode.cleanBeforeRender = r._cleanBeforeRender),
            i._clipNames.length = 0;
            for (var n = 0, a = i._config.clip.length; a > n; ++n)
                i._clipNames.push(i._config.clip[n].name);
            for (var n = 0, a = i._config.slot.length; a > n; ++n) {
                var s = new d(i._config.slot[n]);
                i._updateSlotBlendMode(s),
                i._slots.push(s),
                i._batchEnabled ? i.$renderNode.addNode(s.rawDisplay.$renderNode) : i.addChild(s.rawDisplay)
            }
            return i._frameSize = 2 * i._slots.length,
            i.name = i._config.name,
            i.play(),
            i.advanceTime(1e-6),
            i.stop(),
            i
        }
        return __extends(r, e),
        r._cleanBeforeRender = function() {}
        ,
        r.prototype._configToEvent = function(t, e) {
            e.movie = this,
            e.clipName = this._clipConfig.name,
            e.name = t.name,
            e.slotName = t.slot || ""
        }
        ,
        r.prototype._onCrossFrame = function(e) {
            for (var r = 0, i = e.actionAndEvent.length; i > r; ++r) {
                var n = e.actionAndEvent[r];
                if (n)
                    switch (n.type) {
                    case 11:
                        if (t.EgretFactory.factory.soundEventManager.hasEventListener(f.SOUND_EVENT)) {
                            var a = egret.Event.create(f, f.SOUND_EVENT);
                            this._configToEvent(n, a),
                            t.EgretFactory.factory.soundEventManager.dispatchEvent(a),
                            egret.Event.release(a)
                        }
                        break;
                    case 10:
                        if (this.hasEventListener(f.FRAME_EVENT)) {
                            var s = egret.Event.create(f, f.FRAME_EVENT);
                            this._configToEvent(n, s),
                            this.dispatchEvent(s),
                            egret.Event.release(s)
                        }
                        break;
                    case 0:
                        if (n.slot) {
                            var o = this._getSlot(n.slot);
                            o && o.childMovie && o.childMovie.play(n.name)
                        } else
                            this.play(n.name)
                    }
            }
        }
        ,
        r.prototype._updateSlotBlendMode = function(t) {
            var e = "";
            switch (t.config.blendMode) {
            case 0:
                e = egret.BlendMode.NORMAL;
                break;
            case 1:
                e = egret.BlendMode.ADD;
                break;
            case 5:
                e = egret.BlendMode.ERASE
            }
            e && (this._batchEnabled ? t.display.$renderNode.blendMode = egret.sys.blendModeToNumber(e) : t.display.blendMode = e)
        }
        ,
        r.prototype._updateSlotColor = function(t, e, r, i, n, a, s, o, l) {
            if (1 !== r || 1 !== i || 1 !== n || 0 !== s || 0 !== o || 0 !== l || 0 !== a) {
                t.colorFilter || (t.colorFilter = new egret.ColorMatrixFilter);
                var h = t.colorFilter.matrix;
                if (h[0] = r,
                h[6] = i,
                h[12] = n,
                h[18] = e,
                h[4] = s,
                h[9] = o,
                h[14] = l,
                h[19] = a,
                t.colorFilter.matrix = h,
                this._batchEnabled)
                    t.display.$renderNode.filter = t.colorFilter,
                    t.display.$renderNode.alpha = 1;
                else {
                    var u = t.display.filters;
                    u || (u = []),
                    u.indexOf(t.colorFilter) < 0 && u.push(t.colorFilter),
                    t.display.filters = u,
                    t.display.$setAlpha(1)
                }
            } else
                t.colorFilter && (t.colorFilter = null),
                this._batchEnabled ? (t.display.$renderNode.filter = null,
                t.display.$renderNode.alpha = e) : (t.display.filters = null,
                t.display.$setAlpha(e))
        }
        ,
        r.prototype._updateSlotDisplay = function(e) {
            var r = e.display || e.rawDisplay
              , i = e.childMovie;
            if (e.displayIndex >= 0)
                if (e.displayConfig = this._groupConfig.display[e.displayIndex],
                1 === e.displayConfig.type) {
                    var n = e.displayConfig.name in e.childMovies ? e.childMovies[e.displayConfig.name] : null;
                    n || (n = o(e.displayConfig.name, this._groupConfig.name),
                    n && (e.childMovies[e.displayConfig.name] = n)),
                    n ? (e.display = n,
                    e.childMovie = n) : (e.display = e.rawDisplay,
                    e.childMovie = null)
                } else
                    e.display = e.rawDisplay,
                    e.childMovie = null;
            else
                e.displayConfig = null,
                e.display = e.rawDisplay,
                e.childMovie = null;
            if (e.display !== r && (r && (this.addChild(e.display),
            this.swapChildren(e.display, r),
            this.removeChild(r)),
            this._updateSlotBlendMode(e)),
            e.display === e.rawDisplay)
                if (e.displayConfig && null !== e.displayConfig.regionIndex && void 0 !== e.displayConfig.regionIndex) {
                    if (!e.displayConfig.texture) {
                        var a = this._groupConfig.textures[e.displayConfig.textureIndex || 0]
                          , s = 4 * e.displayConfig.regionIndex
                          , l = this._groupConfig.rectangleArray[s]
                          , h = this._groupConfig.rectangleArray[s + 1]
                          , u = this._groupConfig.rectangleArray[s + 2]
                          , c = this._groupConfig.rectangleArray[s + 3];
                        e.displayConfig.texture = new egret.Texture,
                        e.displayConfig.texture.bitmapData = a.bitmapData,
                        e.displayConfig.texture.$initData(l, h, Math.min(u, a.textureWidth - l), Math.min(c, a.textureHeight - h), 0, 0, Math.min(u, a.textureWidth - l), Math.min(c, a.textureHeight - h), a.textureWidth, a.textureHeight)
                    }
                    if (this._batchEnabled) {
                        var f = e.displayConfig.texture
                          , d = e.rawDisplay.$renderNode;
                        if (egret.sys.RenderNode.prototype.cleanBeforeRender.call(e.rawDisplay.$renderNode),
                        d.image = f.bitmapData,
                        t.isV5)
                            d.drawImage(f.$bitmapX, f.$bitmapY, f.$bitmapWidth, f.$bitmapHeight, f.$offsetX, f.$offsetY, f.textureWidth, f.textureHeight),
                            d.imageWidth = f._sourceWidth,
                            d.imageHeight = f._sourceHeight;
                        else {
                            var p = f;
                            d.drawImage(p._bitmapX, p._bitmapY, p._bitmapWidth, p._bitmapHeight, p._offsetX, p._offsetY, f.textureWidth, f.textureHeight),
                            d.imageWidth = p._sourceWidth,
                            d.imageHeight = p._sourceHeight
                        }
                    } else
                        e.rawDisplay.visible = !0,
                        e.rawDisplay.$setBitmapData(e.displayConfig.texture)
                } else
                    this._batchEnabled ? e.rawDisplay.$renderNode.image = null : (e.rawDisplay.visible = !1,
                    e.rawDisplay.$setBitmapData(null));
            e.childMovie !== i && (i && (i.stop(),
            this._childMovies.slice(this._childMovies.indexOf(i), 1)),
            e.childMovie && (this._childMovies.indexOf(e.childMovie) < 0 && this._childMovies.push(e.childMovie),
            e.config.action ? e.childMovie.play(e.config.action) : e.childMovie.play(e.childMovie._config.action)))
        }
        ,
        r.prototype._getSlot = function(t) {
            for (var e = 0, r = this._slots.length; r > e; ++e) {
                var i = this._slots[e];
                if (i.config.name === t)
                    return i
            }
            return null
        }
        ,
        r.prototype.$render = function() {
            this._batchEnabled || e.prototype.$render.call(this)
        }
        ,
        r.prototype.$updateRenderNode = function() {
            this._batchEnabled || e.prototype.$updateRenderNode.call(this)
        }
        ,
        r.prototype.$measureContentBounds = function(t) {
            this._batchEnabled && this._cacheRectangle ? t.setTo(this._cacheRectangle.x, this._cacheRectangle.y, this._cacheRectangle.width - this._cacheRectangle.x, this._cacheRectangle.height - this._cacheRectangle.y) : e.prototype.$measureContentBounds.call(this, t)
        }
        ,
        r.prototype.$doAddChild = function(t, r, i) {
            return this._batchEnabled ? (console.warn("Can not add child."),
            null) : e.prototype.$doAddChild.call(this, t, r, i)
        }
        ,
        r.prototype.$doRemoveChild = function(t, r) {
            return this._batchEnabled ? (console.warn("Can not remove child."),
            null) : e.prototype.$doRemoveChild.call(this, t, r)
        }
        ,
        r.prototype.dispose = function() {
            if (this._isLockDispose)
                this._isDelayDispose = !0;
            else {
                if (this._clock && this._clock.remove(this),
                this._slots)
                    for (var t = 0, e = this._slots.length; e > t; ++t)
                        this._slots[t].dispose();
                this._isPlaying = !1,
                this._cacheRectangle = null,
                this._clock = null,
                this._groupConfig = null,
                this._config = null,
                this._clipConfig = null,
                this._currentFrameConfig = null,
                this._clipArray = null,
                this._clipNames = null,
                this._slots = null,
                this._childMovies = null
            }
        }
        ,
        r.prototype.advanceTime = function(e) {
            if (this._isPlaying) {
                this._isLockDispose = !0,
                0 > e && (e = -e),
                e *= this.timeScale,
                this._time += e * this.clipTimeScale;
                var r = this._clipConfig.duration
                  , i = r * this._playTimes
                  , n = this._time
                  , a = this._currentPlayTimes;
                if (this._playTimes > 0 && (n >= i || -i >= n) ? (this._isCompleted = !0,
                a = this._playTimes,
                n = 0 > n ? 0 : r) : (this._isCompleted = !1,
                0 > n ? (a = Math.floor(-n / r),
                n = r - -n % r) : (a = Math.floor(n / r),
                n %= r),
                this._playTimes > 0 && a > this._playTimes && (a = this._playTimes)),
                this._currentTime === n)
                    return;
                var s = Math.floor(n * this._clipConfig.cacheTimeToFrameScale);
                if (this._cacheFrameIndex !== s) {
                    this._cacheFrameIndex = s;
                    var o = this._groupConfig.displayFrameArray
                      , l = this._groupConfig.transformArray
                      , c = this._groupConfig.colorArray
                      , d = !0
                      , p = !1
                      , _ = !1
                      , m = this._cacheRectangle;
                    this._cacheRectangle = this._clipConfig.cacheRectangles[this._cacheFrameIndex],
                    this._batchEnabled && !this._cacheRectangle && (_ = !0,
                    this._cacheRectangle = new egret.Rectangle,
                    this._clipConfig.cacheRectangles[this._cacheFrameIndex] = this._cacheRectangle);
                    for (var g = 0, y = this._slots.length; y > g; ++g) {
                        var v = this._slots[g]
                          , b = this._frameSize * this._cacheFrameIndex + 2 * g;
                        b >= this._clipArray.length && (b = this._frameSize * (this._cacheFrameIndex - 1) + 2 * g);
                        var w = 2 * this._clipArray[b];
                        if (w >= 0) {
                            var T = o[w]
                              , D = 8 * o[w + 1]
                              , S = 6 * this._clipArray[b + 1]
                              , E = !1;
                            if (v.displayIndex !== T && (v.displayIndex = T,
                            E = !0,
                            this._updateSlotDisplay(v)),
                            (v.colorIndex !== D || E) && (v.colorIndex = D,
                            v.colorIndex >= 0 ? this._updateSlotColor(v, .01 * c[D], .01 * c[D + 1], .01 * c[D + 2], .01 * c[D + 3], c[D + 4], c[D + 5], c[D + 6], c[D + 7]) : this._updateSlotColor(v, 1, 1, 1, 1, 0, 0, 0, 0)),
                            p = !0,
                            v.transformIndex !== S)
                                if (v.transformIndex = S,
                                this._batchEnabled) {
                                    var A = v.display.$renderNode.matrix;
                                    A || (A = v.display.$renderNode.matrix = new egret.Matrix),
                                    A.a = l[S],
                                    A.b = l[S + 1],
                                    A.c = l[S + 2],
                                    A.d = l[S + 3],
                                    A.tx = l[S + 4],
                                    A.ty = l[S + 5]
                                } else
                                    u.a = l[S],
                                    u.b = l[S + 1],
                                    u.c = l[S + 2],
                                    u.d = l[S + 3],
                                    u.tx = l[S + 4],
                                    u.ty = l[S + 5],
                                    v.display.$setMatrix(u);
                            if (this._batchEnabled && _ && v.displayConfig) {
                                var A = v.display.$renderNode.matrix;
                                h.x = 0,
                                h.y = 0,
                                h.width = v.displayConfig.texture.textureWidth,
                                h.height = v.displayConfig.texture.textureHeight,
                                A.$transformBounds(h),
                                d ? (d = !1,
                                this._cacheRectangle.x = h.x,
                                this._cacheRectangle.width = h.x + h.width,
                                this._cacheRectangle.y = h.y,
                                this._cacheRectangle.height = h.y + h.height) : (this._cacheRectangle.x = Math.min(this._cacheRectangle.x, h.x),
                                this._cacheRectangle.width = Math.max(this._cacheRectangle.width, h.x + h.width),
                                this._cacheRectangle.y = Math.min(this._cacheRectangle.y, h.y),
                                this._cacheRectangle.height = Math.max(this._cacheRectangle.height, h.y + h.height))
                            }
                        } else
                            -1 !== v.displayIndex && (v.displayIndex = -1,
                            this._updateSlotDisplay(v))
                    }
                    this._cacheRectangle && (p && _ && d && m && (this._cacheRectangle.x = m.x,
                    this._cacheRectangle.y = m.y,
                    this._cacheRectangle.width = m.width,
                    this._cacheRectangle.height = m.height),
                    t.isV5 || this.$invalidateContentBounds())
                }
                if (this._isCompleted && (this._isPlaying = !1),
                !this._isStarted && (this._isStarted = !0,
                this.hasEventListener(f.START))) {
                    var x = egret.Event.create(f, f.START);
                    x.movie = this,
                    x.clipName = this._clipConfig.name,
                    x.name = "",
                    x.slotName = "",
                    this.dispatchEvent(x)
                }
                this._isReversing = this._currentTime > n && this._currentPlayTimes === a,
                this._currentTime = n;
                var P = this._clipConfig.frame ? this._clipConfig.frame.length : 0;
                if (P > 0) {
                    var C = Math.floor(this._currentTime * this._config.frameRate)
                      , O = this._groupConfig.frame[this._clipConfig.frame[C]];
                    if (this._currentFrameConfig !== O)
                        if (P > 1) {
                            var k = this._currentFrameConfig;
                            if (this._currentFrameConfig = O,
                            !k) {
                                var I = Math.floor(this._currentTime * this._config.frameRate);
                                k = this._groupConfig.frame[this._clipConfig.frame[I]],
                                this._isReversing || (this._currentTime <= k.position || this._currentPlayTimes !== a) && (k = this._groupConfig.frame[k.prev])
                            }
                            if (this._isReversing)
                                for (; k !== O; )
                                    this._onCrossFrame(k),
                                    k = this._groupConfig.frame[k.prev];
                            else
                                for (; k !== O; )
                                    k = this._groupConfig.frame[k.next],
                                    this._onCrossFrame(k)
                        } else
                            this._currentFrameConfig = O,
                            this._currentFrameConfig && this._onCrossFrame(this._currentFrameConfig)
                }
                if (this._currentPlayTimes !== a) {
                    if (this._currentPlayTimes = a,
                    this.hasEventListener(f.LOOP_COMPLETE)) {
                        var R = egret.Event.create(f, f.LOOP_COMPLETE);
                        R.movie = this,
                        R.clipName = this._clipConfig.name,
                        R.name = "",
                        R.slotName = "",
                        this.dispatchEvent(R),
                        egret.Event.release(R)
                    }
                    if (this._isCompleted && this.hasEventListener(f.COMPLETE)) {
                        var B = egret.Event.create(f, f.COMPLETE);
                        B.movie = this,
                        B.clipName = this._clipConfig.name,
                        B.name = "",
                        B.slotName = "",
                        this.dispatchEvent(B),
                        egret.Event.release(B)
                    }
                }
            }
            this._isLockDispose = !1,
            this._isDelayDispose && this.dispose()
        }
        ,
        r.prototype.play = function(t, e) {
            if (void 0 === t && (t = null),
            void 0 === e && (e = -1),
            t) {
                for (var r = null, i = 0, n = this._config.clip.length; n > i; ++i) {
                    var a = this._config.clip[i];
                    a.name === t && (r = a)
                }
                r ? (this._clipConfig = r,
                this._clipArray = new Int16Array(this._groupConfig.arrayBuffer,this._groupConfig.offset + this._groupConfig.position[0] + this._clipConfig.p,this._clipConfig.s / this._groupConfig.position[2]),
                this._clipConfig.cacheRectangles || (this._clipConfig.cacheRectangles = []),
                this._isPlaying = !0,
                this._isStarted = !1,
                this._isCompleted = !1,
                0 > e || e !== e ? this._playTimes = this._clipConfig.playTimes : this._playTimes = e,
                this._time = 0,
                this._currentTime = 0,
                this._currentPlayTimes = 0,
                this._cacheFrameIndex = -1,
                this._currentFrameConfig = null,
                this._cacheRectangle = null,
                this.clipTimeScale = 1 / this._clipConfig.scale) : console.warn("No clip in movie.", this._config.name, t)
            } else
                this._clipConfig ? this._isPlaying || this._isCompleted ? this.play(this._clipConfig.name, this._playTimes) : this._isPlaying = !0 : this._config.action && this.play(this._config.action, e)
        }
        ,
        r.prototype.stop = function() {
            this._isPlaying = !1
        }
        ,
        r.prototype.gotoAndPlay = function(t, e, r) {
            void 0 === t && (t = null),
            void 0 === r && (r = -1),
            e %= this._clipConfig.duration,
            0 > e && (e += this._clipConfig.duration),
            this.play(t, r),
            this._time = e,
            this._currentTime = e
        }
        ,
        r.prototype.gotoAndStop = function(t, e) {
            void 0 === t && (t = null),
            e %= this._clipConfig.duration,
            0 > e && (e += this._clipConfig.duration),
            this.play(t, 1),
            this._time = e,
            this._currentTime = e,
            this.advanceTime(.001),
            this.stop()
        }
        ,
        r.prototype.hasClip = function(t) {
            for (var e = 0, r = this._config.clip.length; r > e; ++e) {
                var i = this._config.clip[e];
                if (i.name === t)
                    return !0
            }
            return !1
        }
        ,
        Object.defineProperty(r.prototype, "isPlaying", {
            get: function() {
                return this._isPlaying && !this._isCompleted
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "isComplete", {
            get: function() {
                return this._isCompleted
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "currentTime", {
            get: function() {
                return this._currentTime
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "totalTime", {
            get: function() {
                return this._clipConfig ? this._clipConfig.duration : 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "currentPlayTimes", {
            get: function() {
                return this._currentPlayTimes
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "playTimes", {
            get: function() {
                return this._playTimes
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "groupName", {
            get: function() {
                return this._groupConfig.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "clipName", {
            get: function() {
                return this._clipConfig ? this._clipConfig.name : ""
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "clipNames", {
            get: function() {
                return this._clipNames
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "clock", {
            get: function() {
                return this._clock
            },
            set: function(t) {
                if (this._clock !== t) {
                    var e = this._clock;
                    e && e.remove(this),
                    this._clock = t,
                    this._clock && this._clock.add(this)
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.advanceTimeBySelf = function(e) {
            e ? this.clock = t.EgretFactory.clock : this.clock = null
        }
        ,
        Object.defineProperty(r.prototype, "display", {
            get: function() {
                return this
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animation", {
            get: function() {
                return this
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "armature", {
            get: function() {
                return this
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.getAnimation = function() {
            return this
        }
        ,
        r.prototype.getArmature = function() {
            return this
        }
        ,
        r.prototype.getDisplay = function() {
            return this
        }
        ,
        r.prototype.hasAnimation = function(t) {
            return this.hasClip(t)
        }
        ,
        r.prototype.invalidUpdate = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e]
        }
        ,
        Object.defineProperty(r.prototype, "lastAnimationName", {
            get: function() {
                return this.clipName
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationNames", {
            get: function() {
                return this.clipNames
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "animationList", {
            get: function() {
                return this.clipNames
            },
            enumerable: !0,
            configurable: !0
        }),
        r
    }(egret.DisplayObjectContainer);
    t.Movie = p
}(dragonBones || (dragonBones = {}));
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, egret;
!function(t) {}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(i, n) {
            void 0 === i && (i = ""),
            void 0 === n && (n = 0);
            var a = e.call(this) || this;
            return a._writeMessage = "",
            a._readMessage = "",
            a._connected = !1,
            a._connecting = !1,
            a._isReadySend = !1,
            a._bytesWrite = !1,
            a._type = r.TYPE_STRING,
            a._connected = !1,
            a._writeMessage = "",
            a._readMessage = "",
            a.socket = new t.ISocket,
            a.socket.addCallBacks(a.onConnect, a.onClose, a.onSocketData, a.onError, a),
            a
        }
        return __extends(r, e),
        r.prototype.connect = function(t, e) {
            this._connecting || this._connected || (this._connecting = !0,
            this.socket.connect(t, e))
        }
        ,
        r.prototype.connectByUrl = function(t) {
            this._connecting || this._connected || (this._connecting = !0,
            this.socket.connectByUrl(t))
        }
        ,
        r.prototype.close = function() {
            this._connected && this.socket.close()
        }
        ,
        r.prototype.onConnect = function() {
            this._connected = !0,
            this._connecting = !1,
            this.dispatchEventWith(t.Event.CONNECT)
        }
        ,
        r.prototype.onClose = function() {
            this._connected = !1,
            this.dispatchEventWith(t.Event.CLOSE)
        }
        ,
        r.prototype.onError = function() {
            this._connecting && (this._connecting = !1),
            this.dispatchEventWith(t.IOErrorEvent.IO_ERROR)
        }
        ,
        r.prototype.onSocketData = function(e) {
            "string" == typeof e ? this._readMessage += e : this._readByte._writeUint8Array(new Uint8Array(e)),
            t.ProgressEvent.dispatchProgressEvent(this, t.ProgressEvent.SOCKET_DATA)
        }
        ,
        r.prototype.flush = function() {
            return this._connected ? (this._writeMessage && (this.socket.send(this._writeMessage),
            this._writeMessage = ""),
            this._bytesWrite && (this.socket.send(this._writeByte.buffer),
            this._bytesWrite = !1,
            this._writeByte.clear()),
            void (this._isReadySend = !1)) : void t.$warn(3101)
        }
        ,
        r.prototype.writeUTF = function(e) {
            return this._connected ? (this._type == r.TYPE_BINARY ? (this._bytesWrite = !0,
            this._writeByte.writeUTF(e)) : this._writeMessage += e,
            void this.flush()) : void t.$warn(3101)
        }
        ,
        r.prototype.readUTF = function() {
            var t;
            return this._type == r.TYPE_BINARY ? (this._readByte.position = 0,
            t = this._readByte.readUTF(),
            this._readByte.clear()) : (t = this._readMessage,
            this._readMessage = ""),
            t
        }
        ,
        r.prototype.writeBytes = function(e, r, i) {
            return void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            this._connected ? this._writeByte ? (this._bytesWrite = !0,
            this._writeByte.writeBytes(e, r, i),
            void this.flush()) : void t.$warn(3102) : void t.$warn(3101)
        }
        ,
        r.prototype.readBytes = function(e, r, i) {
            return void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            this._readByte ? (this._readByte.position = 0,
            this._readByte.readBytes(e, r, i),
            void this._readByte.clear()) : void t.$warn(3102)
        }
        ,
        Object.defineProperty(r.prototype, "connected", {
            get: function() {
                return this._connected
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "type", {
            get: function() {
                return this._type
            },
            set: function(e) {
                this._type = e,
                e != r.TYPE_BINARY || this._writeByte || (this._readByte = new t.ByteArray,
                this._writeByte = new t.ByteArray)
            },
            enumerable: !0,
            configurable: !0
        }),
        r.TYPE_STRING = "webSocketTypeString",
        r.TYPE_BINARY = "webSocketTypeBinary",
        r
    }(t.EventDispatcher);
    t.WebSocket = e,
    __reflect(e.prototype, "egret.WebSocket")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e;
    !function(e) {
        var r = function() {
            function e() {
                this.host = "",
                this.port = 0,
                window.WebSocket || t.$error(3100)
            }
            return e.prototype.addCallBacks = function(t, e, r, i, n) {
                this.onConnect = t,
                this.onClose = e,
                this.onSocketData = r,
                this.onError = i,
                this.thisObject = n
            }
            ,
            e.prototype.connect = function(t, e) {
                this.host = t,
                this.port = e;
                var r = "ws://" + this.host + ":" + this.port;
                this.socket = new window.WebSocket(r),
                this.socket.binaryType = "arraybuffer",
                this._bindEvent()
            }
            ,
            e.prototype.connectByUrl = function(t) {
                this.socket = new window.WebSocket(t),
                this.socket.binaryType = "arraybuffer",
                this._bindEvent()
            }
            ,
            e.prototype._bindEvent = function() {
                var t = this
                  , e = this.socket;
                e.onopen = function() {
                    t.onConnect && t.onConnect.call(t.thisObject)
                }
                ,
                e.onclose = function(e) {
                    t.onClose && t.onClose.call(t.thisObject)
                }
                ,
                e.onerror = function(e) {
                    t.onError && t.onError.call(t.thisObject)
                }
                ,
                e.onmessage = function(e) {
                    t.onSocketData && t.onSocketData.call(t.thisObject, e.data)
                }
            }
            ,
            e.prototype.send = function(t) {
                this.socket.send(t)
            }
            ,
            e.prototype.close = function() {
                this.socket.close()
            }
            ,
            e.prototype.disconnect = function() {
                this.socket.disconnect && this.socket.disconnect()
            }
            ,
            e
        }();
        e.HTML5WebSocket = r,
        __reflect(r.prototype, "egret.web.HTML5WebSocket", ["egret.ISocket"]),
        t.ISocket = r
    }(e = t.web || (t.web = {}))
}(egret || (egret = {}));
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, particle;
!function(t) {
    var e = function() {
        function t() {
            this.matrix = new egret.Matrix,
            this.reset()
        }
        return t.prototype.reset = function() {
            this.x = 0,
            this.y = 0,
            this.scale = 1,
            this.rotation = 0,
            this.alpha = 1,
            this.currentTime = 0,
            this.totalTime = 1e3
        }
        ,
        t.prototype.$getMatrix = function(t, e) {
            var r = this.matrix;
            if (r.identity(),
            this.rotation % 360)
                var i = this.rotation
                  , n = egret.NumberUtils.cos(i)
                  , a = egret.NumberUtils.sin(i);
            else
                n = 1,
                a = 0;
            return r.append(n * this.scale, a * this.scale, -a * this.scale, n * this.scale, this.x, this.y),
            (t || e) && (r.tx -= t * r.a + e * r.c,
            r.ty -= t * r.b + e * r.d),
            r
        }
        ,
        t
    }();
    t.Particle = e,
    __reflect(e.prototype, "particle.Particle")
}(particle || (particle = {}));
var particle;
!function(t) {
    var e = function(e) {
        function r(t, r) {
            var i = e.call(this) || this;
            return i._pool = [],
            i.frameTime = 0,
            i.particles = [],
            i._emitterX = 0,
            i._emitterY = 0,
            i.emissionTime = -1,
            i.maxParticles = 200,
            i.numParticles = 0,
            i.particleClass = null,
            i.$particleConfig = null,
            i.particleMeasureRect = new egret.Rectangle,
            i.transformForMeasure = new egret.Matrix,
            i.bitmapNodeList = [],
            egret.nativeRender ? (i.initConfig(r, 0, 0),
            i.changeTexture(t)) : (i.emissionRate = r,
            i.texture = t,
            i.$renderNode = new egret.sys.GroupNode,
            i.$renderNode.cleanBeforeRender = function() {}
            ),
            i
        }
        return __extends(r, e),
        r.prototype.createNativeDisplayObject = function() {
            this.$nativeDisplayObject = new egret_native.NativeDisplayObject(10)
        }
        ,
        r.prototype.initConfig = function(t, e, r) {
            this.$particleConfig = [t, e, r, 0, 200],
            this.emissionRate = t,
            this._emitterX = e,
            this._emitterY = r
        }
        ,
        r.prototype.getParticle = function() {
            var e;
            return e = this._pool.length ? this._pool.pop() : this.particleClass ? new this.particleClass : new t.Particle
        }
        ,
        r.prototype.removeParticle = function(t) {
            var e = this.particles.indexOf(t);
            return -1 != e ? (t.reset(),
            this.particles.splice(e, 1),
            this._pool.push(t),
            this.numParticles--,
            this.bitmapNodeList.length > this.numParticles && (this.bitmapNodeList.length = this.numParticles,
            this.$renderNode.drawData.length = this.numParticles),
            !0) : !1
        }
        ,
        r.prototype.initParticle = function(t) {
            t.x = this.emitterX,
            t.y = this.emitterY,
            t.currentTime = 0,
            t.totalTime = 1e3
        }
        ,
        r.prototype.updateRelativeBounds = function(t) {
            t ? (null == this.relativeContentBounds && (this.relativeContentBounds = new egret.Rectangle),
            this.relativeContentBounds.copyFrom(t),
            this.relativeContentBounds.x += this.emitterX,
            this.relativeContentBounds.y += this.emitterY) : this.relativeContentBounds = null,
            this.mask = this.relativeContentBounds
        }
        ,
        Object.defineProperty(r.prototype, "emitterBounds", {
            get: function() {
                return this._emitterBounds
            },
            set: function(t) {
                this._emitterBounds = t,
                this.updateRelativeBounds(t),
                egret.nativeRender && this.onPropertyChanges()
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.onPropertyChanges = function() {
            this.$nativeDisplayObject.setCustomData(this.$particleConfig)
        }
        ,
        Object.defineProperty(r.prototype, "emitterX", {
            get: function() {
                return this._emitterX
            },
            set: function(t) {
                this._emitterX = t,
                this.updateRelativeBounds(this.emitterBounds),
                egret.nativeRender && this.onPropertyChanges()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "emitterY", {
            get: function() {
                return this._emitterY
            },
            set: function(t) {
                this._emitterY = t,
                this.updateRelativeBounds(this.emitterBounds),
                egret.nativeRender && this.onPropertyChanges()
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.start = function(t) {
            void 0 === t && (t = -1),
            0 != this.emissionRate && (this.emissionTime = t,
            egret.nativeRender ? (this.$particleConfig[3] = t,
            this.$nativeDisplayObject.setCustomData(this.$particleConfig)) : (this.timeStamp = egret.getTimer(),
            egret.startTick(this.update, this)))
        }
        ,
        r.prototype.stop = function(t) {
            return void 0 === t && (t = !1),
            egret.nativeRender ? void this.$nativeDisplayObject.setStopToParticle(t) : (this.emissionTime = 0,
            void (t && (this.clear(),
            egret.stopTick(this.update, this))))
        }
        ,
        r.prototype.update = function(t) {
            var e = t - this.timeStamp;
            if (this.timeStamp = t,
            -1 == this.emissionTime || this.emissionTime > 0) {
                for (this.frameTime += e; this.frameTime > 0; )
                    this.numParticles < this.maxParticles && this.addOneParticle(),
                    this.frameTime -= this.emissionRate;
                -1 != this.emissionTime && (this.emissionTime -= e,
                this.emissionTime < 0 && (this.emissionTime = 0))
            }
            for (var r, i = 0; i < this.numParticles; )
                r = this.particles[i],
                r.currentTime < r.totalTime ? (this.advanceParticle(r, e),
                r.currentTime += e,
                i++) : this.removeParticle(r);
            return this.$renderDirty = !0,
            0 == this.numParticles && 0 == this.emissionTime && (egret.stopTick(this.update, this),
            this.dispatchEventWith(egret.Event.COMPLETE)),
            !1
        }
        ,
        r.prototype.$measureContentBounds = function(t) {
            if (this.relativeContentBounds)
                return void t.copyFrom(this.relativeContentBounds);
            if (this.numParticles > 0) {
                for (var e, r = this.texture, i = Math.round(r.$getScaleBitmapWidth()), n = Math.round(r.$getScaleBitmapHeight()), a = egret.Rectangle.create(), s = 0; s < this.numParticles; s++) {
                    e = this.particles[s],
                    this.transformForMeasure.identity(),
                    this.appendTransform(this.transformForMeasure, e.x, e.y, e.scale, e.scale, e.rotation, 0, 0, i / 2, n / 2),
                    this.particleMeasureRect.setEmpty(),
                    this.particleMeasureRect.width = i,
                    this.particleMeasureRect.height = n;
                    var o = Region.create();
                    if (o.updateRegion(this.particleMeasureRect, this.transformForMeasure),
                    0 == s)
                        a.setTo(o.minX, o.minY, o.maxX - o.minX, o.maxY - o.minY);
                    else {
                        var l = Math.min(a.x, o.minX)
                          , h = Math.min(a.y, o.minY)
                          , u = Math.max(a.right, o.maxX)
                          , c = Math.max(a.bottom, o.maxY);
                        a.setTo(l, h, u - l, c - h)
                    }
                    Region.release(o)
                }
                this.lastRect = a,
                t.setTo(a.x, a.y, a.width, a.height),
                egret.Rectangle.release(a)
            } else
                this.lastRect && (a = this.lastRect,
                t.setTo(a.x, a.y, a.width, a.height),
                egret.Rectangle.release(a),
                this.lastRect = null)
        }
        ,
        r.prototype.setCurrentParticles = function(t) {
            if (!egret.nativeRender)
                for (var e = this.numParticles; t > e && this.numParticles < this.maxParticles; e++)
                    this.addOneParticle()
        }
        ,
        r.prototype.changeTexture = function(t) {
            this.texture != t && (this.texture = t,
            egret.nativeRender ? this.$nativeDisplayObject.setBitmapDataToParticle(t) : (this.bitmapNodeList.length = 0,
            this.$renderNode.drawData.length = 0))
        }
        ,
        r.prototype.clear = function() {
            for (; this.particles.length; )
                this.removeParticle(this.particles[0]);
            this.numParticles = 0,
            this.$renderNode.drawData.length = 0,
            this.bitmapNodeList.length = 0,
            this.$renderDirty = !0
        }
        ,
        r.prototype.addOneParticle = function() {
            var t = this.getParticle();
            this.initParticle(t),
            t.totalTime > 0 && (this.particles.push(t),
            this.numParticles++)
        }
        ,
        r.prototype.advanceParticle = function(t, e) {
            t.y -= e / 6
        }
        ,
        r.prototype.$updateRenderNode = function() {
            if (!egret.nativeRender && this.numParticles > 0)
                for (var t, e = this.texture, r = Math.round(e.$getScaleBitmapWidth()), i = Math.round(e.$getScaleBitmapHeight()), n = e.$offsetX, a = e.$offsetY, s = e.$bitmapX, o = e.$bitmapY, l = e.$bitmapWidth, h = e.$bitmapHeight, u = 0; u < this.numParticles; u++) {
                    t = this.particles[u];
                    var c;
                    this.bitmapNodeList[u] || (c = new egret.sys.BitmapNode,
                    this.bitmapNodeList[u] = c,
                    this.$renderNode.addNode(this.bitmapNodeList[u]),
                    c.image = e.$bitmapData,
                    c.imageWidth = e.$sourceWidth,
                    c.imageHeight = e.$sourceHeight,
                    c.drawImage(s, o, l, h, n, a, r, i)),
                    c = this.bitmapNodeList[u],
                    c.matrix = t.$getMatrix(r / 2, i / 2),
                    c.blendMode = t.blendMode,
                    c.alpha = t.alpha
                }
        }
        ,
        r.prototype.appendTransform = function(t, e, r, i, n, a, s, o, l, h) {
            if (a % 360)
                var u = a
                  , c = egret.NumberUtils.cos(u)
                  , f = egret.NumberUtils.sin(u);
            else
                c = 1,
                f = 0;
            return s || o ? (t.append(egret.NumberUtils.cos(o), egret.NumberUtils.sin(o), -egret.NumberUtils.sin(s), egret.NumberUtils.cos(s), e, r),
            t.append(c * i, f * i, -f * n, c * n, 0, 0)) : t.append(c * i, f * i, -f * n, c * n, e, r),
            (l || h) && (t.tx -= l * t.a + h * t.c,
            t.ty -= l * t.b + h * t.d),
            t
        }
        ,
        r
    }(egret.DisplayObject);
    t.ParticleSystem = e,
    __reflect(e.prototype, "particle.ParticleSystem")
}(particle || (particle = {}));
var regionPool = []
  , Region = function() {
    function t() {
        this.minX = 0,
        this.minY = 0,
        this.maxX = 0,
        this.maxY = 0,
        this.width = 0,
        this.height = 0,
        this.area = 0
    }
    return t.release = function(t) {
        regionPool.push(t)
    }
    ,
    t.create = function() {
        var e = regionPool.pop();
        return e || (e = new t),
        e
    }
    ,
    t.prototype.setEmpty = function() {
        this.minX = 0,
        this.minY = 0,
        this.maxX = 0,
        this.maxY = 0,
        this.width = 0,
        this.height = 0,
        this.area = 0
    }
    ,
    t.prototype.updateRegion = function(t, e) {
        if (0 == t.width || 0 == t.height)
            return void this.setEmpty();
        var r, i, n, a, s = e, o = s.a, l = s.b, h = s.c, u = s.d, c = s.tx, f = s.ty, d = t.x, p = t.y, _ = d + t.width, m = p + t.height;
        if (1 == o && 0 == l && 0 == h && 1 == u)
            r = d + c - 1,
            i = p + f - 1,
            n = _ + c + 1,
            a = m + f + 1;
        else {
            var g = o * d + h * p + c
              , y = l * d + u * p + f
              , v = o * _ + h * p + c
              , b = l * _ + u * p + f
              , w = o * _ + h * m + c
              , T = l * _ + u * m + f
              , D = o * d + h * m + c
              , S = l * d + u * m + f
              , E = 0;
            g > v && (E = g,
            g = v,
            v = E),
            w > D && (E = w,
            w = D,
            D = E),
            r = (w > g ? g : w) - 1,
            n = (v > D ? v : D) + 1,
            y > b && (E = y,
            y = b,
            b = E),
            T > S && (E = T,
            T = S,
            S = E),
            i = (T > y ? y : T) - 1,
            a = (b > S ? b : S) + 1
        }
        this.minX = r,
        this.minY = i,
        this.maxX = n,
        this.maxY = a,
        this.width = n - r,
        this.height = a - i,
        this.area = this.width * this.height
    }
    ,
    t
}();
__reflect(Region.prototype, "Region");
var particle;
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this
        }
        return __extends(e, t),
        e.prototype.reset = function() {
            t.prototype.reset.call(this),
            this.startX = 0,
            this.startY = 0,
            this.velocityX = 0,
            this.velocityY = 0,
            this.radialAcceleration = 0,
            this.tangentialAcceleration = 0,
            this.rotationDelta = 0,
            this.scaleDelta = 0
        }
        ,
        e
    }(t.Particle);
    t.GravityParticle = e,
    __reflect(e.prototype, "particle.GravityParticle")
}(particle || (particle = {}));
var particle;
!function(t) {
    var e = function(e) {
        function r(r, i) {
            var n = e.call(this, r, 200) || this;
            return n.$init = !1,
            n.parseConfig(i),
            n.emissionRate = n.lifespan / n.maxParticles,
            n.particleClass = t.GravityParticle,
            n.$init = !0,
            n
        }
        return __extends(r, e),
        r.prototype.start = function(t) {
            if (void 0 === t && (t = -1),
            egret.nativeRender) {
                0 != this.emissionRate && (this.emissionTime = t),
                this.$particleConfig[2] = t;
                var r = []
                  , i = 0;
                for (var n in this.$particleConfig)
                    r.push(i++),
                    r.push(this.$particleConfig[n]);
                this.$nativeDisplayObject.setCustomData(r)
            } else
                e.prototype.start.call(this, t)
        }
        ,
        r.prototype.setCurrentParticles = function(t) {
            if (!(t > this.maxParticles)) {
                var e = [];
                e.push(35),
                e.push(t),
                this.$nativeDisplayObject.setCustomData(e)
            }
        }
        ,
        r.prototype.onPropertyChanges = function() {
            if (0 != this.$init) {
                var t = [];
                t.push(0),
                this.$particleConfig[0] = this._emitterX,
                t.push(this._emitterX),
                t.push(1),
                this.$particleConfig[1] = this._emitterY,
                t.push(this._emitterY),
                this.relativeContentBounds && (t.push(31),
                this.$particleConfig[31] = this.relativeContentBounds.x,
                t.push(this.relativeContentBounds.x),
                t.push(32),
                this.$particleConfig[32] = this.relativeContentBounds.y,
                t.push(this.relativeContentBounds.y),
                t.push(33),
                this.$particleConfig[33] = this.relativeContentBounds.width,
                t.push(this.relativeContentBounds.width),
                t.push(34),
                this.$particleConfig[34] = this.relativeContentBounds.height,
                t.push(this.relativeContentBounds.height)),
                this.$nativeDisplayObject.setCustomData(t)
            }
        }
        ,
        r.prototype.parseConfig = function(t) {
            function e(t) {
                return "undefined" == typeof t ? 0 : t
            }
            if (egret.nativeRender ? (this._emitterX = e(t.emitter.x),
            this._emitterY = e(t.emitter.y)) : (this.emitterX = e(t.emitter.x),
            this.emitterY = e(t.emitter.y)),
            this.emitterXVariance = e(t.emitterVariance.x),
            this.emitterYVariance = e(t.emitterVariance.y),
            this.gravityX = e(t.gravity.x),
            this.gravityY = e(t.gravity.y),
            1 == t.useEmitterRect) {
                var r = new egret.Rectangle;
                r.x = e(t.emitterRect.x),
                r.y = e(t.emitterRect.y),
                r.width = e(t.emitterRect.width),
                r.height = e(t.emitterRect.height),
                this.emitterBounds = r
            }
            this.maxParticles = e(t.maxParticles),
            this.speed = e(t.speed),
            this.speedVariance = e(t.speedVariance),
            this.lifespan = Math.max(.01, e(t.lifespan)),
            this.lifespanVariance = e(t.lifespanVariance),
            this.emitAngle = e(t.emitAngle),
            this.emitAngleVariance = e(t.emitAngleVariance),
            this.startSize = e(t.startSize),
            this.startSizeVariance = e(t.startSizeVariance),
            this.endSize = e(t.endSize),
            this.endSizeVariance = e(t.endSizeVariance),
            this.startRotation = e(t.startRotation),
            this.startRotationVariance = e(t.startRotationVariance),
            this.endRotation = e(t.endRotation),
            this.endRotationVariance = e(t.endRotationVariance),
            this.radialAcceleration = e(t.radialAcceleration),
            this.radialAccelerationVariance = e(t.radialAccelerationVariance),
            this.tangentialAcceleration = e(t.tangentialAcceleration),
            this.tangentialAccelerationVariance = e(t.tangentialAccelerationVariance),
            this.startAlpha = e(t.startAlpha),
            this.startAlphaVariance = e(t.startAlphaVariance),
            this.endAlpha = e(t.endAlpha),
            this.endAlphaVariance = e(t.endAlphaVariance),
            egret.nativeRender ? t.blendMode && (this.particleBlendMode = t.blendMode) : this.particleBlendMode = t.blendMode,
            this.$particleConfig = {
                0: this.emitterX,
                1: this.emitterY,
                2: -1,
                3: this.maxParticles,
                4: this.emitterXVariance,
                5: this.emitterYVariance,
                6: this.gravityX,
                7: this.gravityY,
                8: this.speed,
                9: this.speedVariance,
                10: this.lifespan,
                11: this.lifespanVariance,
                12: this.emitAngle,
                13: this.emitAngleVariance,
                14: this.startSize,
                15: this.startSizeVariance,
                16: this.endSize,
                17: this.endSizeVariance,
                18: this.startRotation,
                19: this.startRotationVariance,
                20: this.endRotation,
                21: this.endRotationVariance,
                22: this.radialAcceleration,
                23: this.radialAccelerationVariance,
                24: this.tangentialAcceleration,
                25: this.tangentialAccelerationVariance,
                26: this.startAlpha,
                27: this.startAlphaVariance,
                28: this.endAlpha,
                29: this.endAlphaVariance,
                30: this.particleBlendMode,
                31: t.useEmitterRect ? this.relativeContentBounds.x : 0,
                32: t.useEmitterRect ? this.relativeContentBounds.y : 0,
                33: t.useEmitterRect ? this.relativeContentBounds.width : 0,
                34: t.useEmitterRect ? this.relativeContentBounds.height : 0,
                35: 0
            }
        }
        ,
        r.prototype.initParticle = function(t) {
            var e = t
              , i = r.getValue(this.lifespan, this.lifespanVariance);
            if (e.currentTime = 0,
            e.totalTime = i > 0 ? i : 0,
            !(0 >= i)) {
                e.x = r.getValue(this.emitterX, this.emitterXVariance),
                e.y = r.getValue(this.emitterY, this.emitterYVariance),
                e.startX = this.emitterX,
                e.startY = this.emitterY;
                var n = r.getValue(this.emitAngle, this.emitAngleVariance)
                  , a = r.getValue(this.speed, this.speedVariance);
                e.velocityX = a * egret.NumberUtils.cos(n),
                e.velocityY = a * egret.NumberUtils.sin(n),
                e.radialAcceleration = r.getValue(this.radialAcceleration, this.radialAccelerationVariance),
                e.tangentialAcceleration = r.getValue(this.tangentialAcceleration, this.tangentialAccelerationVariance);
                var s = r.getValue(this.startSize, this.startSizeVariance);
                .1 > s && (s = .1);
                var o = r.getValue(this.endSize, this.endSizeVariance);
                .1 > o && (o = .1);
                var l = this.texture.textureWidth;
                e.scale = s / l,
                e.scaleDelta = (o - s) / i / l;
                var h = r.getValue(this.startRotation, this.startRotationVariance)
                  , u = r.getValue(this.endRotation, this.endRotationVariance);
                e.rotation = h,
                e.rotationDelta = (u - h) / i;
                var c = r.getValue(this.startAlpha, this.startAlphaVariance)
                  , f = r.getValue(this.endAlpha, this.endAlphaVariance);
                e.alpha = c,
                e.alphaDelta = (f - c) / i,
                e.blendMode = this.particleBlendMode
            }
        }
        ,
        r.getValue = function(t, e) {
            return t + e * (2 * Math.random() - 1)
        }
        ,
        r.prototype.advanceParticle = function(t, e) {
            var r = t;
            e /= 1e3;
            var i = r.totalTime - r.currentTime;
            e = i > e ? e : i,
            r.currentTime += e;
            var n = r.x - r.startX
              , a = r.y - r.startY
              , s = Math.sqrt(n * n + a * a);
            .01 > s && (s = .01);
            var o = n / s
              , l = a / s
              , h = o
              , u = l;
            o *= r.radialAcceleration,
            l *= r.radialAcceleration;
            var c = h;
            h = -u * r.tangentialAcceleration,
            u = c * r.tangentialAcceleration,
            r.velocityX += e * (this.gravityX + o + h),
            r.velocityY += e * (this.gravityY + l + u),
            r.x += r.velocityX * e,
            r.y += r.velocityY * e,
            r.scale += r.scaleDelta * e * 1e3,
            r.scale < 0 && (r.scale = 0),
            r.rotation += r.rotationDelta * e * 1e3,
            r.alpha += r.alphaDelta * e * 1e3
        }
        ,
        r
    }(t.ParticleSystem);
    t.GravityParticleSystem = e,
    __reflect(e.prototype, "particle.GravityParticleSystem")
}(particle || (particle = {})),
!function(t) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd)
        define([], t);
    else {
        var e;
        e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
        e.JSZip = t()
    }
}(function() {
    return function t(e, r, i) {
        function n(s, o) {
            if (!r[s]) {
                if (!e[s]) {
                    var l = "function" == typeof require && require;
                    if (!o && l)
                        return l(s, !0);
                    if (a)
                        return a(s, !0);
                    var h = new Error("Cannot find module '" + s + "'");
                    throw h.code = "MODULE_NOT_FOUND",
                    h
                }
                var u = r[s] = {
                    exports: {}
                };
                e[s][0].call(u.exports, function(t) {
                    var r = e[s][1][t];
                    return n(r ? r : t)
                }, u, u.exports, t, e, r, i)
            }
            return r[s].exports
        }
        for (var a = "function" == typeof require && require, s = 0; s < i.length; s++)
            n(i[s]);
        return n
    }({
        1: [function(t, e, r) {
            "use strict";
            var i = t("./utils")
              , n = t("./support")
              , a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            r.encode = function(t) {
                for (var e, r, n, s, o, l, h, u = [], c = 0, f = t.length, d = f, p = "string" !== i.getTypeOf(t); c < t.length; )
                    d = f - c,
                    p ? (e = t[c++],
                    r = f > c ? t[c++] : 0,
                    n = f > c ? t[c++] : 0) : (e = t.charCodeAt(c++),
                    r = f > c ? t.charCodeAt(c++) : 0,
                    n = f > c ? t.charCodeAt(c++) : 0),
                    s = e >> 2,
                    o = (3 & e) << 4 | r >> 4,
                    l = d > 1 ? (15 & r) << 2 | n >> 6 : 64,
                    h = d > 2 ? 63 & n : 64,
                    u.push(a.charAt(s) + a.charAt(o) + a.charAt(l) + a.charAt(h));
                return u.join("")
            }
            ,
            r.decode = function(t) {
                var e, r, i, s, o, l, h, u = 0, c = 0, f = "data:";
                if (t.substr(0, f.length) === f)
                    throw new Error("Invalid base64 input, it looks like a data url.");
                t = t.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                var d = 3 * t.length / 4;
                if (t.charAt(t.length - 1) === a.charAt(64) && d--,
                t.charAt(t.length - 2) === a.charAt(64) && d--,
                d % 1 !== 0)
                    throw new Error("Invalid base64 input, bad content length.");
                var p;
                for (p = n.uint8array ? new Uint8Array(0 | d) : new Array(0 | d); u < t.length; )
                    s = a.indexOf(t.charAt(u++)),
                    o = a.indexOf(t.charAt(u++)),
                    l = a.indexOf(t.charAt(u++)),
                    h = a.indexOf(t.charAt(u++)),
                    e = s << 2 | o >> 4,
                    r = (15 & o) << 4 | l >> 2,
                    i = (3 & l) << 6 | h,
                    p[c++] = e,
                    64 !== l && (p[c++] = r),
                    64 !== h && (p[c++] = i);
                return p
            }
        }
        , {
            "./support": 30,
            "./utils": 32
        }],
        2: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i, n) {
                this.compressedSize = t,
                this.uncompressedSize = e,
                this.crc32 = r,
                this.compression = i,
                this.compressedContent = n
            }
            var n = t("./external")
              , a = t("./stream/DataWorker")
              , s = t("./stream/DataLengthProbe")
              , o = t("./stream/Crc32Probe")
              , s = t("./stream/DataLengthProbe");
            i.prototype = {
                getContentWorker: function() {
                    var t = new a(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new s("data_length"))
                      , e = this;
                    return t.on("end", function() {
                        if (this.streamInfo.data_length !== e.uncompressedSize)
                            throw new Error("Bug : uncompressed data size mismatch")
                    }),
                    t
                },
                getCompressedWorker: function() {
                    return new a(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression)
                }
            },
            i.createWorkerFrom = function(t, e, r) {
                return t.pipe(new o).pipe(new s("uncompressedSize")).pipe(e.compressWorker(r)).pipe(new s("compressedSize")).withStreamInfo("compression", e)
            }
            ,
            e.exports = i
        }
        , {
            "./external": 6,
            "./stream/Crc32Probe": 25,
            "./stream/DataLengthProbe": 26,
            "./stream/DataWorker": 27
        }],
        3: [function(t, e, r) {
            "use strict";
            var i = t("./stream/GenericWorker");
            r.STORE = {
                magic: "\x00\x00",
                compressWorker: function(t) {
                    return new i("STORE compression")
                },
                uncompressWorker: function() {
                    return new i("STORE decompression")
                }
            },
            r.DEFLATE = t("./flate")
        }
        , {
            "./flate": 7,
            "./stream/GenericWorker": 28
        }],
        4: [function(t, e, r) {
            "use strict";
            function i() {
                for (var t, e = [], r = 0; 256 > r; r++) {
                    t = r;
                    for (var i = 0; 8 > i; i++)
                        t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    e[r] = t
                }
                return e
            }
            function n(t, e, r, i) {
                var n = o
                  , a = i + r;
                t = -1 ^ t;
                for (var s = i; a > s; s++)
                    t = t >>> 8 ^ n[255 & (t ^ e[s])];
                return -1 ^ t
            }
            function a(t, e, r, i) {
                var n = o
                  , a = i + r;
                t = -1 ^ t;
                for (var s = i; a > s; s++)
                    t = t >>> 8 ^ n[255 & (t ^ e.charCodeAt(s))];
                return -1 ^ t
            }
            var s = t("./utils")
              , o = i();
            e.exports = function(t, e) {
                if ("undefined" == typeof t || !t.length)
                    return 0;
                var r = "string" !== s.getTypeOf(t);
                return r ? n(0 | e, t, t.length, 0) : a(0 | e, t, t.length, 0)
            }
        }
        , {
            "./utils": 32
        }],
        5: [function(t, e, r) {
            "use strict";
            r.base64 = !1,
            r.binary = !1,
            r.dir = !1,
            r.createFolders = !0,
            r.date = null,
            r.compression = null,
            r.compressionOptions = null,
            r.comment = null,
            r.unixPermissions = null,
            r.dosPermissions = null
        }
        , {}],
        6: [function(t, e, r) {
            "use strict";
            var i = null;
            i = "undefined" != typeof Promise ? Promise : t("lie"),
            e.exports = {
                Promise: i
            }
        }
        , {
            lie: 58
        }],
        7: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                o.call(this, "FlateWorker/" + t),
                this._pako = null,
                this._pakoAction = t,
                this._pakoOptions = e,
                this.meta = {}
            }
            var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array
              , a = t("pako")
              , s = t("./utils")
              , o = t("./stream/GenericWorker")
              , l = n ? "uint8array" : "array";
            r.magic = "\b\x00",
            s.inherits(i, o),
            i.prototype.processChunk = function(t) {
                this.meta = t.meta,
                null === this._pako && this._createPako(),
                this._pako.push(s.transformTo(l, t.data), !1)
            }
            ,
            i.prototype.flush = function() {
                o.prototype.flush.call(this),
                null === this._pako && this._createPako(),
                this._pako.push([], !0)
            }
            ,
            i.prototype.cleanUp = function() {
                o.prototype.cleanUp.call(this),
                this._pako = null
            }
            ,
            i.prototype._createPako = function() {
                this._pako = new a[this._pakoAction]({
                    raw: !0,
                    level: this._pakoOptions.level || -1
                });
                var t = this;
                this._pako.onData = function(e) {
                    t.push({
                        data: e,
                        meta: t.meta
                    })
                }
            }
            ,
            r.compressWorker = function(t) {
                return new i("Deflate",t)
            }
            ,
            r.uncompressWorker = function() {
                return new i("Inflate",{})
            }
        }
        , {
            "./stream/GenericWorker": 28,
            "./utils": 32,
            pako: 59
        }],
        8: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i) {
                a.call(this, "ZipFileWorker"),
                this.bytesWritten = 0,
                this.zipComment = e,
                this.zipPlatform = r,
                this.encodeFileName = i,
                this.streamFiles = t,
                this.accumulate = !1,
                this.contentBuffer = [],
                this.dirRecords = [],
                this.currentSourceOffset = 0,
                this.entriesCount = 0,
                this.currentFile = null,
                this._sources = []
            }
            var n = t("../utils")
              , a = t("../stream/GenericWorker")
              , s = t("../utf8")
              , o = t("../crc32")
              , l = t("../signature")
              , h = function(t, e) {
                var r, i = "";
                for (r = 0; e > r; r++)
                    i += String.fromCharCode(255 & t),
                    t >>>= 8;
                return i
            }
              , u = function(t, e) {
                var r = t;
                return t || (r = e ? 16893 : 33204),
                (65535 & r) << 16
            }
              , c = function(t, e) {
                return 63 & (t || 0)
            }
              , f = function(t, e, r, i, a, f) {
                var d, p, _ = t.file, m = t.compression, g = f !== s.utf8encode, y = n.transformTo("string", f(_.name)), v = n.transformTo("string", s.utf8encode(_.name)), b = _.comment, w = n.transformTo("string", f(b)), T = n.transformTo("string", s.utf8encode(b)), D = v.length !== _.name.length, S = T.length !== b.length, E = "", A = "", x = "", P = _.dir, C = _.date, O = {
                    crc32: 0,
                    compressedSize: 0,
                    uncompressedSize: 0
                };
                (!e || r) && (O.crc32 = t.crc32,
                O.compressedSize = t.compressedSize,
                O.uncompressedSize = t.uncompressedSize);
                var k = 0;
                e && (k |= 8),
                g || !D && !S || (k |= 2048);
                var I = 0
                  , R = 0;
                P && (I |= 16),
                "UNIX" === a ? (R = 798,
                I |= u(_.unixPermissions, P)) : (R = 20,
                I |= c(_.dosPermissions, P)),
                d = C.getUTCHours(),
                d <<= 6,
                d |= C.getUTCMinutes(),
                d <<= 5,
                d |= C.getUTCSeconds() / 2,
                p = C.getUTCFullYear() - 1980,
                p <<= 4,
                p |= C.getUTCMonth() + 1,
                p <<= 5,
                p |= C.getUTCDate(),
                D && (A = h(1, 1) + h(o(y), 4) + v,
                E += "up" + h(A.length, 2) + A),
                S && (x = h(1, 1) + h(o(w), 4) + T,
                E += "uc" + h(x.length, 2) + x);
                var B = "";
                B += "\n\x00",
                B += h(k, 2),
                B += m.magic,
                B += h(d, 2),
                B += h(p, 2),
                B += h(O.crc32, 4),
                B += h(O.compressedSize, 4),
                B += h(O.uncompressedSize, 4),
                B += h(y.length, 2),
                B += h(E.length, 2);
                var M = l.LOCAL_FILE_HEADER + B + y + E
                  , F = l.CENTRAL_FILE_HEADER + h(R, 2) + B + h(w.length, 2) + "\x00\x00\x00\x00" + h(I, 4) + h(i, 4) + y + E + w;
                return {
                    fileRecord: M,
                    dirRecord: F
                }
            }
              , d = function(t, e, r, i, a) {
                var s = ""
                  , o = n.transformTo("string", a(i));
                return s = l.CENTRAL_DIRECTORY_END + "\x00\x00\x00\x00" + h(t, 2) + h(t, 2) + h(e, 4) + h(r, 4) + h(o.length, 2) + o
            }
              , p = function(t) {
                var e = "";
                return e = l.DATA_DESCRIPTOR + h(t.crc32, 4) + h(t.compressedSize, 4) + h(t.uncompressedSize, 4)
            };
            n.inherits(i, a),
            i.prototype.push = function(t) {
                var e = t.meta.percent || 0
                  , r = this.entriesCount
                  , i = this._sources.length;
                this.accumulate ? this.contentBuffer.push(t) : (this.bytesWritten += t.data.length,
                a.prototype.push.call(this, {
                    data: t.data,
                    meta: {
                        currentFile: this.currentFile,
                        percent: r ? (e + 100 * (r - i - 1)) / r : 100
                    }
                }))
            }
            ,
            i.prototype.openedSource = function(t) {
                this.currentSourceOffset = this.bytesWritten,
                this.currentFile = t.file.name;
                var e = this.streamFiles && !t.file.dir;
                if (e) {
                    var r = f(t, e, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                    this.push({
                        data: r.fileRecord,
                        meta: {
                            percent: 0
                        }
                    })
                } else
                    this.accumulate = !0
            }
            ,
            i.prototype.closedSource = function(t) {
                this.accumulate = !1;
                var e = this.streamFiles && !t.file.dir
                  , r = f(t, e, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                if (this.dirRecords.push(r.dirRecord),
                e)
                    this.push({
                        data: p(t),
                        meta: {
                            percent: 100
                        }
                    });
                else
                    for (this.push({
                        data: r.fileRecord,
                        meta: {
                            percent: 0
                        }
                    }); this.contentBuffer.length; )
                        this.push(this.contentBuffer.shift());
                this.currentFile = null
            }
            ,
            i.prototype.flush = function() {
                for (var t = this.bytesWritten, e = 0; e < this.dirRecords.length; e++)
                    this.push({
                        data: this.dirRecords[e],
                        meta: {
                            percent: 100
                        }
                    });
                var r = this.bytesWritten - t
                  , i = d(this.dirRecords.length, r, t, this.zipComment, this.encodeFileName);
                this.push({
                    data: i,
                    meta: {
                        percent: 100
                    }
                })
            }
            ,
            i.prototype.prepareNextSource = function() {
                this.previous = this._sources.shift(),
                this.openedSource(this.previous.streamInfo),
                this.isPaused ? this.previous.pause() : this.previous.resume()
            }
            ,
            i.prototype.registerPrevious = function(t) {
                this._sources.push(t);
                var e = this;
                return t.on("data", function(t) {
                    e.processChunk(t)
                }),
                t.on("end", function() {
                    e.closedSource(e.previous.streamInfo),
                    e._sources.length ? e.prepareNextSource() : e.end()
                }),
                t.on("error", function(t) {
                    e.error(t)
                }),
                this
            }
            ,
            i.prototype.resume = function() {
                return a.prototype.resume.call(this) ? !this.previous && this._sources.length ? (this.prepareNextSource(),
                !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(),
                !0) : !1
            }
            ,
            i.prototype.error = function(t) {
                var e = this._sources;
                if (!a.prototype.error.call(this, t))
                    return !1;
                for (var r = 0; r < e.length; r++)
                    try {
                        e[r].error(t)
                    } catch (t) {}
                return !0
            }
            ,
            i.prototype.lock = function() {
                a.prototype.lock.call(this);
                for (var t = this._sources, e = 0; e < t.length; e++)
                    t[e].lock()
            }
            ,
            e.exports = i
        }
        , {
            "../crc32": 4,
            "../signature": 23,
            "../stream/GenericWorker": 28,
            "../utf8": 31,
            "../utils": 32
        }],
        9: [function(t, e, r) {
            "use strict";
            var i = t("../compressions")
              , n = t("./ZipFileWorker")
              , a = function(t, e) {
                var r = t || e
                  , n = i[r];
                if (!n)
                    throw new Error(r + " is not a valid compression method !");
                return n
            };
            r.generateWorker = function(t, e, r) {
                var i = new n(e.streamFiles,r,e.platform,e.encodeFileName)
                  , s = 0;
                try {
                    t.forEach(function(t, r) {
                        s++;
                        var n = a(r.options.compression, e.compression)
                          , o = r.options.compressionOptions || e.compressionOptions || {}
                          , l = r.dir
                          , h = r.date;
                        r._compressWorker(n, o).withStreamInfo("file", {
                            name: t,
                            dir: l,
                            date: h,
                            comment: r.comment || "",
                            unixPermissions: r.unixPermissions,
                            dosPermissions: r.dosPermissions
                        }).pipe(i)
                    }),
                    i.entriesCount = s
                } catch (o) {
                    i.error(o)
                }
                return i
            }
        }
        , {
            "../compressions": 3,
            "./ZipFileWorker": 8
        }],
        10: [function(t, e, r) {
            "use strict";
            function i() {
                if (!(this instanceof i))
                    return new i;
                if (arguments.length)
                    throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
                this.files = {},
                this.comment = null,
                this.root = "",
                this.clone = function() {
                    var t = new i;
                    for (var e in this)
                        "function" != typeof this[e] && (t[e] = this[e]);
                    return t
                }
            }
            i.prototype = t("./object"),
            i.prototype.loadAsync = t("./load"),
            i.support = t("./support"),
            i.defaults = t("./defaults"),
            i.version = "3.1.5",
            i.loadAsync = function(t, e) {
                return (new i).loadAsync(t, e)
            }
            ,
            i.external = t("./external"),
            e.exports = i
        }
        , {
            "./defaults": 5,
            "./external": 6,
            "./load": 11,
            "./object": 15,
            "./support": 30
        }],
        11: [function(t, e, r) {
            "use strict";
            function i(t) {
                return new a.Promise(function(e, r) {
                    var i = t.decompressed.getContentWorker().pipe(new l);
                    i.on("error", function(t) {
                        r(t)
                    }).on("end", function() {
                        i.streamInfo.crc32 !== t.decompressed.crc32 ? r(new Error("Corrupted zip : CRC32 mismatch")) : e()
                    }).resume()
                }
                )
            }
            var n = t("./utils")
              , a = t("./external")
              , s = t("./utf8")
              , n = t("./utils")
              , o = t("./zipEntries")
              , l = t("./stream/Crc32Probe")
              , h = t("./nodejsUtils");
            e.exports = function(t, e) {
                var r = this;
                return e = n.extend(e || {}, {
                    base64: !1,
                    checkCRC32: !1,
                    optimizedBinaryString: !1,
                    createFolders: !1,
                    decodeFileName: s.utf8decode
                }),
                h.isNode && h.isStream(t) ? a.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : n.prepareContent("the loaded zip file", t, !0, e.optimizedBinaryString, e.base64).then(function(t) {
                    var r = new o(e);
                    return r.load(t),
                    r
                }).then(function(t) {
                    var r = [a.Promise.resolve(t)]
                      , n = t.files;
                    if (e.checkCRC32)
                        for (var s = 0; s < n.length; s++)
                            r.push(i(n[s]));
                    return a.Promise.all(r)
                }).then(function(t) {
                    for (var i = t.shift(), n = i.files, a = 0; a < n.length; a++) {
                        var s = n[a];
                        r.file(s.fileNameStr, s.decompressed, {
                            binary: !0,
                            optimizedBinaryString: !0,
                            date: s.date,
                            dir: s.dir,
                            comment: s.fileCommentStr.length ? s.fileCommentStr : null,
                            unixPermissions: s.unixPermissions,
                            dosPermissions: s.dosPermissions,
                            createFolders: e.createFolders
                        })
                    }
                    return i.zipComment.length && (r.comment = i.zipComment),
                    r
                })
            }
        }
        , {
            "./external": 6,
            "./nodejsUtils": 14,
            "./stream/Crc32Probe": 25,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntries": 33
        }],
        12: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                a.call(this, "Nodejs stream input adapter for " + t),
                this._upstreamEnded = !1,
                this._bindStream(e)
            }
            var n = t("../utils")
              , a = t("../stream/GenericWorker");
            n.inherits(i, a),
            i.prototype._bindStream = function(t) {
                var e = this;
                this._stream = t,
                t.pause(),
                t.on("data", function(t) {
                    e.push({
                        data: t,
                        meta: {
                            percent: 0
                        }
                    })
                }).on("error", function(t) {
                    e.isPaused ? this.generatedError = t : e.error(t)
                }).on("end", function() {
                    e.isPaused ? e._upstreamEnded = !0 : e.end()
                })
            }
            ,
            i.prototype.pause = function() {
                return a.prototype.pause.call(this) ? (this._stream.pause(),
                !0) : !1
            }
            ,
            i.prototype.resume = function() {
                return a.prototype.resume.call(this) ? (this._upstreamEnded ? this.end() : this._stream.resume(),
                !0) : !1
            }
            ,
            e.exports = i
        }
        , {
            "../stream/GenericWorker": 28,
            "../utils": 32
        }],
        13: [function(t, e, r) {
            "use strict";
            function i(t, e, r) {
                n.call(this, e),
                this._helper = t;
                var i = this;
                t.on("data", function(t, e) {
                    i.push(t) || i._helper.pause(),
                    r && r(e)
                }).on("error", function(t) {
                    i.emit("error", t)
                }).on("end", function() {
                    i.push(null)
                })
            }
            var n = t("readable-stream").Readable
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype._read = function() {
                this._helper.resume()
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "readable-stream": 16
        }],
        14: [function(t, e, r) {
            "use strict";
            e.exports = {
                isNode: "undefined" != typeof Buffer,
                newBufferFrom: function(t, e) {
                    return new Buffer(t,e)
                },
                allocBuffer: function(t) {
                    return Buffer.alloc ? Buffer.alloc(t) : new Buffer(t)
                },
                isBuffer: function(t) {
                    return Buffer.isBuffer(t)
                },
                isStream: function(t) {
                    return t && "function" == typeof t.on && "function" == typeof t.pause && "function" == typeof t.resume
                }
            }
        }
        , {}],
        15: [function(t, e, r) {
            "use strict";
            function i(t) {
                return "[object RegExp]" === Object.prototype.toString.call(t)
            }
            var n = t("./utf8")
              , a = t("./utils")
              , s = t("./stream/GenericWorker")
              , o = t("./stream/StreamHelper")
              , l = t("./defaults")
              , h = t("./compressedObject")
              , u = t("./zipObject")
              , c = t("./generate")
              , f = t("./nodejsUtils")
              , d = t("./nodejs/NodejsStreamInputAdapter")
              , p = function(t, e, r) {
                var i, n = a.getTypeOf(e), o = a.extend(r || {}, l);
                o.date = o.date || new Date,
                null !== o.compression && (o.compression = o.compression.toUpperCase()),
                "string" == typeof o.unixPermissions && (o.unixPermissions = parseInt(o.unixPermissions, 8)),
                o.unixPermissions && 16384 & o.unixPermissions && (o.dir = !0),
                o.dosPermissions && 16 & o.dosPermissions && (o.dir = !0),
                o.dir && (t = m(t)),
                o.createFolders && (i = _(t)) && g.call(this, i, !0);
                var c = "string" === n && o.binary === !1 && o.base64 === !1;
                r && "undefined" != typeof r.binary || (o.binary = !c);
                var p = e instanceof h && 0 === e.uncompressedSize;
                (p || o.dir || !e || 0 === e.length) && (o.base64 = !1,
                o.binary = !0,
                e = "",
                o.compression = "STORE",
                n = "string");
                var y = null;
                y = e instanceof h || e instanceof s ? e : f.isNode && f.isStream(e) ? new d(t,e) : a.prepareContent(t, e, o.binary, o.optimizedBinaryString, o.base64);
                var v = new u(t,y,o);
                this.files[t] = v
            }
              , _ = function(t) {
                "/" === t.slice(-1) && (t = t.substring(0, t.length - 1));
                var e = t.lastIndexOf("/");
                return e > 0 ? t.substring(0, e) : ""
            }
              , m = function(t) {
                return "/" !== t.slice(-1) && (t += "/"),
                t
            }
              , g = function(t, e) {
                return e = "undefined" != typeof e ? e : l.createFolders,
                t = m(t),
                this.files[t] || p.call(this, t, null, {
                    dir: !0,
                    createFolders: e
                }),
                this.files[t]
            }
              , y = {
                load: function() {
                    throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                },
                forEach: function(t) {
                    var e, r, i;
                    for (e in this.files)
                        this.files.hasOwnProperty(e) && (i = this.files[e],
                        r = e.slice(this.root.length, e.length),
                        r && e.slice(0, this.root.length) === this.root && t(r, i))
                },
                filter: function(t) {
                    var e = [];
                    return this.forEach(function(r, i) {
                        t(r, i) && e.push(i)
                    }),
                    e
                },
                file: function(t, e, r) {
                    if (1 === arguments.length) {
                        if (i(t)) {
                            var n = t;
                            return this.filter(function(t, e) {
                                return !e.dir && n.test(t)
                            })
                        }
                        var a = this.files[this.root + t];
                        return a && !a.dir ? a : null
                    }
                    return t = this.root + t,
                    p.call(this, t, e, r),
                    this
                },
                folder: function(t) {
                    if (!t)
                        return this;
                    if (i(t))
                        return this.filter(function(e, r) {
                            return r.dir && t.test(e)
                        });
                    var e = this.root + t
                      , r = g.call(this, e)
                      , n = this.clone();
                    return n.root = r.name,
                    n
                },
                remove: function(t) {
                    t = this.root + t;
                    var e = this.files[t];
                    if (e || ("/" !== t.slice(-1) && (t += "/"),
                    e = this.files[t]),
                    e && !e.dir)
                        delete this.files[t];
                    else
                        for (var r = this.filter(function(e, r) {
                            return r.name.slice(0, t.length) === t
                        }), i = 0; i < r.length; i++)
                            delete this.files[r[i].name];
                    return this
                },
                generate: function(t) {
                    throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                },
                generateInternalStream: function(t) {
                    var e, r = {};
                    try {
                        if (r = a.extend(t || {}, {
                            streamFiles: !1,
                            compression: "STORE",
                            compressionOptions: null,
                            type: "",
                            platform: "DOS",
                            comment: null,
                            mimeType: "application/zip",
                            encodeFileName: n.utf8encode
                        }),
                        r.type = r.type.toLowerCase(),
                        r.compression = r.compression.toUpperCase(),
                        "binarystring" === r.type && (r.type = "string"),
                        !r.type)
                            throw new Error("No output type specified.");
                        a.checkSupport(r.type),
                        ("darwin" === r.platform || "freebsd" === r.platform || "linux" === r.platform || "sunos" === r.platform) && (r.platform = "UNIX"),
                        "win32" === r.platform && (r.platform = "DOS");
                        var i = r.comment || this.comment || "";
                        e = c.generateWorker(this, r, i)
                    } catch (l) {
                        e = new s("error"),
                        e.error(l)
                    }
                    return new o(e,r.type || "string",r.mimeType)
                },
                generateAsync: function(t, e) {
                    return this.generateInternalStream(t).accumulate(e)
                },
                generateNodeStream: function(t, e) {
                    return t = t || {},
                    t.type || (t.type = "nodebuffer"),
                    this.generateInternalStream(t).toNodejsStream(e)
                }
            };
            e.exports = y
        }
        , {
            "./compressedObject": 2,
            "./defaults": 5,
            "./generate": 9,
            "./nodejs/NodejsStreamInputAdapter": 12,
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31,
            "./utils": 32,
            "./zipObject": 35
        }],
        16: [function(t, e, r) {
            e.exports = t("stream")
        }
        , {
            stream: void 0
        }],
        17: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t);
                for (var e = 0; e < this.data.length; e++)
                    t[e] = 255 & t[e]
            }
            var n = t("./DataReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.byteAt = function(t) {
                return this.data[this.zero + t]
            }
            ,
            i.prototype.lastIndexOfSignature = function(t) {
                for (var e = t.charCodeAt(0), r = t.charCodeAt(1), i = t.charCodeAt(2), n = t.charCodeAt(3), a = this.length - 4; a >= 0; --a)
                    if (this.data[a] === e && this.data[a + 1] === r && this.data[a + 2] === i && this.data[a + 3] === n)
                        return a - this.zero;
                return -1
            }
            ,
            i.prototype.readAndCheckSignature = function(t) {
                var e = t.charCodeAt(0)
                  , r = t.charCodeAt(1)
                  , i = t.charCodeAt(2)
                  , n = t.charCodeAt(3)
                  , a = this.readData(4);
                return e === a[0] && r === a[1] && i === a[2] && n === a[3]
            }
            ,
            i.prototype.readData = function(t) {
                if (this.checkOffset(t),
                0 === t)
                    return [];
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./DataReader": 18
        }],
        18: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.data = t,
                this.length = t.length,
                this.index = 0,
                this.zero = 0
            }
            var n = t("../utils");
            i.prototype = {
                checkOffset: function(t) {
                    this.checkIndex(this.index + t)
                },
                checkIndex: function(t) {
                    if (this.length < this.zero + t || 0 > t)
                        throw new Error("End of data reached (data length = " + this.length + ", asked index = " + t + "). Corrupted zip ?")
                },
                setIndex: function(t) {
                    this.checkIndex(t),
                    this.index = t
                },
                skip: function(t) {
                    this.setIndex(this.index + t)
                },
                byteAt: function(t) {},
                readInt: function(t) {
                    var e, r = 0;
                    for (this.checkOffset(t),
                    e = this.index + t - 1; e >= this.index; e--)
                        r = (r << 8) + this.byteAt(e);
                    return this.index += t,
                    r
                },
                readString: function(t) {
                    return n.transformTo("string", this.readData(t))
                },
                readData: function(t) {},
                lastIndexOfSignature: function(t) {},
                readAndCheckSignature: function(t) {},
                readDate: function() {
                    var t = this.readInt(4);
                    return new Date(Date.UTC((t >> 25 & 127) + 1980, (t >> 21 & 15) - 1, t >> 16 & 31, t >> 11 & 31, t >> 5 & 63, (31 & t) << 1))
                }
            },
            e.exports = i
        }
        , {
            "../utils": 32
        }],
        19: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./Uint8ArrayReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.readData = function(t) {
                this.checkOffset(t);
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./Uint8ArrayReader": 21
        }],
        20: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./DataReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.byteAt = function(t) {
                return this.data.charCodeAt(this.zero + t)
            }
            ,
            i.prototype.lastIndexOfSignature = function(t) {
                return this.data.lastIndexOf(t) - this.zero
            }
            ,
            i.prototype.readAndCheckSignature = function(t) {
                var e = this.readData(4);
                return t === e
            }
            ,
            i.prototype.readData = function(t) {
                this.checkOffset(t);
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./DataReader": 18
        }],
        21: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./ArrayReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.readData = function(t) {
                if (this.checkOffset(t),
                0 === t)
                    return new Uint8Array(0);
                var e = this.data.subarray(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./ArrayReader": 17
        }],
        22: [function(t, e, r) {
            "use strict";
            var i = t("../utils")
              , n = t("../support")
              , a = t("./ArrayReader")
              , s = t("./StringReader")
              , o = t("./NodeBufferReader")
              , l = t("./Uint8ArrayReader");
            e.exports = function(t) {
                var e = i.getTypeOf(t);
                return i.checkSupport(e),
                "string" !== e || n.uint8array ? "nodebuffer" === e ? new o(t) : n.uint8array ? new l(i.transformTo("uint8array", t)) : new a(i.transformTo("array", t)) : new s(t)
            }
        }
        , {
            "../support": 30,
            "../utils": 32,
            "./ArrayReader": 17,
            "./NodeBufferReader": 19,
            "./StringReader": 20,
            "./Uint8ArrayReader": 21
        }],
        23: [function(t, e, r) {
            "use strict";
            r.LOCAL_FILE_HEADER = "PK",
            r.CENTRAL_FILE_HEADER = "PK",
            r.CENTRAL_DIRECTORY_END = "PK",
            r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK",
            r.ZIP64_CENTRAL_DIRECTORY_END = "PK",
            r.DATA_DESCRIPTOR = "PK\b"
        }
        , {}],
        24: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, "ConvertWorker to " + t),
                this.destType = t
            }
            var n = t("./GenericWorker")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.processChunk = function(t) {
                this.push({
                    data: a.transformTo(this.destType, t.data),
                    meta: t.meta
                })
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        25: [function(t, e, r) {
            "use strict";
            function i() {
                n.call(this, "Crc32Probe"),
                this.withStreamInfo("crc32", 0)
            }
            var n = t("./GenericWorker")
              , a = t("../crc32")
              , s = t("../utils");
            s.inherits(i, n),
            i.prototype.processChunk = function(t) {
                this.streamInfo.crc32 = a(t.data, this.streamInfo.crc32 || 0),
                this.push(t)
            }
            ,
            e.exports = i
        }
        , {
            "../crc32": 4,
            "../utils": 32,
            "./GenericWorker": 28
        }],
        26: [function(t, e, r) {
            "use strict";
            function i(t) {
                a.call(this, "DataLengthProbe for " + t),
                this.propName = t,
                this.withStreamInfo(t, 0)
            }
            var n = t("../utils")
              , a = t("./GenericWorker");
            n.inherits(i, a),
            i.prototype.processChunk = function(t) {
                if (t) {
                    var e = this.streamInfo[this.propName] || 0;
                    this.streamInfo[this.propName] = e + t.data.length
                }
                a.prototype.processChunk.call(this, t)
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        27: [function(t, e, r) {
            "use strict";
            function i(t) {
                a.call(this, "DataWorker");
                var e = this;
                this.dataIsReady = !1,
                this.index = 0,
                this.max = 0,
                this.data = null,
                this.type = "",
                this._tickScheduled = !1,
                t.then(function(t) {
                    e.dataIsReady = !0,
                    e.data = t,
                    e.max = t && t.length || 0,
                    e.type = n.getTypeOf(t),
                    e.isPaused || e._tickAndRepeat()
                }, function(t) {
                    e.error(t)
                })
            }
            var n = t("../utils")
              , a = t("./GenericWorker")
              , s = 16384;
            n.inherits(i, a),
            i.prototype.cleanUp = function() {
                a.prototype.cleanUp.call(this),
                this.data = null
            }
            ,
            i.prototype.resume = function() {
                return a.prototype.resume.call(this) ? (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0,
                n.delay(this._tickAndRepeat, [], this)),
                !0) : !1
            }
            ,
            i.prototype._tickAndRepeat = function() {
                this._tickScheduled = !1,
                this.isPaused || this.isFinished || (this._tick(),
                this.isFinished || (n.delay(this._tickAndRepeat, [], this),
                this._tickScheduled = !0))
            }
            ,
            i.prototype._tick = function() {
                if (this.isPaused || this.isFinished)
                    return !1;
                var t = s
                  , e = null
                  , r = Math.min(this.max, this.index + t);
                if (this.index >= this.max)
                    return this.end();
                switch (this.type) {
                case "string":
                    e = this.data.substring(this.index, r);
                    break;
                case "uint8array":
                    e = this.data.subarray(this.index, r);
                    break;
                case "array":
                case "nodebuffer":
                    e = this.data.slice(this.index, r)
                }
                return this.index = r,
                this.push({
                    data: e,
                    meta: {
                        percent: this.max ? this.index / this.max * 100 : 0
                    }
                })
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        28: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.name = t || "default",
                this.streamInfo = {},
                this.generatedError = null,
                this.extraStreamInfo = {},
                this.isPaused = !0,
                this.isFinished = !1,
                this.isLocked = !1,
                this._listeners = {
                    data: [],
                    end: [],
                    error: []
                },
                this.previous = null
            }
            i.prototype = {
                push: function(t) {
                    this.emit("data", t)
                },
                end: function() {
                    if (this.isFinished)
                        return !1;
                    this.flush();
                    try {
                        this.emit("end"),
                        this.cleanUp(),
                        this.isFinished = !0
                    } catch (t) {
                        this.emit("error", t)
                    }
                    return !0
                },
                error: function(t) {
                    return this.isFinished ? !1 : (this.isPaused ? this.generatedError = t : (this.isFinished = !0,
                    this.emit("error", t),
                    this.previous && this.previous.error(t),
                    this.cleanUp()),
                    !0)
                },
                on: function(t, e) {
                    return this._listeners[t].push(e),
                    this
                },
                cleanUp: function() {
                    this.streamInfo = this.generatedError = this.extraStreamInfo = null,
                    this._listeners = []
                },
                emit: function(t, e) {
                    if (this._listeners[t])
                        for (var r = 0; r < this._listeners[t].length; r++)
                            this._listeners[t][r].call(this, e)
                },
                pipe: function(t) {
                    return t.registerPrevious(this)
                },
                registerPrevious: function(t) {
                    if (this.isLocked)
                        throw new Error("The stream '" + this + "' has already been used.");
                    this.streamInfo = t.streamInfo,
                    this.mergeStreamInfo(),
                    this.previous = t;
                    var e = this;
                    return t.on("data", function(t) {
                        e.processChunk(t)
                    }),
                    t.on("end", function() {
                        e.end()
                    }),
                    t.on("error", function(t) {
                        e.error(t)
                    }),
                    this
                },
                pause: function() {
                    return this.isPaused || this.isFinished ? !1 : (this.isPaused = !0,
                    this.previous && this.previous.pause(),
                    !0)
                },
                resume: function() {
                    if (!this.isPaused || this.isFinished)
                        return !1;
                    this.isPaused = !1;
                    var t = !1;
                    return this.generatedError && (this.error(this.generatedError),
                    t = !0),
                    this.previous && this.previous.resume(),
                    !t
                },
                flush: function() {},
                processChunk: function(t) {
                    this.push(t)
                },
                withStreamInfo: function(t, e) {
                    return this.extraStreamInfo[t] = e,
                    this.mergeStreamInfo(),
                    this
                },
                mergeStreamInfo: function() {
                    for (var t in this.extraStreamInfo)
                        this.extraStreamInfo.hasOwnProperty(t) && (this.streamInfo[t] = this.extraStreamInfo[t])
                },
                lock: function() {
                    if (this.isLocked)
                        throw new Error("The stream '" + this + "' has already been used.");
                    this.isLocked = !0,
                    this.previous && this.previous.lock()
                },
                toString: function() {
                    var t = "Worker " + this.name;
                    return this.previous ? this.previous + " -> " + t : t
                }
            },
            e.exports = i
        }
        , {}],
        29: [function(t, e, r) {
            "use strict";
            function i(t, e, r) {
                switch (t) {
                case "blob":
                    return o.newBlob(o.transformTo("arraybuffer", e), r);
                case "base64":
                    return u.encode(e);
                default:
                    return o.transformTo(t, e)
                }
            }
            function n(t, e) {
                var r, i = 0, n = null, a = 0;
                for (r = 0; r < e.length; r++)
                    a += e[r].length;
                switch (t) {
                case "string":
                    return e.join("");
                case "array":
                    return Array.prototype.concat.apply([], e);
                case "uint8array":
                    for (n = new Uint8Array(a),
                    r = 0; r < e.length; r++)
                        n.set(e[r], i),
                        i += e[r].length;
                    return n;
                case "nodebuffer":
                    return Buffer.concat(e);
                default:
                    throw new Error("concat : unsupported type '" + t + "'")
                }
            }
            function a(t, e) {
                return new f.Promise(function(r, a) {
                    var s = []
                      , o = t._internalType
                      , l = t._outputType
                      , h = t._mimeType;
                    t.on("data", function(t, r) {
                        s.push(t),
                        e && e(r)
                    }).on("error", function(t) {
                        s = [],
                        a(t)
                    }).on("end", function() {
                        try {
                            var t = i(l, n(o, s), h);
                            r(t)
                        } catch (e) {
                            a(e)
                        }
                        s = []
                    }).resume()
                }
                )
            }
            function s(t, e, r) {
                var i = e;
                switch (e) {
                case "blob":
                case "arraybuffer":
                    i = "uint8array";
                    break;
                case "base64":
                    i = "string"
                }
                try {
                    this._internalType = i,
                    this._outputType = e,
                    this._mimeType = r,
                    o.checkSupport(i),
                    this._worker = t.pipe(new l(i)),
                    t.lock()
                } catch (n) {
                    this._worker = new h("error"),
                    this._worker.error(n)
                }
            }
            var o = t("../utils")
              , l = t("./ConvertWorker")
              , h = t("./GenericWorker")
              , u = t("../base64")
              , c = t("../support")
              , f = t("../external")
              , d = null;
            if (c.nodestream)
                try {
                    d = t("../nodejs/NodejsStreamOutputAdapter")
                } catch (p) {}
            s.prototype = {
                accumulate: function(t) {
                    return a(this, t)
                },
                on: function(t, e) {
                    var r = this;
                    return "data" === t ? this._worker.on(t, function(t) {
                        e.call(r, t.data, t.meta)
                    }) : this._worker.on(t, function() {
                        o.delay(e, arguments, r)
                    }),
                    this
                },
                resume: function() {
                    return o.delay(this._worker.resume, [], this._worker),
                    this
                },
                pause: function() {
                    return this._worker.pause(),
                    this
                },
                toNodejsStream: function(t) {
                    if (o.checkSupport("nodestream"),
                    "nodebuffer" !== this._outputType)
                        throw new Error(this._outputType + " is not supported by this method");
                    return new d(this,{
                        objectMode: "nodebuffer" !== this._outputType
                    },t)
                }
            },
            e.exports = s
        }
        , {
            "../base64": 1,
            "../external": 6,
            "../nodejs/NodejsStreamOutputAdapter": 13,
            "../support": 30,
            "../utils": 32,
            "./ConvertWorker": 24,
            "./GenericWorker": 28
        }],
        30: [function(t, e, r) {
            "use strict";
            if (r.base64 = !0,
            r.array = !0,
            r.string = !0,
            r.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array,
            r.nodebuffer = "undefined" != typeof Buffer,
            r.uint8array = "undefined" != typeof Uint8Array,
            "undefined" == typeof ArrayBuffer)
                r.blob = !1;
            else {
                var i = new ArrayBuffer(0);
                try {
                    r.blob = 0 === new Blob([i],{
                        type: "application/zip"
                    }).size
                } catch (n) {
                    try {
                        var a = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder
                          , s = new a;
                        s.append(i),
                        r.blob = 0 === s.getBlob("application/zip").size
                    } catch (n) {
                        r.blob = !1
                    }
                }
            }
            try {
                r.nodestream = !!t("readable-stream").Readable
            } catch (n) {
                r.nodestream = !1
            }
        }
        , {
            "readable-stream": 16
        }],
        31: [function(t, e, r) {
            "use strict";
            function i() {
                l.call(this, "utf-8 decode"),
                this.leftOver = null
            }
            function n() {
                l.call(this, "utf-8 encode")
            }
            for (var a = t("./utils"), s = t("./support"), o = t("./nodejsUtils"), l = t("./stream/GenericWorker"), h = new Array(256), u = 0; 256 > u; u++)
                h[u] = u >= 252 ? 6 : u >= 248 ? 5 : u >= 240 ? 4 : u >= 224 ? 3 : u >= 192 ? 2 : 1;
            h[254] = h[254] = 1;
            var c = function(t) {
                var e, r, i, n, a, o = t.length, l = 0;
                for (n = 0; o > n; n++)
                    r = t.charCodeAt(n),
                    55296 === (64512 & r) && o > n + 1 && (i = t.charCodeAt(n + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    n++)),
                    l += 128 > r ? 1 : 2048 > r ? 2 : 65536 > r ? 3 : 4;
                for (e = s.uint8array ? new Uint8Array(l) : new Array(l),
                a = 0,
                n = 0; l > a; n++)
                    r = t.charCodeAt(n),
                    55296 === (64512 & r) && o > n + 1 && (i = t.charCodeAt(n + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    n++)),
                    128 > r ? e[a++] = r : 2048 > r ? (e[a++] = 192 | r >>> 6,
                    e[a++] = 128 | 63 & r) : 65536 > r ? (e[a++] = 224 | r >>> 12,
                    e[a++] = 128 | r >>> 6 & 63,
                    e[a++] = 128 | 63 & r) : (e[a++] = 240 | r >>> 18,
                    e[a++] = 128 | r >>> 12 & 63,
                    e[a++] = 128 | r >>> 6 & 63,
                    e[a++] = 128 | 63 & r);
                return e
            }
              , f = function(t, e) {
                var r;
                for (e = e || t.length,
                e > t.length && (e = t.length),
                r = e - 1; r >= 0 && 128 === (192 & t[r]); )
                    r--;
                return 0 > r ? e : 0 === r ? e : r + h[t[r]] > e ? r : e
            }
              , d = function(t) {
                var e, r, i, n, s = t.length, o = new Array(2 * s);
                for (r = 0,
                e = 0; s > e; )
                    if (i = t[e++],
                    128 > i)
                        o[r++] = i;
                    else if (n = h[i],
                    n > 4)
                        o[r++] = 65533,
                        e += n - 1;
                    else {
                        for (i &= 2 === n ? 31 : 3 === n ? 15 : 7; n > 1 && s > e; )
                            i = i << 6 | 63 & t[e++],
                            n--;
                        n > 1 ? o[r++] = 65533 : 65536 > i ? o[r++] = i : (i -= 65536,
                        o[r++] = 55296 | i >> 10 & 1023,
                        o[r++] = 56320 | 1023 & i)
                    }
                return o.length !== r && (o.subarray ? o = o.subarray(0, r) : o.length = r),
                a.applyFromCharCode(o)
            };
            r.utf8encode = function(t) {
                return s.nodebuffer ? o.newBufferFrom(t, "utf-8") : c(t)
            }
            ,
            r.utf8decode = function(t) {
                return s.nodebuffer ? a.transformTo("nodebuffer", t).toString("utf-8") : (t = a.transformTo(s.uint8array ? "uint8array" : "array", t),
                d(t))
            }
            ,
            a.inherits(i, l),
            i.prototype.processChunk = function(t) {
                var e = a.transformTo(s.uint8array ? "uint8array" : "array", t.data);
                if (this.leftOver && this.leftOver.length) {
                    if (s.uint8array) {
                        var i = e;
                        e = new Uint8Array(i.length + this.leftOver.length),
                        e.set(this.leftOver, 0),
                        e.set(i, this.leftOver.length)
                    } else
                        e = this.leftOver.concat(e);
                    this.leftOver = null
                }
                var n = f(e)
                  , o = e;
                n !== e.length && (s.uint8array ? (o = e.subarray(0, n),
                this.leftOver = e.subarray(n, e.length)) : (o = e.slice(0, n),
                this.leftOver = e.slice(n, e.length))),
                this.push({
                    data: r.utf8decode(o),
                    meta: t.meta
                })
            }
            ,
            i.prototype.flush = function() {
                this.leftOver && this.leftOver.length && (this.push({
                    data: r.utf8decode(this.leftOver),
                    meta: {}
                }),
                this.leftOver = null)
            }
            ,
            r.Utf8DecodeWorker = i,
            a.inherits(n, l),
            n.prototype.processChunk = function(t) {
                this.push({
                    data: r.utf8encode(t.data),
                    meta: t.meta
                })
            }
            ,
            r.Utf8EncodeWorker = n
        }
        , {
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./support": 30,
            "./utils": 32
        }],
        32: [function(t, e, r) {
            "use strict";
            function i(t) {
                var e = null;
                return e = l.uint8array ? new Uint8Array(t.length) : new Array(t.length),
                a(t, e)
            }
            function n(t) {
                return t
            }
            function a(t, e) {
                for (var r = 0; r < t.length; ++r)
                    e[r] = 255 & t.charCodeAt(r);
                return e
            }
            function s(t) {
                var e = 65536
                  , i = r.getTypeOf(t)
                  , n = !0;
                if ("uint8array" === i ? n = d.applyCanBeUsed.uint8array : "nodebuffer" === i && (n = d.applyCanBeUsed.nodebuffer),
                n)
                    for (; e > 1; )
                        try {
                            return d.stringifyByChunk(t, i, e)
                        } catch (a) {
                            e = Math.floor(e / 2)
                        }
                return d.stringifyByChar(t)
            }
            function o(t, e) {
                for (var r = 0; r < t.length; r++)
                    e[r] = t[r];
                return e
            }
            var l = t("./support")
              , h = t("./base64")
              , u = t("./nodejsUtils")
              , c = t("core-js/library/fn/set-immediate")
              , f = t("./external");
            r.newBlob = function(t, e) {
                r.checkSupport("blob");
                try {
                    return new Blob([t],{
                        type: e
                    })
                } catch (i) {
                    try {
                        var n = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder
                          , a = new n;
                        return a.append(t),
                        a.getBlob(e)
                    } catch (i) {
                        throw new Error("Bug : can't construct the Blob.")
                    }
                }
            }
            ;
            var d = {
                stringifyByChunk: function(t, e, r) {
                    var i = []
                      , n = 0
                      , a = t.length;
                    if (r >= a)
                        return String.fromCharCode.apply(null, t);
                    for (; a > n; )
                        "array" === e || "nodebuffer" === e ? i.push(String.fromCharCode.apply(null, t.slice(n, Math.min(n + r, a)))) : i.push(String.fromCharCode.apply(null, t.subarray(n, Math.min(n + r, a)))),
                        n += r;
                    return i.join("")
                },
                stringifyByChar: function(t) {
                    for (var e = "", r = 0; r < t.length; r++)
                        e += String.fromCharCode(t[r]);
                    return e
                },
                applyCanBeUsed: {
                    uint8array: function() {
                        try {
                            return l.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length
                        } catch (t) {
                            return !1
                        }
                    }(),
                    nodebuffer: function() {
                        try {
                            return l.nodebuffer && 1 === String.fromCharCode.apply(null, u.allocBuffer(1)).length
                        } catch (t) {
                            return !1
                        }
                    }()
                }
            };
            r.applyFromCharCode = s;
            var p = {};
            p.string = {
                string: n,
                array: function(t) {
                    return a(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return p.string.uint8array(t).buffer
                },
                uint8array: function(t) {
                    return a(t, new Uint8Array(t.length))
                },
                nodebuffer: function(t) {
                    return a(t, u.allocBuffer(t.length))
                }
            },
            p.array = {
                string: s,
                array: n,
                arraybuffer: function(t) {
                    return new Uint8Array(t).buffer
                },
                uint8array: function(t) {
                    return new Uint8Array(t)
                },
                nodebuffer: function(t) {
                    return u.newBufferFrom(t)
                }
            },
            p.arraybuffer = {
                string: function(t) {
                    return s(new Uint8Array(t))
                },
                array: function(t) {
                    return o(new Uint8Array(t), new Array(t.byteLength))
                },
                arraybuffer: n,
                uint8array: function(t) {
                    return new Uint8Array(t)
                },
                nodebuffer: function(t) {
                    return u.newBufferFrom(new Uint8Array(t))
                }
            },
            p.uint8array = {
                string: s,
                array: function(t) {
                    return o(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return t.buffer
                },
                uint8array: n,
                nodebuffer: function(t) {
                    return u.newBufferFrom(t)
                }
            },
            p.nodebuffer = {
                string: s,
                array: function(t) {
                    return o(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return p.nodebuffer.uint8array(t).buffer
                },
                uint8array: function(t) {
                    return o(t, new Uint8Array(t.length))
                },
                nodebuffer: n
            },
            r.transformTo = function(t, e) {
                if (e || (e = ""),
                !t)
                    return e;
                r.checkSupport(t);
                var i = r.getTypeOf(e)
                  , n = p[i][t](e);
                return n
            }
            ,
            r.getTypeOf = function(t) {
                return "string" == typeof t ? "string" : "[object Array]" === Object.prototype.toString.call(t) ? "array" : l.nodebuffer && u.isBuffer(t) ? "nodebuffer" : l.uint8array && t instanceof Uint8Array ? "uint8array" : l.arraybuffer && t instanceof ArrayBuffer ? "arraybuffer" : void 0
            }
            ,
            r.checkSupport = function(t) {
                var e = l[t.toLowerCase()];
                if (!e)
                    throw new Error(t + " is not supported by this platform")
            }
            ,
            r.MAX_VALUE_16BITS = 65535,
            r.MAX_VALUE_32BITS = -1,
            r.pretty = function(t) {
                var e, r, i = "";
                for (r = 0; r < (t || "").length; r++)
                    e = t.charCodeAt(r),
                    i += "\\x" + (16 > e ? "0" : "") + e.toString(16).toUpperCase();
                return i
            }
            ,
            r.delay = function(t, e, r) {
                c(function() {
                    t.apply(r || null, e || [])
                })
            }
            ,
            r.inherits = function(t, e) {
                var r = function() {};
                r.prototype = e.prototype,
                t.prototype = new r
            }
            ,
            r.extend = function() {
                var t, e, r = {};
                for (t = 0; t < arguments.length; t++)
                    for (e in arguments[t])
                        arguments[t].hasOwnProperty(e) && "undefined" == typeof r[e] && (r[e] = arguments[t][e]);
                return r
            }
            ,
            r.prepareContent = function(t, e, n, a, s) {
                var o = f.Promise.resolve(e).then(function(t) {
                    var e = l.blob && (t instanceof Blob || -1 !== ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(t)));
                    return e && "undefined" != typeof FileReader ? new f.Promise(function(e, r) {
                        var i = new FileReader;
                        i.onload = function(t) {
                            e(t.target.result)
                        }
                        ,
                        i.onerror = function(t) {
                            r(t.target.error)
                        }
                        ,
                        i.readAsArrayBuffer(t)
                    }
                    ) : t
                });
                return o.then(function(e) {
                    var o = r.getTypeOf(e);
                    return o ? ("arraybuffer" === o ? e = r.transformTo("uint8array", e) : "string" === o && (s ? e = h.decode(e) : n && a !== !0 && (e = i(e))),
                    e) : f.Promise.reject(new Error("Can't read the data of '" + t + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))
                })
            }
        }
        , {
            "./base64": 1,
            "./external": 6,
            "./nodejsUtils": 14,
            "./support": 30,
            "core-js/library/fn/set-immediate": 36
        }],
        33: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.files = [],
                this.loadOptions = t
            }
            var n = t("./reader/readerFor")
              , a = t("./utils")
              , s = t("./signature")
              , o = t("./zipEntry")
              , l = (t("./utf8"),
            t("./support"));
            i.prototype = {
                checkSignature: function(t) {
                    if (!this.reader.readAndCheckSignature(t)) {
                        this.reader.index -= 4;
                        var e = this.reader.readString(4);
                        throw new Error("Corrupted zip or bug: unexpected signature (" + a.pretty(e) + ", expected " + a.pretty(t) + ")")
                    }
                },
                isSignature: function(t, e) {
                    var r = this.reader.index;
                    this.reader.setIndex(t);
                    var i = this.reader.readString(4)
                      , n = i === e;
                    return this.reader.setIndex(r),
                    n
                },
                readBlockEndOfCentral: function() {
                    this.diskNumber = this.reader.readInt(2),
                    this.diskWithCentralDirStart = this.reader.readInt(2),
                    this.centralDirRecordsOnThisDisk = this.reader.readInt(2),
                    this.centralDirRecords = this.reader.readInt(2),
                    this.centralDirSize = this.reader.readInt(4),
                    this.centralDirOffset = this.reader.readInt(4),
                    this.zipCommentLength = this.reader.readInt(2);
                    var t = this.reader.readData(this.zipCommentLength)
                      , e = l.uint8array ? "uint8array" : "array"
                      , r = a.transformTo(e, t);
                    this.zipComment = this.loadOptions.decodeFileName(r)
                },
                readBlockZip64EndOfCentral: function() {
                    this.zip64EndOfCentralSize = this.reader.readInt(8),
                    this.reader.skip(4),
                    this.diskNumber = this.reader.readInt(4),
                    this.diskWithCentralDirStart = this.reader.readInt(4),
                    this.centralDirRecordsOnThisDisk = this.reader.readInt(8),
                    this.centralDirRecords = this.reader.readInt(8),
                    this.centralDirSize = this.reader.readInt(8),
                    this.centralDirOffset = this.reader.readInt(8),
                    this.zip64ExtensibleData = {};
                    for (var t, e, r, i = this.zip64EndOfCentralSize - 44, n = 0; i > n; )
                        t = this.reader.readInt(2),
                        e = this.reader.readInt(4),
                        r = this.reader.readData(e),
                        this.zip64ExtensibleData[t] = {
                            id: t,
                            length: e,
                            value: r
                        }
                },
                readBlockZip64EndOfCentralLocator: function() {
                    if (this.diskWithZip64CentralDirStart = this.reader.readInt(4),
                    this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8),
                    this.disksCount = this.reader.readInt(4),
                    this.disksCount > 1)
                        throw new Error("Multi-volumes zip are not supported")
                },
                readLocalFiles: function() {
                    var t, e;
                    for (t = 0; t < this.files.length; t++)
                        e = this.files[t],
                        this.reader.setIndex(e.localHeaderOffset),
                        this.checkSignature(s.LOCAL_FILE_HEADER),
                        e.readLocalPart(this.reader),
                        e.handleUTF8(),
                        e.processAttributes()
                },
                readCentralDir: function() {
                    var t;
                    for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); )
                        t = new o({
                            zip64: this.zip64
                        },this.loadOptions),
                        t.readCentralPart(this.reader),
                        this.files.push(t);
                    if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length)
                        throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length)
                },
                readEndOfCentral: function() {
                    var t = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
                    if (0 > t) {
                        var e = !this.isSignature(0, s.LOCAL_FILE_HEADER);
                        throw e ? new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : new Error("Corrupted zip: can't find end of central directory")
                    }
                    this.reader.setIndex(t);
                    var r = t;
                    if (this.checkSignature(s.CENTRAL_DIRECTORY_END),
                    this.readBlockEndOfCentral(),
                    this.diskNumber === a.MAX_VALUE_16BITS || this.diskWithCentralDirStart === a.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === a.MAX_VALUE_16BITS || this.centralDirRecords === a.MAX_VALUE_16BITS || this.centralDirSize === a.MAX_VALUE_32BITS || this.centralDirOffset === a.MAX_VALUE_32BITS) {
                        if (this.zip64 = !0,
                        t = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                        0 > t)
                            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                        if (this.reader.setIndex(t),
                        this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                        this.readBlockZip64EndOfCentralLocator(),
                        !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),
                        this.relativeOffsetEndOfZip64CentralDir < 0))
                            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
                        this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),
                        this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),
                        this.readBlockZip64EndOfCentral()
                    }
                    var i = this.centralDirOffset + this.centralDirSize;
                    this.zip64 && (i += 20,
                    i += 12 + this.zip64EndOfCentralSize);
                    var n = r - i;
                    if (n > 0)
                        this.isSignature(r, s.CENTRAL_FILE_HEADER) || (this.reader.zero = n);
                    else if (0 > n)
                        throw new Error("Corrupted zip: missing " + Math.abs(n) + " bytes.")
                },
                prepareReader: function(t) {
                    this.reader = n(t)
                },
                load: function(t) {
                    this.prepareReader(t),
                    this.readEndOfCentral(),
                    this.readCentralDir(),
                    this.readLocalFiles()
                }
            },
            e.exports = i
        }
        , {
            "./reader/readerFor": 22,
            "./signature": 23,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntry": 34
        }],
        34: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                this.options = t,
                this.loadOptions = e
            }
            var n = t("./reader/readerFor")
              , a = t("./utils")
              , s = t("./compressedObject")
              , o = t("./crc32")
              , l = t("./utf8")
              , h = t("./compressions")
              , u = t("./support")
              , c = 0
              , f = 3
              , d = function(t) {
                for (var e in h)
                    if (h.hasOwnProperty(e) && h[e].magic === t)
                        return h[e];
                return null
            };
            i.prototype = {
                isEncrypted: function() {
                    return 1 === (1 & this.bitFlag)
                },
                useUTF8: function() {
                    return 2048 === (2048 & this.bitFlag)
                },
                readLocalPart: function(t) {
                    var e, r;
                    if (t.skip(22),
                    this.fileNameLength = t.readInt(2),
                    r = t.readInt(2),
                    this.fileName = t.readData(this.fileNameLength),
                    t.skip(r),
                    -1 === this.compressedSize || -1 === this.uncompressedSize)
                        throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");
                    if (e = d(this.compressionMethod),
                    null === e)
                        throw new Error("Corrupted zip : compression " + a.pretty(this.compressionMethod) + " unknown (inner file : " + a.transformTo("string", this.fileName) + ")");
                    this.decompressed = new s(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))
                },
                readCentralPart: function(t) {
                    this.versionMadeBy = t.readInt(2),
                    t.skip(2),
                    this.bitFlag = t.readInt(2),
                    this.compressionMethod = t.readString(2),
                    this.date = t.readDate(),
                    this.crc32 = t.readInt(4),
                    this.compressedSize = t.readInt(4),
                    this.uncompressedSize = t.readInt(4);
                    var e = t.readInt(2);
                    if (this.extraFieldsLength = t.readInt(2),
                    this.fileCommentLength = t.readInt(2),
                    this.diskNumberStart = t.readInt(2),
                    this.internalFileAttributes = t.readInt(2),
                    this.externalFileAttributes = t.readInt(4),
                    this.localHeaderOffset = t.readInt(4),
                    this.isEncrypted())
                        throw new Error("Encrypted zip are not supported");
                    t.skip(e),
                    this.readExtraFields(t),
                    this.parseZIP64ExtraField(t),
                    this.fileComment = t.readData(this.fileCommentLength)
                },
                processAttributes: function() {
                    this.unixPermissions = null,
                    this.dosPermissions = null;
                    var t = this.versionMadeBy >> 8;
                    this.dir = 16 & this.externalFileAttributes ? !0 : !1,
                    t === c && (this.dosPermissions = 63 & this.externalFileAttributes),
                    t === f && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535),
                    this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0)
                },
                parseZIP64ExtraField: function(t) {
                    if (this.extraFields[1]) {
                        var e = n(this.extraFields[1].value);
                        this.uncompressedSize === a.MAX_VALUE_32BITS && (this.uncompressedSize = e.readInt(8)),
                        this.compressedSize === a.MAX_VALUE_32BITS && (this.compressedSize = e.readInt(8)),
                        this.localHeaderOffset === a.MAX_VALUE_32BITS && (this.localHeaderOffset = e.readInt(8)),
                        this.diskNumberStart === a.MAX_VALUE_32BITS && (this.diskNumberStart = e.readInt(4))
                    }
                },
                readExtraFields: function(t) {
                    var e, r, i, n = t.index + this.extraFieldsLength;
                    for (this.extraFields || (this.extraFields = {}); t.index < n; )
                        e = t.readInt(2),
                        r = t.readInt(2),
                        i = t.readData(r),
                        this.extraFields[e] = {
                            id: e,
                            length: r,
                            value: i
                        }
                },
                handleUTF8: function() {
                    var t = u.uint8array ? "uint8array" : "array";
                    if (this.useUTF8())
                        this.fileNameStr = l.utf8decode(this.fileName),
                        this.fileCommentStr = l.utf8decode(this.fileComment);
                    else {
                        var e = this.findExtraFieldUnicodePath();
                        if (null !== e)
                            this.fileNameStr = e;
                        else {
                            var r = a.transformTo(t, this.fileName);
                            this.fileNameStr = this.loadOptions.decodeFileName(r)
                        }
                        var i = this.findExtraFieldUnicodeComment();
                        if (null !== i)
                            this.fileCommentStr = i;
                        else {
                            var n = a.transformTo(t, this.fileComment);
                            this.fileCommentStr = this.loadOptions.decodeFileName(n)
                        }
                    }
                },
                findExtraFieldUnicodePath: function() {
                    var t = this.extraFields[28789];
                    if (t) {
                        var e = n(t.value);
                        return 1 !== e.readInt(1) ? null : o(this.fileName) !== e.readInt(4) ? null : l.utf8decode(e.readData(t.length - 5))
                    }
                    return null
                },
                findExtraFieldUnicodeComment: function() {
                    var t = this.extraFields[25461];
                    if (t) {
                        var e = n(t.value);
                        return 1 !== e.readInt(1) ? null : o(this.fileComment) !== e.readInt(4) ? null : l.utf8decode(e.readData(t.length - 5))
                    }
                    return null
                }
            },
            e.exports = i
        }
        , {
            "./compressedObject": 2,
            "./compressions": 3,
            "./crc32": 4,
            "./reader/readerFor": 22,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32
        }],
        35: [function(t, e, r) {
            "use strict";
            var i = t("./stream/StreamHelper")
              , n = t("./stream/DataWorker")
              , a = t("./utf8")
              , s = t("./compressedObject")
              , o = t("./stream/GenericWorker")
              , l = function(t, e, r) {
                this.name = t,
                this.dir = r.dir,
                this.date = r.date,
                this.comment = r.comment,
                this.unixPermissions = r.unixPermissions,
                this.dosPermissions = r.dosPermissions,
                this._data = e,
                this._dataBinary = r.binary,
                this.options = {
                    compression: r.compression,
                    compressionOptions: r.compressionOptions
                }
            };
            l.prototype = {
                internalStream: function(t) {
                    var e = null
                      , r = "string";
                    try {
                        if (!t)
                            throw new Error("No output type specified.");
                        r = t.toLowerCase();
                        var n = "string" === r || "text" === r;
                        ("binarystring" === r || "text" === r) && (r = "string"),
                        e = this._decompressWorker();
                        var s = !this._dataBinary;
                        s && !n && (e = e.pipe(new a.Utf8EncodeWorker)),
                        !s && n && (e = e.pipe(new a.Utf8DecodeWorker))
                    } catch (l) {
                        e = new o("error"),
                        e.error(l)
                    }
                    return new i(e,r,"")
                },
                async: function(t, e) {
                    return this.internalStream(t).accumulate(e)
                },
                nodeStream: function(t, e) {
                    return this.internalStream(t || "nodebuffer").toNodejsStream(e)
                },
                _compressWorker: function(t, e) {
                    if (this._data instanceof s && this._data.compression.magic === t.magic)
                        return this._data.getCompressedWorker();
                    var r = this._decompressWorker();
                    return this._dataBinary || (r = r.pipe(new a.Utf8EncodeWorker)),
                    s.createWorkerFrom(r, t, e)
                },
                _decompressWorker: function() {
                    return this._data instanceof s ? this._data.getContentWorker() : this._data instanceof o ? this._data : new n(this._data)
                }
            };
            for (var h = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], u = function() {
                throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
            }, c = 0; c < h.length; c++)
                l.prototype[h[c]] = u;
            e.exports = l
        }
        , {
            "./compressedObject": 2,
            "./stream/DataWorker": 27,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31
        }],
        36: [function(t, e, r) {
            t("../modules/web.immediate"),
            e.exports = t("../modules/_core").setImmediate
        }
        , {
            "../modules/_core": 40,
            "../modules/web.immediate": 56
        }],
        37: [function(t, e, r) {
            e.exports = function(t) {
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function!");
                return t
            }
        }
        , {}],
        38: [function(t, e, r) {
            var i = t("./_is-object");
            e.exports = function(t) {
                if (!i(t))
                    throw TypeError(t + " is not an object!");
                return t
            }
        }
        , {
            "./_is-object": 51
        }],
        39: [function(t, e, r) {
            var i = {}.toString;
            e.exports = function(t) {
                return i.call(t).slice(8, -1)
            }
        }
        , {}],
        40: [function(t, e, r) {
            var i = e.exports = {
                version: "2.3.0"
            };
            "number" == typeof __e && (__e = i)
        }
        , {}],
        41: [function(t, e, r) {
            var i = t("./_a-function");
            e.exports = function(t, e, r) {
                if (i(t),
                void 0 === e)
                    return t;
                switch (r) {
                case 1:
                    return function(r) {
                        return t.call(e, r)
                    }
                    ;
                case 2:
                    return function(r, i) {
                        return t.call(e, r, i)
                    }
                    ;
                case 3:
                    return function(r, i, n) {
                        return t.call(e, r, i, n)
                    }
                }
                return function() {
                    return t.apply(e, arguments)
                }
            }
        }
        , {
            "./_a-function": 37
        }],
        42: [function(t, e, r) {
            e.exports = !t("./_fails")(function() {
                return 7 != Object.defineProperty({}, "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }
        , {
            "./_fails": 45
        }],
        43: [function(t, e, r) {
            var i = t("./_is-object")
              , n = t("./_global").document
              , a = i(n) && i(n.createElement);
            e.exports = function(t) {
                return a ? n.createElement(t) : {}
            }
        }
        , {
            "./_global": 46,
            "./_is-object": 51
        }],
        44: [function(t, e, r) {
            var i = t("./_global")
              , n = t("./_core")
              , a = t("./_ctx")
              , s = t("./_hide")
              , o = "prototype"
              , l = function(t, e, r) {
                var h, u, c, f = t & l.F, d = t & l.G, p = t & l.S, _ = t & l.P, m = t & l.B, g = t & l.W, y = d ? n : n[e] || (n[e] = {}), v = y[o], b = d ? i : p ? i[e] : (i[e] || {})[o];
                d && (r = e);
                for (h in r)
                    u = !f && b && void 0 !== b[h],
                    u && h in y || (c = u ? b[h] : r[h],
                    y[h] = d && "function" != typeof b[h] ? r[h] : m && u ? a(c, i) : g && b[h] == c ? function(t) {
                        var e = function(e, r, i) {
                            if (this instanceof t) {
                                switch (arguments.length) {
                                case 0:
                                    return new t;
                                case 1:
                                    return new t(e);
                                case 2:
                                    return new t(e,r)
                                }
                                return new t(e,r,i)
                            }
                            return t.apply(this, arguments)
                        };
                        return e[o] = t[o],
                        e
                    }(c) : _ && "function" == typeof c ? a(Function.call, c) : c,
                    _ && ((y.virtual || (y.virtual = {}))[h] = c,
                    t & l.R && v && !v[h] && s(v, h, c)))
            };
            l.F = 1,
            l.G = 2,
            l.S = 4,
            l.P = 8,
            l.B = 16,
            l.W = 32,
            l.U = 64,
            l.R = 128,
            e.exports = l
        }
        , {
            "./_core": 40,
            "./_ctx": 41,
            "./_global": 46,
            "./_hide": 47
        }],
        45: [function(t, e, r) {
            e.exports = function(t) {
                try {
                    return !!t()
                } catch (e) {
                    return !0
                }
            }
        }
        , {}],
        46: [function(t, e, r) {
            var i = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = i)
        }
        , {}],
        47: [function(t, e, r) {
            var i = t("./_object-dp")
              , n = t("./_property-desc");
            e.exports = t("./_descriptors") ? function(t, e, r) {
                return i.f(t, e, n(1, r))
            }
            : function(t, e, r) {
                return t[e] = r,
                t
            }
        }
        , {
            "./_descriptors": 42,
            "./_object-dp": 52,
            "./_property-desc": 53
        }],
        48: [function(t, e, r) {
            e.exports = t("./_global").document && document.documentElement
        }
        , {
            "./_global": 46
        }],
        49: [function(t, e, r) {
            e.exports = !t("./_descriptors") && !t("./_fails")(function() {
                return 7 != Object.defineProperty(t("./_dom-create")("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }
        , {
            "./_descriptors": 42,
            "./_dom-create": 43,
            "./_fails": 45
        }],
        50: [function(t, e, r) {
            e.exports = function(t, e, r) {
                var i = void 0 === r;
                switch (e.length) {
                case 0:
                    return i ? t() : t.call(r);
                case 1:
                    return i ? t(e[0]) : t.call(r, e[0]);
                case 2:
                    return i ? t(e[0], e[1]) : t.call(r, e[0], e[1]);
                case 3:
                    return i ? t(e[0], e[1], e[2]) : t.call(r, e[0], e[1], e[2]);
                case 4:
                    return i ? t(e[0], e[1], e[2], e[3]) : t.call(r, e[0], e[1], e[2], e[3])
                }
                return t.apply(r, e)
            }
        }
        , {}],
        51: [function(t, e, r) {
            e.exports = function(t) {
                return "object" == typeof t ? null !== t : "function" == typeof t
            }
        }
        , {}],
        52: [function(t, e, r) {
            var i = t("./_an-object")
              , n = t("./_ie8-dom-define")
              , a = t("./_to-primitive")
              , s = Object.defineProperty;
            r.f = t("./_descriptors") ? Object.defineProperty : function(t, e, r) {
                if (i(t),
                e = a(e, !0),
                i(r),
                n)
                    try {
                        return s(t, e, r)
                    } catch (o) {}
                if ("get"in r || "set"in r)
                    throw TypeError("Accessors not supported!");
                return "value"in r && (t[e] = r.value),
                t
            }
        }
        , {
            "./_an-object": 38,
            "./_descriptors": 42,
            "./_ie8-dom-define": 49,
            "./_to-primitive": 55
        }],
        53: [function(t, e, r) {
            e.exports = function(t, e) {
                return {
                    enumerable: !(1 & t),
                    configurable: !(2 & t),
                    writable: !(4 & t),
                    value: e
                }
            }
        }
        , {}],
        54: [function(t, e, r) {
            var i, n, a, s = t("./_ctx"), o = t("./_invoke"), l = t("./_html"), h = t("./_dom-create"), u = t("./_global"), c = u.process, f = u.setImmediate, d = u.clearImmediate, p = u.MessageChannel, _ = 0, m = {}, g = "onreadystatechange", y = function() {
                var t = +this;
                if (m.hasOwnProperty(t)) {
                    var e = m[t];
                    delete m[t],
                    e()
                }
            }, v = function(t) {
                y.call(t.data)
            };
            f && d || (f = function(t) {
                for (var e = [], r = 1; arguments.length > r; )
                    e.push(arguments[r++]);
                return m[++_] = function() {
                    o("function" == typeof t ? t : Function(t), e)
                }
                ,
                i(_),
                _
            }
            ,
            d = function(t) {
                delete m[t]
            }
            ,
            "process" == t("./_cof")(c) ? i = function(t) {
                c.nextTick(s(y, t, 1))
            }
            : p ? (n = new p,
            a = n.port2,
            n.port1.onmessage = v,
            i = s(a.postMessage, a, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (i = function(t) {
                u.postMessage(t + "", "*")
            }
            ,
            u.addEventListener("message", v, !1)) : i = g in h("script") ? function(t) {
                l.appendChild(h("script"))[g] = function() {
                    l.removeChild(this),
                    y.call(t)
                }
            }
            : function(t) {
                setTimeout(s(y, t, 1), 0)
            }
            ),
            e.exports = {
                set: f,
                clear: d
            }
        }
        , {
            "./_cof": 39,
            "./_ctx": 41,
            "./_dom-create": 43,
            "./_global": 46,
            "./_html": 48,
            "./_invoke": 50
        }],
        55: [function(t, e, r) {
            var i = t("./_is-object");
            e.exports = function(t, e) {
                if (!i(t))
                    return t;
                var r, n;
                if (e && "function" == typeof (r = t.toString) && !i(n = r.call(t)))
                    return n;
                if ("function" == typeof (r = t.valueOf) && !i(n = r.call(t)))
                    return n;
                if (!e && "function" == typeof (r = t.toString) && !i(n = r.call(t)))
                    return n;
                throw TypeError("Can't convert object to primitive value")
            }
        }
        , {
            "./_is-object": 51
        }],
        56: [function(t, e, r) {
            var i = t("./_export")
              , n = t("./_task");
            i(i.G + i.B, {
                setImmediate: n.set,
                clearImmediate: n.clear
            })
        }
        , {
            "./_export": 44,
            "./_task": 54
        }],
        57: [function(t, e, r) {
            (function(t) {
                "use strict";
                function r() {
                    u = !0;
                    for (var t, e, r = c.length; r; ) {
                        for (e = c,
                        c = [],
                        t = -1; ++t < r; )
                            e[t]();
                        r = c.length
                    }
                    u = !1
                }
                function i(t) {
                    1 !== c.push(t) || u || n()
                }
                var n, a = t.MutationObserver || t.WebKitMutationObserver;
                if (a) {
                    var s = 0
                      , o = new a(r)
                      , l = t.document.createTextNode("");
                    o.observe(l, {
                        characterData: !0
                    }),
                    n = function() {
                        l.data = s = ++s % 2
                    }
                } else if (t.setImmediate || "undefined" == typeof t.MessageChannel)
                    n = "document"in t && "onreadystatechange"in t.document.createElement("script") ? function() {
                        var e = t.document.createElement("script");
                        e.onreadystatechange = function() {
                            r(),
                            e.onreadystatechange = null,
                            e.parentNode.removeChild(e),
                            e = null
                        }
                        ,
                        t.document.documentElement.appendChild(e)
                    }
                    : function() {
                        setTimeout(r, 0)
                    }
                    ;
                else {
                    var h = new t.MessageChannel;
                    h.port1.onmessage = r,
                    n = function() {
                        h.port2.postMessage(0)
                    }
                }
                var u, c = [];
                e.exports = i
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        58: [function(t, e, r) {
            "use strict";
            function i() {}
            function n(t) {
                if ("function" != typeof t)
                    throw new TypeError("resolver must be a function");
                this.state = y,
                this.queue = [],
                this.outcome = void 0,
                t !== i && l(this, t)
            }
            function a(t, e, r) {
                this.promise = t,
                "function" == typeof e && (this.onFulfilled = e,
                this.callFulfilled = this.otherCallFulfilled),
                "function" == typeof r && (this.onRejected = r,
                this.callRejected = this.otherCallRejected)
            }
            function s(t, e, r) {
                p(function() {
                    var i;
                    try {
                        i = e(r)
                    } catch (n) {
                        return _.reject(t, n)
                    }
                    i === t ? _.reject(t, new TypeError("Cannot resolve promise with itself")) : _.resolve(t, i)
                })
            }
            function o(t) {
                var e = t && t.then;
                return !t || "object" != typeof t && "function" != typeof t || "function" != typeof e ? void 0 : function() {
                    e.apply(t, arguments)
                }
            }
            function l(t, e) {
                function r(e) {
                    a || (a = !0,
                    _.reject(t, e))
                }
                function i(e) {
                    a || (a = !0,
                    _.resolve(t, e))
                }
                function n() {
                    e(i, r)
                }
                var a = !1
                  , s = h(n);
                "error" === s.status && r(s.value)
            }
            function h(t, e) {
                var r = {};
                try {
                    r.value = t(e),
                    r.status = "success"
                } catch (i) {
                    r.status = "error",
                    r.value = i
                }
                return r
            }
            function u(t) {
                return t instanceof this ? t : _.resolve(new this(i), t)
            }
            function c(t) {
                var e = new this(i);
                return _.reject(e, t)
            }
            function f(t) {
                function e(t, e) {
                    function i(t) {
                        s[e] = t,
                        ++o !== n || a || (a = !0,
                        _.resolve(h, s))
                    }
                    r.resolve(t).then(i, function(t) {
                        a || (a = !0,
                        _.reject(h, t))
                    })
                }
                var r = this;
                if ("[object Array]" !== Object.prototype.toString.call(t))
                    return this.reject(new TypeError("must be an array"));
                var n = t.length
                  , a = !1;
                if (!n)
                    return this.resolve([]);
                for (var s = new Array(n), o = 0, l = -1, h = new this(i); ++l < n; )
                    e(t[l], l);
                return h
            }
            function d(t) {
                function e(t) {
                    r.resolve(t).then(function(t) {
                        a || (a = !0,
                        _.resolve(o, t))
                    }, function(t) {
                        a || (a = !0,
                        _.reject(o, t))
                    })
                }
                var r = this;
                if ("[object Array]" !== Object.prototype.toString.call(t))
                    return this.reject(new TypeError("must be an array"));
                var n = t.length
                  , a = !1;
                if (!n)
                    return this.resolve([]);
                for (var s = -1, o = new this(i); ++s < n; )
                    e(t[s]);
                return o
            }
            var p = t("immediate")
              , _ = {}
              , m = ["REJECTED"]
              , g = ["FULFILLED"]
              , y = ["PENDING"];
            e.exports = n,
            n.prototype["catch"] = function(t) {
                return this.then(null, t)
            }
            ,
            n.prototype.then = function(t, e) {
                if ("function" != typeof t && this.state === g || "function" != typeof e && this.state === m)
                    return this;
                var r = new this.constructor(i);
                if (this.state !== y) {
                    var n = this.state === g ? t : e;
                    s(r, n, this.outcome)
                } else
                    this.queue.push(new a(r,t,e));
                return r
            }
            ,
            a.prototype.callFulfilled = function(t) {
                _.resolve(this.promise, t)
            }
            ,
            a.prototype.otherCallFulfilled = function(t) {
                s(this.promise, this.onFulfilled, t)
            }
            ,
            a.prototype.callRejected = function(t) {
                _.reject(this.promise, t)
            }
            ,
            a.prototype.otherCallRejected = function(t) {
                s(this.promise, this.onRejected, t)
            }
            ,
            _.resolve = function(t, e) {
                var r = h(o, e);
                if ("error" === r.status)
                    return _.reject(t, r.value);
                var i = r.value;
                if (i)
                    l(t, i);
                else {
                    t.state = g,
                    t.outcome = e;
                    for (var n = -1, a = t.queue.length; ++n < a; )
                        t.queue[n].callFulfilled(e)
                }
                return t
            }
            ,
            _.reject = function(t, e) {
                t.state = m,
                t.outcome = e;
                for (var r = -1, i = t.queue.length; ++r < i; )
                    t.queue[r].callRejected(e);
                return t
            }
            ,
            n.resolve = u,
            n.reject = c,
            n.all = f,
            n.race = d
        }
        , {
            immediate: 57
        }],
        59: [function(t, e, r) {
            "use strict";
            var i = t("./lib/utils/common").assign
              , n = t("./lib/deflate")
              , a = t("./lib/inflate")
              , s = t("./lib/zlib/constants")
              , o = {};
            i(o, n, a, s),
            e.exports = o
        }
        , {
            "./lib/deflate": 60,
            "./lib/inflate": 61,
            "./lib/utils/common": 62,
            "./lib/zlib/constants": 65
        }],
        60: [function(t, e, r) {
            "use strict";
            function i(t) {
                if (!(this instanceof i))
                    return new i(t);
                this.options = l.assign({
                    level: y,
                    method: b,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: v,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits > 0 ? e.windowBits = -e.windowBits : e.gzip && e.windowBits > 0 && e.windowBits < 16 && (e.windowBits += 16),
                this.err = 0,
                this.msg = "",
                this.ended = !1,
                this.chunks = [],
                this.strm = new c,
                this.strm.avail_out = 0;
                var r = o.deflateInit2(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy);
                if (r !== _)
                    throw new Error(u[r]);
                if (e.header && o.deflateSetHeader(this.strm, e.header),
                e.dictionary) {
                    var n;
                    if (n = "string" == typeof e.dictionary ? h.string2buf(e.dictionary) : "[object ArrayBuffer]" === f.call(e.dictionary) ? new Uint8Array(e.dictionary) : e.dictionary,
                    r = o.deflateSetDictionary(this.strm, n),
                    r !== _)
                        throw new Error(u[r]);
                    this._dict_set = !0
                }
            }
            function n(t, e) {
                var r = new i(e);
                if (r.push(t, !0),
                r.err)
                    throw r.msg || u[r.err];
                return r.result
            }
            function a(t, e) {
                return e = e || {},
                e.raw = !0,
                n(t, e)
            }
            function s(t, e) {
                return e = e || {},
                e.gzip = !0,
                n(t, e)
            }
            var o = t("./zlib/deflate")
              , l = t("./utils/common")
              , h = t("./utils/strings")
              , u = t("./zlib/messages")
              , c = t("./zlib/zstream")
              , f = Object.prototype.toString
              , d = 0
              , p = 4
              , _ = 0
              , m = 1
              , g = 2
              , y = -1
              , v = 0
              , b = 8;
            i.prototype.push = function(t, e) {
                var r, i, n = this.strm, a = this.options.chunkSize;
                if (this.ended)
                    return !1;
                i = e === ~~e ? e : e === !0 ? p : d,
                "string" == typeof t ? n.input = h.string2buf(t) : "[object ArrayBuffer]" === f.call(t) ? n.input = new Uint8Array(t) : n.input = t,
                n.next_in = 0,
                n.avail_in = n.input.length;
                do {
                    if (0 === n.avail_out && (n.output = new l.Buf8(a),
                    n.next_out = 0,
                    n.avail_out = a),
                    r = o.deflate(n, i),
                    r !== m && r !== _)
                        return this.onEnd(r),
                        this.ended = !0,
                        !1;
                    (0 === n.avail_out || 0 === n.avail_in && (i === p || i === g)) && ("string" === this.options.to ? this.onData(h.buf2binstring(l.shrinkBuf(n.output, n.next_out))) : this.onData(l.shrinkBuf(n.output, n.next_out)))
                } while ((n.avail_in > 0 || 0 === n.avail_out) && r !== m);return i === p ? (r = o.deflateEnd(this.strm),
                this.onEnd(r),
                this.ended = !0,
                r === _) : i === g ? (this.onEnd(_),
                n.avail_out = 0,
                !0) : !0
            }
            ,
            i.prototype.onData = function(t) {
                this.chunks.push(t)
            }
            ,
            i.prototype.onEnd = function(t) {
                t === _ && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = l.flattenChunks(this.chunks)),
                this.chunks = [],
                this.err = t,
                this.msg = this.strm.msg
            }
            ,
            r.Deflate = i,
            r.deflate = n,
            r.deflateRaw = a,
            r.gzip = s
        }
        , {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/deflate": 67,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        61: [function(t, e, r) {
            "use strict";
            function i(t) {
                if (!(this instanceof i))
                    return new i(t);
                this.options = o.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits >= 0 && e.windowBits < 16 && (e.windowBits = -e.windowBits,
                0 === e.windowBits && (e.windowBits = -15)),
                !(e.windowBits >= 0 && e.windowBits < 16) || t && t.windowBits || (e.windowBits += 32),
                e.windowBits > 15 && e.windowBits < 48 && 0 === (15 & e.windowBits) && (e.windowBits |= 15),
                this.err = 0,
                this.msg = "",
                this.ended = !1,
                this.chunks = [],
                this.strm = new c,
                this.strm.avail_out = 0;
                var r = s.inflateInit2(this.strm, e.windowBits);
                if (r !== h.Z_OK)
                    throw new Error(u[r]);
                this.header = new f,
                s.inflateGetHeader(this.strm, this.header)
            }
            function n(t, e) {
                var r = new i(e);
                if (r.push(t, !0),
                r.err)
                    throw r.msg || u[r.err];
                return r.result
            }
            function a(t, e) {
                return e = e || {},
                e.raw = !0,
                n(t, e)
            }
            var s = t("./zlib/inflate")
              , o = t("./utils/common")
              , l = t("./utils/strings")
              , h = t("./zlib/constants")
              , u = t("./zlib/messages")
              , c = t("./zlib/zstream")
              , f = t("./zlib/gzheader")
              , d = Object.prototype.toString;
            i.prototype.push = function(t, e) {
                var r, i, n, a, u, c, f = this.strm, p = this.options.chunkSize, _ = this.options.dictionary, m = !1;
                if (this.ended)
                    return !1;
                i = e === ~~e ? e : e === !0 ? h.Z_FINISH : h.Z_NO_FLUSH,
                "string" == typeof t ? f.input = l.binstring2buf(t) : "[object ArrayBuffer]" === d.call(t) ? f.input = new Uint8Array(t) : f.input = t,
                f.next_in = 0,
                f.avail_in = f.input.length;
                do {
                    if (0 === f.avail_out && (f.output = new o.Buf8(p),
                    f.next_out = 0,
                    f.avail_out = p),
                    r = s.inflate(f, h.Z_NO_FLUSH),
                    r === h.Z_NEED_DICT && _ && (c = "string" == typeof _ ? l.string2buf(_) : "[object ArrayBuffer]" === d.call(_) ? new Uint8Array(_) : _,
                    r = s.inflateSetDictionary(this.strm, c)),
                    r === h.Z_BUF_ERROR && m === !0 && (r = h.Z_OK,
                    m = !1),
                    r !== h.Z_STREAM_END && r !== h.Z_OK)
                        return this.onEnd(r),
                        this.ended = !0,
                        !1;
                    f.next_out && (0 === f.avail_out || r === h.Z_STREAM_END || 0 === f.avail_in && (i === h.Z_FINISH || i === h.Z_SYNC_FLUSH)) && ("string" === this.options.to ? (n = l.utf8border(f.output, f.next_out),
                    a = f.next_out - n,
                    u = l.buf2string(f.output, n),
                    f.next_out = a,
                    f.avail_out = p - a,
                    a && o.arraySet(f.output, f.output, n, a, 0),
                    this.onData(u)) : this.onData(o.shrinkBuf(f.output, f.next_out))),
                    0 === f.avail_in && 0 === f.avail_out && (m = !0)
                } while ((f.avail_in > 0 || 0 === f.avail_out) && r !== h.Z_STREAM_END);return r === h.Z_STREAM_END && (i = h.Z_FINISH),
                i === h.Z_FINISH ? (r = s.inflateEnd(this.strm),
                this.onEnd(r),
                this.ended = !0,
                r === h.Z_OK) : i === h.Z_SYNC_FLUSH ? (this.onEnd(h.Z_OK),
                f.avail_out = 0,
                !0) : !0
            }
            ,
            i.prototype.onData = function(t) {
                this.chunks.push(t)
            }
            ,
            i.prototype.onEnd = function(t) {
                t === h.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)),
                this.chunks = [],
                this.err = t,
                this.msg = this.strm.msg
            }
            ,
            r.Inflate = i,
            r.inflate = n,
            r.inflateRaw = a,
            r.ungzip = n
        }
        , {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/constants": 65,
            "./zlib/gzheader": 68,
            "./zlib/inflate": 70,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        62: [function(t, e, r) {
            "use strict";
            var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            r.assign = function(t) {
                for (var e = Array.prototype.slice.call(arguments, 1); e.length; ) {
                    var r = e.shift();
                    if (r) {
                        if ("object" != typeof r)
                            throw new TypeError(r + "must be non-object");
                        for (var i in r)
                            r.hasOwnProperty(i) && (t[i] = r[i])
                    }
                }
                return t
            }
            ,
            r.shrinkBuf = function(t, e) {
                return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e,
                t)
            }
            ;
            var n = {
                arraySet: function(t, e, r, i, n) {
                    if (e.subarray && t.subarray)
                        return void t.set(e.subarray(r, r + i), n);
                    for (var a = 0; i > a; a++)
                        t[n + a] = e[r + a]
                },
                flattenChunks: function(t) {
                    var e, r, i, n, a, s;
                    for (i = 0,
                    e = 0,
                    r = t.length; r > e; e++)
                        i += t[e].length;
                    for (s = new Uint8Array(i),
                    n = 0,
                    e = 0,
                    r = t.length; r > e; e++)
                        a = t[e],
                        s.set(a, n),
                        n += a.length;
                    return s
                }
            }
              , a = {
                arraySet: function(t, e, r, i, n) {
                    for (var a = 0; i > a; a++)
                        t[n + a] = e[r + a]
                },
                flattenChunks: function(t) {
                    return [].concat.apply([], t)
                }
            };
            r.setTyped = function(t) {
                t ? (r.Buf8 = Uint8Array,
                r.Buf16 = Uint16Array,
                r.Buf32 = Int32Array,
                r.assign(r, n)) : (r.Buf8 = Array,
                r.Buf16 = Array,
                r.Buf32 = Array,
                r.assign(r, a))
            }
            ,
            r.setTyped(i)
        }
        , {}],
        63: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                if (65537 > e && (t.subarray && s || !t.subarray && a))
                    return String.fromCharCode.apply(null, n.shrinkBuf(t, e));
                for (var r = "", i = 0; e > i; i++)
                    r += String.fromCharCode(t[i]);
                return r
            }
            var n = t("./common")
              , a = !0
              , s = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (o) {
                a = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (o) {
                s = !1
            }
            for (var l = new n.Buf8(256), h = 0; 256 > h; h++)
                l[h] = h >= 252 ? 6 : h >= 248 ? 5 : h >= 240 ? 4 : h >= 224 ? 3 : h >= 192 ? 2 : 1;
            l[254] = l[254] = 1,
            r.string2buf = function(t) {
                var e, r, i, a, s, o = t.length, l = 0;
                for (a = 0; o > a; a++)
                    r = t.charCodeAt(a),
                    55296 === (64512 & r) && o > a + 1 && (i = t.charCodeAt(a + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    a++)),
                    l += 128 > r ? 1 : 2048 > r ? 2 : 65536 > r ? 3 : 4;
                for (e = new n.Buf8(l),
                s = 0,
                a = 0; l > s; a++)
                    r = t.charCodeAt(a),
                    55296 === (64512 & r) && o > a + 1 && (i = t.charCodeAt(a + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    a++)),
                    128 > r ? e[s++] = r : 2048 > r ? (e[s++] = 192 | r >>> 6,
                    e[s++] = 128 | 63 & r) : 65536 > r ? (e[s++] = 224 | r >>> 12,
                    e[s++] = 128 | r >>> 6 & 63,
                    e[s++] = 128 | 63 & r) : (e[s++] = 240 | r >>> 18,
                    e[s++] = 128 | r >>> 12 & 63,
                    e[s++] = 128 | r >>> 6 & 63,
                    e[s++] = 128 | 63 & r);
                return e
            }
            ,
            r.buf2binstring = function(t) {
                return i(t, t.length)
            }
            ,
            r.binstring2buf = function(t) {
                for (var e = new n.Buf8(t.length), r = 0, i = e.length; i > r; r++)
                    e[r] = t.charCodeAt(r);
                return e
            }
            ,
            r.buf2string = function(t, e) {
                var r, n, a, s, o = e || t.length, h = new Array(2 * o);
                for (n = 0,
                r = 0; o > r; )
                    if (a = t[r++],
                    128 > a)
                        h[n++] = a;
                    else if (s = l[a],
                    s > 4)
                        h[n++] = 65533,
                        r += s - 1;
                    else {
                        for (a &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && o > r; )
                            a = a << 6 | 63 & t[r++],
                            s--;
                        s > 1 ? h[n++] = 65533 : 65536 > a ? h[n++] = a : (a -= 65536,
                        h[n++] = 55296 | a >> 10 & 1023,
                        h[n++] = 56320 | 1023 & a)
                    }
                return i(h, n)
            }
            ,
            r.utf8border = function(t, e) {
                var r;
                for (e = e || t.length,
                e > t.length && (e = t.length),
                r = e - 1; r >= 0 && 128 === (192 & t[r]); )
                    r--;
                return 0 > r ? e : 0 === r ? e : r + l[t[r]] > e ? r : e
            }
        }
        , {
            "./common": 62
        }],
        64: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i) {
                for (var n = 65535 & t | 0, a = t >>> 16 & 65535 | 0, s = 0; 0 !== r; ) {
                    s = r > 2e3 ? 2e3 : r,
                    r -= s;
                    do
                        n = n + e[i++] | 0,
                        a = a + n | 0;
                    while (--s);n %= 65521,
                    a %= 65521
                }
                return n | a << 16 | 0
            }
            e.exports = i
        }
        , {}],
        65: [function(t, e, r) {
            "use strict";
            e.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }
        , {}],
        66: [function(t, e, r) {
            "use strict";
            function i() {
                for (var t, e = [], r = 0; 256 > r; r++) {
                    t = r;
                    for (var i = 0; 8 > i; i++)
                        t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    e[r] = t
                }
                return e
            }
            function n(t, e, r, i) {
                var n = a
                  , s = i + r;
                t ^= -1;
                for (var o = i; s > o; o++)
                    t = t >>> 8 ^ n[255 & (t ^ e[o])];
                return -1 ^ t
            }
            var a = i();
            e.exports = n
        }
        , {}],
        67: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                return t.msg = B[e],
                e
            }
            function n(t) {
                return (t << 1) - (t > 4 ? 9 : 0)
            }
            function a(t) {
                for (var e = t.length; --e >= 0; )
                    t[e] = 0
            }
            function s(t) {
                var e = t.state
                  , r = e.pending;
                r > t.avail_out && (r = t.avail_out),
                0 !== r && (O.arraySet(t.output, e.pending_buf, e.pending_out, r, t.next_out),
                t.next_out += r,
                e.pending_out += r,
                t.total_out += r,
                t.avail_out -= r,
                e.pending -= r,
                0 === e.pending && (e.pending_out = 0))
            }
            function o(t, e) {
                k._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e),
                t.block_start = t.strstart,
                s(t.strm)
            }
            function l(t, e) {
                t.pending_buf[t.pending++] = e
            }
            function h(t, e) {
                t.pending_buf[t.pending++] = e >>> 8 & 255,
                t.pending_buf[t.pending++] = 255 & e
            }
            function u(t, e, r, i) {
                var n = t.avail_in;
                return n > i && (n = i),
                0 === n ? 0 : (t.avail_in -= n,
                O.arraySet(e, t.input, t.next_in, n, r),
                1 === t.state.wrap ? t.adler = I(t.adler, e, n, r) : 2 === t.state.wrap && (t.adler = R(t.adler, e, n, r)),
                t.next_in += n,
                t.total_in += n,
                n)
            }
            function c(t, e) {
                var r, i, n = t.max_chain_length, a = t.strstart, s = t.prev_length, o = t.nice_match, l = t.strstart > t.w_size - ce ? t.strstart - (t.w_size - ce) : 0, h = t.window, u = t.w_mask, c = t.prev, f = t.strstart + ue, d = h[a + s - 1], p = h[a + s];
                t.prev_length >= t.good_match && (n >>= 2),
                o > t.lookahead && (o = t.lookahead);
                do
                    if (r = e,
                    h[r + s] === p && h[r + s - 1] === d && h[r] === h[a] && h[++r] === h[a + 1]) {
                        a += 2,
                        r++;
                        do
                            ;
                        while (h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && f > a);if (i = ue - (f - a),
                        a = f - ue,
                        i > s) {
                            if (t.match_start = e,
                            s = i,
                            i >= o)
                                break;
                            d = h[a + s - 1],
                            p = h[a + s]
                        }
                    }
                while ((e = c[e & u]) > l && 0 !== --n);return s <= t.lookahead ? s : t.lookahead
            }
            function f(t) {
                var e, r, i, n, a, s = t.w_size;
                do {
                    if (n = t.window_size - t.lookahead - t.strstart,
                    t.strstart >= s + (s - ce)) {
                        O.arraySet(t.window, t.window, s, s, 0),
                        t.match_start -= s,
                        t.strstart -= s,
                        t.block_start -= s,
                        r = t.hash_size,
                        e = r;
                        do
                            i = t.head[--e],
                            t.head[e] = i >= s ? i - s : 0;
                        while (--r);r = s,
                        e = r;
                        do
                            i = t.prev[--e],
                            t.prev[e] = i >= s ? i - s : 0;
                        while (--r);n += s
                    }
                    if (0 === t.strm.avail_in)
                        break;
                    if (r = u(t.strm, t.window, t.strstart + t.lookahead, n),
                    t.lookahead += r,
                    t.lookahead + t.insert >= he)
                        for (a = t.strstart - t.insert,
                        t.ins_h = t.window[a],
                        t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + 1]) & t.hash_mask; t.insert && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + he - 1]) & t.hash_mask,
                        t.prev[a & t.w_mask] = t.head[t.ins_h],
                        t.head[t.ins_h] = a,
                        a++,
                        t.insert--,
                        !(t.lookahead + t.insert < he)); )
                            ;
                } while (t.lookahead < ce && 0 !== t.strm.avail_in)
            }
            function d(t, e) {
                var r = 65535;
                for (r > t.pending_buf_size - 5 && (r = t.pending_buf_size - 5); ; ) {
                    if (t.lookahead <= 1) {
                        if (f(t),
                        0 === t.lookahead && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    t.strstart += t.lookahead,
                    t.lookahead = 0;
                    var i = t.block_start + r;
                    if ((0 === t.strstart || t.strstart >= i) && (t.lookahead = t.strstart - i,
                    t.strstart = i,
                    o(t, !1),
                    0 === t.strm.avail_out))
                        return be;
                    if (t.strstart - t.block_start >= t.w_size - ce && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.strstart > t.block_start && (o(t, !1),
                0 === t.strm.avail_out) ? be : be
            }
            function p(t, e) {
                for (var r, i; ; ) {
                    if (t.lookahead < ce) {
                        if (f(t),
                        t.lookahead < ce && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (r = 0,
                    t.lookahead >= he && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                    r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                    t.head[t.ins_h] = t.strstart),
                    0 !== r && t.strstart - r <= t.w_size - ce && (t.match_length = c(t, r)),
                    t.match_length >= he)
                        if (i = k._tr_tally(t, t.strstart - t.match_start, t.match_length - he),
                        t.lookahead -= t.match_length,
                        t.match_length <= t.max_lazy_match && t.lookahead >= he) {
                            t.match_length--;
                            do
                                t.strstart++,
                                t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                                r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                                t.head[t.ins_h] = t.strstart;
                            while (0 !== --t.match_length);t.strstart++
                        } else
                            t.strstart += t.match_length,
                            t.match_length = 0,
                            t.ins_h = t.window[t.strstart],
                            t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask;
                    else
                        i = k._tr_tally(t, 0, t.window[t.strstart]),
                        t.lookahead--,
                        t.strstart++;
                    if (i && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = t.strstart < he - 1 ? t.strstart : he - 1,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function _(t, e) {
                for (var r, i, n; ; ) {
                    if (t.lookahead < ce) {
                        if (f(t),
                        t.lookahead < ce && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (r = 0,
                    t.lookahead >= he && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                    r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                    t.head[t.ins_h] = t.strstart),
                    t.prev_length = t.match_length,
                    t.prev_match = t.match_start,
                    t.match_length = he - 1,
                    0 !== r && t.prev_length < t.max_lazy_match && t.strstart - r <= t.w_size - ce && (t.match_length = c(t, r),
                    t.match_length <= 5 && (t.strategy === H || t.match_length === he && t.strstart - t.match_start > 4096) && (t.match_length = he - 1)),
                    t.prev_length >= he && t.match_length <= t.prev_length) {
                        n = t.strstart + t.lookahead - he,
                        i = k._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - he),
                        t.lookahead -= t.prev_length - 1,
                        t.prev_length -= 2;
                        do
                            ++t.strstart <= n && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                            r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                            t.head[t.ins_h] = t.strstart);
                        while (0 !== --t.prev_length);if (t.match_available = 0,
                        t.match_length = he - 1,
                        t.strstart++,
                        i && (o(t, !1),
                        0 === t.strm.avail_out))
                            return be
                    } else if (t.match_available) {
                        if (i = k._tr_tally(t, 0, t.window[t.strstart - 1]),
                        i && o(t, !1),
                        t.strstart++,
                        t.lookahead--,
                        0 === t.strm.avail_out)
                            return be
                    } else
                        t.match_available = 1,
                        t.strstart++,
                        t.lookahead--
                }
                return t.match_available && (i = k._tr_tally(t, 0, t.window[t.strstart - 1]),
                t.match_available = 0),
                t.insert = t.strstart < he - 1 ? t.strstart : he - 1,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function m(t, e) {
                for (var r, i, n, a, s = t.window; ; ) {
                    if (t.lookahead <= ue) {
                        if (f(t),
                        t.lookahead <= ue && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (t.match_length = 0,
                    t.lookahead >= he && t.strstart > 0 && (n = t.strstart - 1,
                    i = s[n],
                    i === s[++n] && i === s[++n] && i === s[++n])) {
                        a = t.strstart + ue;
                        do
                            ;
                        while (i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && a > n);t.match_length = ue - (a - n),
                        t.match_length > t.lookahead && (t.match_length = t.lookahead)
                    }
                    if (t.match_length >= he ? (r = k._tr_tally(t, 1, t.match_length - he),
                    t.lookahead -= t.match_length,
                    t.strstart += t.match_length,
                    t.match_length = 0) : (r = k._tr_tally(t, 0, t.window[t.strstart]),
                    t.lookahead--,
                    t.strstart++),
                    r && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function g(t, e) {
                for (var r; ; ) {
                    if (0 === t.lookahead && (f(t),
                    0 === t.lookahead)) {
                        if (e === M)
                            return be;
                        break
                    }
                    if (t.match_length = 0,
                    r = k._tr_tally(t, 0, t.window[t.strstart]),
                    t.lookahead--,
                    t.strstart++,
                    r && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function y(t, e, r, i, n) {
                this.good_length = t,
                this.max_lazy = e,
                this.nice_length = r,
                this.max_chain = i,
                this.func = n
            }
            function v(t) {
                t.window_size = 2 * t.w_size,
                a(t.head),
                t.max_lazy_match = C[t.level].max_lazy,
                t.good_match = C[t.level].good_length,
                t.nice_match = C[t.level].nice_length,
                t.max_chain_length = C[t.level].max_chain,
                t.strstart = 0,
                t.block_start = 0,
                t.lookahead = 0,
                t.insert = 0,
                t.match_length = t.prev_length = he - 1,
                t.match_available = 0,
                t.ins_h = 0
            }
            function b() {
                this.strm = null,
                this.status = 0,
                this.pending_buf = null,
                this.pending_buf_size = 0,
                this.pending_out = 0,
                this.pending = 0,
                this.wrap = 0,
                this.gzhead = null,
                this.gzindex = 0,
                this.method = J,
                this.last_flush = -1,
                this.w_size = 0,
                this.w_bits = 0,
                this.w_mask = 0,
                this.window = null,
                this.window_size = 0,
                this.prev = null,
                this.head = null,
                this.ins_h = 0,
                this.hash_size = 0,
                this.hash_bits = 0,
                this.hash_mask = 0,
                this.hash_shift = 0,
                this.block_start = 0,
                this.match_length = 0,
                this.prev_match = 0,
                this.match_available = 0,
                this.strstart = 0,
                this.match_start = 0,
                this.lookahead = 0,
                this.prev_length = 0,
                this.max_chain_length = 0,
                this.max_lazy_match = 0,
                this.level = 0,
                this.strategy = 0,
                this.good_match = 0,
                this.nice_match = 0,
                this.dyn_ltree = new O.Buf16(2 * oe),
                this.dyn_dtree = new O.Buf16(2 * (2 * ae + 1)),
                this.bl_tree = new O.Buf16(2 * (2 * se + 1)),
                a(this.dyn_ltree),
                a(this.dyn_dtree),
                a(this.bl_tree),
                this.l_desc = null,
                this.d_desc = null,
                this.bl_desc = null,
                this.bl_count = new O.Buf16(le + 1),
                this.heap = new O.Buf16(2 * ne + 1),
                a(this.heap),
                this.heap_len = 0,
                this.heap_max = 0,
                this.depth = new O.Buf16(2 * ne + 1),
                a(this.depth),
                this.l_buf = 0,
                this.lit_bufsize = 0,
                this.last_lit = 0,
                this.d_buf = 0,
                this.opt_len = 0,
                this.static_len = 0,
                this.matches = 0,
                this.insert = 0,
                this.bi_buf = 0,
                this.bi_valid = 0
            }
            function w(t) {
                var e;
                return t && t.state ? (t.total_in = t.total_out = 0,
                t.data_type = K,
                e = t.state,
                e.pending = 0,
                e.pending_out = 0,
                e.wrap < 0 && (e.wrap = -e.wrap),
                e.status = e.wrap ? de : ye,
                t.adler = 2 === e.wrap ? 0 : 1,
                e.last_flush = M,
                k._tr_init(e),
                z) : i(t, V)
            }
            function T(t) {
                var e = w(t);
                return e === z && v(t.state),
                e
            }
            function D(t, e) {
                return t && t.state ? 2 !== t.state.wrap ? V : (t.state.gzhead = e,
                z) : V
            }
            function S(t, e, r, n, a, s) {
                if (!t)
                    return V;
                var o = 1;
                if (e === W && (e = 6),
                0 > n ? (o = 0,
                n = -n) : n > 15 && (o = 2,
                n -= 16),
                1 > a || a > Q || r !== J || 8 > n || n > 15 || 0 > e || e > 9 || 0 > s || s > Z)
                    return i(t, V);
                8 === n && (n = 9);
                var l = new b;
                return t.state = l,
                l.strm = t,
                l.wrap = o,
                l.gzhead = null,
                l.w_bits = n,
                l.w_size = 1 << l.w_bits,
                l.w_mask = l.w_size - 1,
                l.hash_bits = a + 7,
                l.hash_size = 1 << l.hash_bits,
                l.hash_mask = l.hash_size - 1,
                l.hash_shift = ~~((l.hash_bits + he - 1) / he),
                l.window = new O.Buf8(2 * l.w_size),
                l.head = new O.Buf16(l.hash_size),
                l.prev = new O.Buf16(l.w_size),
                l.lit_bufsize = 1 << a + 6,
                l.pending_buf_size = 4 * l.lit_bufsize,
                l.pending_buf = new O.Buf8(l.pending_buf_size),
                l.d_buf = 1 * l.lit_bufsize,
                l.l_buf = 3 * l.lit_bufsize,
                l.level = e,
                l.strategy = s,
                l.method = r,
                T(t)
            }
            function E(t, e) {
                return S(t, e, J, te, ee, q)
            }
            function A(t, e) {
                var r, o, u, c;
                if (!t || !t.state || e > j || 0 > e)
                    return t ? i(t, V) : V;
                if (o = t.state,
                !t.output || !t.input && 0 !== t.avail_in || o.status === ve && e !== N)
                    return i(t, 0 === t.avail_out ? G : V);
                if (o.strm = t,
                r = o.last_flush,
                o.last_flush = e,
                o.status === de)
                    if (2 === o.wrap)
                        t.adler = 0,
                        l(o, 31),
                        l(o, 139),
                        l(o, 8),
                        o.gzhead ? (l(o, (o.gzhead.text ? 1 : 0) + (o.gzhead.hcrc ? 2 : 0) + (o.gzhead.extra ? 4 : 0) + (o.gzhead.name ? 8 : 0) + (o.gzhead.comment ? 16 : 0)),
                        l(o, 255 & o.gzhead.time),
                        l(o, o.gzhead.time >> 8 & 255),
                        l(o, o.gzhead.time >> 16 & 255),
                        l(o, o.gzhead.time >> 24 & 255),
                        l(o, 9 === o.level ? 2 : o.strategy >= Y || o.level < 2 ? 4 : 0),
                        l(o, 255 & o.gzhead.os),
                        o.gzhead.extra && o.gzhead.extra.length && (l(o, 255 & o.gzhead.extra.length),
                        l(o, o.gzhead.extra.length >> 8 & 255)),
                        o.gzhead.hcrc && (t.adler = R(t.adler, o.pending_buf, o.pending, 0)),
                        o.gzindex = 0,
                        o.status = pe) : (l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 9 === o.level ? 2 : o.strategy >= Y || o.level < 2 ? 4 : 0),
                        l(o, Se),
                        o.status = ye);
                    else {
                        var f = J + (o.w_bits - 8 << 4) << 8
                          , d = -1;
                        d = o.strategy >= Y || o.level < 2 ? 0 : o.level < 6 ? 1 : 6 === o.level ? 2 : 3,
                        f |= d << 6,
                        0 !== o.strstart && (f |= fe),
                        f += 31 - f % 31,
                        o.status = ye,
                        h(o, f),
                        0 !== o.strstart && (h(o, t.adler >>> 16),
                        h(o, 65535 & t.adler)),
                        t.adler = 1
                    }
                if (o.status === pe)
                    if (o.gzhead.extra) {
                        for (u = o.pending; o.gzindex < (65535 & o.gzhead.extra.length) && (o.pending !== o.pending_buf_size || (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        s(t),
                        u = o.pending,
                        o.pending !== o.pending_buf_size)); )
                            l(o, 255 & o.gzhead.extra[o.gzindex]),
                            o.gzindex++;
                        o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        o.gzindex === o.gzhead.extra.length && (o.gzindex = 0,
                        o.status = _e)
                    } else
                        o.status = _e;
                if (o.status === _e)
                    if (o.gzhead.name) {
                        u = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                            s(t),
                            u = o.pending,
                            o.pending === o.pending_buf_size)) {
                                c = 1;
                                break
                            }
                            c = o.gzindex < o.gzhead.name.length ? 255 & o.gzhead.name.charCodeAt(o.gzindex++) : 0,
                            l(o, c)
                        } while (0 !== c);o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        0 === c && (o.gzindex = 0,
                        o.status = me)
                    } else
                        o.status = me;
                if (o.status === me)
                    if (o.gzhead.comment) {
                        u = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                            s(t),
                            u = o.pending,
                            o.pending === o.pending_buf_size)) {
                                c = 1;
                                break
                            }
                            c = o.gzindex < o.gzhead.comment.length ? 255 & o.gzhead.comment.charCodeAt(o.gzindex++) : 0,
                            l(o, c)
                        } while (0 !== c);o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        0 === c && (o.status = ge)
                    } else
                        o.status = ge;
                if (o.status === ge && (o.gzhead.hcrc ? (o.pending + 2 > o.pending_buf_size && s(t),
                o.pending + 2 <= o.pending_buf_size && (l(o, 255 & t.adler),
                l(o, t.adler >> 8 & 255),
                t.adler = 0,
                o.status = ye)) : o.status = ye),
                0 !== o.pending) {
                    if (s(t),
                    0 === t.avail_out)
                        return o.last_flush = -1,
                        z
                } else if (0 === t.avail_in && n(e) <= n(r) && e !== N)
                    return i(t, G);
                if (o.status === ve && 0 !== t.avail_in)
                    return i(t, G);
                if (0 !== t.avail_in || 0 !== o.lookahead || e !== M && o.status !== ve) {
                    var p = o.strategy === Y ? g(o, e) : o.strategy === X ? m(o, e) : C[o.level].func(o, e);
                    if ((p === Te || p === De) && (o.status = ve),
                    p === be || p === Te)
                        return 0 === t.avail_out && (o.last_flush = -1),
                        z;
                    if (p === we && (e === F ? k._tr_align(o) : e !== j && (k._tr_stored_block(o, 0, 0, !1),
                    e === L && (a(o.head),
                    0 === o.lookahead && (o.strstart = 0,
                    o.block_start = 0,
                    o.insert = 0))),
                    s(t),
                    0 === t.avail_out))
                        return o.last_flush = -1,
                        z
                }
                return e !== N ? z : o.wrap <= 0 ? U : (2 === o.wrap ? (l(o, 255 & t.adler),
                l(o, t.adler >> 8 & 255),
                l(o, t.adler >> 16 & 255),
                l(o, t.adler >> 24 & 255),
                l(o, 255 & t.total_in),
                l(o, t.total_in >> 8 & 255),
                l(o, t.total_in >> 16 & 255),
                l(o, t.total_in >> 24 & 255)) : (h(o, t.adler >>> 16),
                h(o, 65535 & t.adler)),
                s(t),
                o.wrap > 0 && (o.wrap = -o.wrap),
                0 !== o.pending ? z : U)
            }
            function x(t) {
                var e;
                return t && t.state ? (e = t.state.status,
                e !== de && e !== pe && e !== _e && e !== me && e !== ge && e !== ye && e !== ve ? i(t, V) : (t.state = null,
                e === ye ? i(t, $) : z)) : V
            }
            function P(t, e) {
                var r, i, n, s, o, l, h, u, c = e.length;
                if (!t || !t.state)
                    return V;
                if (r = t.state,
                s = r.wrap,
                2 === s || 1 === s && r.status !== de || r.lookahead)
                    return V;
                for (1 === s && (t.adler = I(t.adler, e, c, 0)),
                r.wrap = 0,
                c >= r.w_size && (0 === s && (a(r.head),
                r.strstart = 0,
                r.block_start = 0,
                r.insert = 0),
                u = new O.Buf8(r.w_size),
                O.arraySet(u, e, c - r.w_size, r.w_size, 0),
                e = u,
                c = r.w_size),
                o = t.avail_in,
                l = t.next_in,
                h = t.input,
                t.avail_in = c,
                t.next_in = 0,
                t.input = e,
                f(r); r.lookahead >= he; ) {
                    i = r.strstart,
                    n = r.lookahead - (he - 1);
                    do
                        r.ins_h = (r.ins_h << r.hash_shift ^ r.window[i + he - 1]) & r.hash_mask,
                        r.prev[i & r.w_mask] = r.head[r.ins_h],
                        r.head[r.ins_h] = i,
                        i++;
                    while (--n);r.strstart = i,
                    r.lookahead = he - 1,
                    f(r)
                }
                return r.strstart += r.lookahead,
                r.block_start = r.strstart,
                r.insert = r.lookahead,
                r.lookahead = 0,
                r.match_length = r.prev_length = he - 1,
                r.match_available = 0,
                t.next_in = l,
                t.input = h,
                t.avail_in = o,
                r.wrap = s,
                z
            }
            var C, O = t("../utils/common"), k = t("./trees"), I = t("./adler32"), R = t("./crc32"), B = t("./messages"), M = 0, F = 1, L = 3, N = 4, j = 5, z = 0, U = 1, V = -2, $ = -3, G = -5, W = -1, H = 1, Y = 2, X = 3, Z = 4, q = 0, K = 2, J = 8, Q = 9, te = 15, ee = 8, re = 29, ie = 256, ne = ie + 1 + re, ae = 30, se = 19, oe = 2 * ne + 1, le = 15, he = 3, ue = 258, ce = ue + he + 1, fe = 32, de = 42, pe = 69, _e = 73, me = 91, ge = 103, ye = 113, ve = 666, be = 1, we = 2, Te = 3, De = 4, Se = 3;
            C = [new y(0,0,0,0,d), new y(4,4,8,4,p), new y(4,5,16,8,p), new y(4,6,32,32,p), new y(4,4,16,16,_), new y(8,16,32,32,_), new y(8,16,128,128,_), new y(8,32,128,256,_), new y(32,128,258,1024,_), new y(32,258,258,4096,_)],
            r.deflateInit = E,
            r.deflateInit2 = S,
            r.deflateReset = T,
            r.deflateResetKeep = w,
            r.deflateSetHeader = D,
            r.deflate = A,
            r.deflateEnd = x,
            r.deflateSetDictionary = P,
            r.deflateInfo = "pako deflate (from Nodeca project)"
        }
        , {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./messages": 72,
            "./trees": 73
        }],
        68: [function(t, e, r) {
            "use strict";
            function i() {
                this.text = 0,
                this.time = 0,
                this.xflags = 0,
                this.os = 0,
                this.extra = null,
                this.extra_len = 0,
                this.name = "",
                this.comment = "",
                this.hcrc = 0,
                this.done = !1
            }
            e.exports = i
        }
        , {}],
        69: [function(t, e, r) {
            "use strict";
            var i = 30
              , n = 12;
            e.exports = function(t, e) {
                var r, a, s, o, l, h, u, c, f, d, p, _, m, g, y, v, b, w, T, D, S, E, A, x, P;
                r = t.state,
                a = t.next_in,
                x = t.input,
                s = a + (t.avail_in - 5),
                o = t.next_out,
                P = t.output,
                l = o - (e - t.avail_out),
                h = o + (t.avail_out - 257),
                u = r.dmax,
                c = r.wsize,
                f = r.whave,
                d = r.wnext,
                p = r.window,
                _ = r.hold,
                m = r.bits,
                g = r.lencode,
                y = r.distcode,
                v = (1 << r.lenbits) - 1,
                b = (1 << r.distbits) - 1;
                t: do {
                    15 > m && (_ += x[a++] << m,
                    m += 8,
                    _ += x[a++] << m,
                    m += 8),
                    w = g[_ & v];
                    e: for (; ; ) {
                        if (T = w >>> 24,
                        _ >>>= T,
                        m -= T,
                        T = w >>> 16 & 255,
                        0 === T)
                            P[o++] = 65535 & w;
                        else {
                            if (!(16 & T)) {
                                if (0 === (64 & T)) {
                                    w = g[(65535 & w) + (_ & (1 << T) - 1)];
                                    continue e
                                }
                                if (32 & T) {
                                    r.mode = n;
                                    break t
                                }
                                t.msg = "invalid literal/length code",
                                r.mode = i;
                                break t
                            }
                            D = 65535 & w,
                            T &= 15,
                            T && (T > m && (_ += x[a++] << m,
                            m += 8),
                            D += _ & (1 << T) - 1,
                            _ >>>= T,
                            m -= T),
                            15 > m && (_ += x[a++] << m,
                            m += 8,
                            _ += x[a++] << m,
                            m += 8),
                            w = y[_ & b];
                            r: for (; ; ) {
                                if (T = w >>> 24,
                                _ >>>= T,
                                m -= T,
                                T = w >>> 16 & 255,
                                !(16 & T)) {
                                    if (0 === (64 & T)) {
                                        w = y[(65535 & w) + (_ & (1 << T) - 1)];
                                        continue r
                                    }
                                    t.msg = "invalid distance code",
                                    r.mode = i;
                                    break t
                                }
                                if (S = 65535 & w,
                                T &= 15,
                                T > m && (_ += x[a++] << m,
                                m += 8,
                                T > m && (_ += x[a++] << m,
                                m += 8)),
                                S += _ & (1 << T) - 1,
                                S > u) {
                                    t.msg = "invalid distance too far back",
                                    r.mode = i;
                                    break t
                                }
                                if (_ >>>= T,
                                m -= T,
                                T = o - l,
                                S > T) {
                                    if (T = S - T,
                                    T > f && r.sane) {
                                        t.msg = "invalid distance too far back",
                                        r.mode = i;
                                        break t
                                    }
                                    if (E = 0,
                                    A = p,
                                    0 === d) {
                                        if (E += c - T,
                                        D > T) {
                                            D -= T;
                                            do
                                                P[o++] = p[E++];
                                            while (--T);E = o - S,
                                            A = P
                                        }
                                    } else if (T > d) {
                                        if (E += c + d - T,
                                        T -= d,
                                        D > T) {
                                            D -= T;
                                            do
                                                P[o++] = p[E++];
                                            while (--T);if (E = 0,
                                            D > d) {
                                                T = d,
                                                D -= T;
                                                do
                                                    P[o++] = p[E++];
                                                while (--T);E = o - S,
                                                A = P
                                            }
                                        }
                                    } else if (E += d - T,
                                    D > T) {
                                        D -= T;
                                        do
                                            P[o++] = p[E++];
                                        while (--T);E = o - S,
                                        A = P
                                    }
                                    for (; D > 2; )
                                        P[o++] = A[E++],
                                        P[o++] = A[E++],
                                        P[o++] = A[E++],
                                        D -= 3;
                                    D && (P[o++] = A[E++],
                                    D > 1 && (P[o++] = A[E++]))
                                } else {
                                    E = o - S;
                                    do
                                        P[o++] = P[E++],
                                        P[o++] = P[E++],
                                        P[o++] = P[E++],
                                        D -= 3;
                                    while (D > 2);D && (P[o++] = P[E++],
                                    D > 1 && (P[o++] = P[E++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (s > a && h > o);D = m >> 3,
                a -= D,
                m -= D << 3,
                _ &= (1 << m) - 1,
                t.next_in = a,
                t.next_out = o,
                t.avail_in = s > a ? 5 + (s - a) : 5 - (a - s),
                t.avail_out = h > o ? 257 + (h - o) : 257 - (o - h),
                r.hold = _,
                r.bits = m
            }
        }
        , {}],
        70: [function(t, e, r) {
            "use strict";
            function i(t) {
                return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24)
            }
            function n() {
                this.mode = 0,
                this.last = !1,
                this.wrap = 0,
                this.havedict = !1,
                this.flags = 0,
                this.dmax = 0,
                this.check = 0,
                this.total = 0,
                this.head = null,
                this.wbits = 0,
                this.wsize = 0,
                this.whave = 0,
                this.wnext = 0,
                this.window = null,
                this.hold = 0,
                this.bits = 0,
                this.length = 0,
                this.offset = 0,
                this.extra = 0,
                this.lencode = null,
                this.distcode = null,
                this.lenbits = 0,
                this.distbits = 0,
                this.ncode = 0,
                this.nlen = 0,
                this.ndist = 0,
                this.have = 0,
                this.next = null,
                this.lens = new y.Buf16(320),
                this.work = new y.Buf16(288),
                this.lendyn = null,
                this.distdyn = null,
                this.sane = 0,
                this.back = 0,
                this.was = 0
            }
            function a(t) {
                var e;
                return t && t.state ? (e = t.state,
                t.total_in = t.total_out = e.total = 0,
                t.msg = "",
                e.wrap && (t.adler = 1 & e.wrap),
                e.mode = L,
                e.last = 0,
                e.havedict = 0,
                e.dmax = 32768,
                e.head = null,
                e.hold = 0,
                e.bits = 0,
                e.lencode = e.lendyn = new y.Buf32(_e),
                e.distcode = e.distdyn = new y.Buf32(me),
                e.sane = 1,
                e.back = -1,
                C) : I
            }
            function s(t) {
                var e;
                return t && t.state ? (e = t.state,
                e.wsize = 0,
                e.whave = 0,
                e.wnext = 0,
                a(t)) : I
            }
            function o(t, e) {
                var r, i;
                return t && t.state ? (i = t.state,
                0 > e ? (r = 0,
                e = -e) : (r = (e >> 4) + 1,
                48 > e && (e &= 15)),
                e && (8 > e || e > 15) ? I : (null !== i.window && i.wbits !== e && (i.window = null),
                i.wrap = r,
                i.wbits = e,
                s(t))) : I
            }
            function l(t, e) {
                var r, i;
                return t ? (i = new n,
                t.state = i,
                i.window = null,
                r = o(t, e),
                r !== C && (t.state = null),
                r) : I
            }
            function h(t) {
                return l(t, ye)
            }
            function u(t) {
                if (ve) {
                    var e;
                    for (m = new y.Buf32(512),
                    g = new y.Buf32(32),
                    e = 0; 144 > e; )
                        t.lens[e++] = 8;
                    for (; 256 > e; )
                        t.lens[e++] = 9;
                    for (; 280 > e; )
                        t.lens[e++] = 7;
                    for (; 288 > e; )
                        t.lens[e++] = 8;
                    for (T(S, t.lens, 0, 288, m, 0, t.work, {
                        bits: 9
                    }),
                    e = 0; 32 > e; )
                        t.lens[e++] = 5;
                    T(E, t.lens, 0, 32, g, 0, t.work, {
                        bits: 5
                    }),
                    ve = !1
                }
                t.lencode = m,
                t.lenbits = 9,
                t.distcode = g,
                t.distbits = 5
            }
            function c(t, e, r, i) {
                var n, a = t.state;
                return null === a.window && (a.wsize = 1 << a.wbits,
                a.wnext = 0,
                a.whave = 0,
                a.window = new y.Buf8(a.wsize)),
                i >= a.wsize ? (y.arraySet(a.window, e, r - a.wsize, a.wsize, 0),
                a.wnext = 0,
                a.whave = a.wsize) : (n = a.wsize - a.wnext,
                n > i && (n = i),
                y.arraySet(a.window, e, r - i, n, a.wnext),
                i -= n,
                i ? (y.arraySet(a.window, e, r - i, i, 0),
                a.wnext = i,
                a.whave = a.wsize) : (a.wnext += n,
                a.wnext === a.wsize && (a.wnext = 0),
                a.whave < a.wsize && (a.whave += n))),
                0
            }
            function f(t, e) {
                var r, n, a, s, o, l, h, f, d, p, _, m, g, _e, me, ge, ye, ve, be, we, Te, De, Se, Ee, Ae = 0, xe = new y.Buf8(4), Pe = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!t || !t.state || !t.output || !t.input && 0 !== t.avail_in)
                    return I;
                r = t.state,
                r.mode === X && (r.mode = Z),
                o = t.next_out,
                a = t.output,
                h = t.avail_out,
                s = t.next_in,
                n = t.input,
                l = t.avail_in,
                f = r.hold,
                d = r.bits,
                p = l,
                _ = h,
                De = C;
                t: for (; ; )
                    switch (r.mode) {
                    case L:
                        if (0 === r.wrap) {
                            r.mode = Z;
                            break
                        }
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (2 & r.wrap && 35615 === f) {
                            r.check = 0,
                            xe[0] = 255 & f,
                            xe[1] = f >>> 8 & 255,
                            r.check = b(r.check, xe, 2, 0),
                            f = 0,
                            d = 0,
                            r.mode = N;
                            break
                        }
                        if (r.flags = 0,
                        r.head && (r.head.done = !1),
                        !(1 & r.wrap) || (((255 & f) << 8) + (f >> 8)) % 31) {
                            t.msg = "incorrect header check",
                            r.mode = fe;
                            break
                        }
                        if ((15 & f) !== F) {
                            t.msg = "unknown compression method",
                            r.mode = fe;
                            break
                        }
                        if (f >>>= 4,
                        d -= 4,
                        Te = (15 & f) + 8,
                        0 === r.wbits)
                            r.wbits = Te;
                        else if (Te > r.wbits) {
                            t.msg = "invalid window size",
                            r.mode = fe;
                            break
                        }
                        r.dmax = 1 << Te,
                        t.adler = r.check = 1,
                        r.mode = 512 & f ? H : X,
                        f = 0,
                        d = 0;
                        break;
                    case N:
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (r.flags = f,
                        (255 & r.flags) !== F) {
                            t.msg = "unknown compression method",
                            r.mode = fe;
                            break
                        }
                        if (57344 & r.flags) {
                            t.msg = "unknown header flags set",
                            r.mode = fe;
                            break
                        }
                        r.head && (r.head.text = f >> 8 & 1),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        r.check = b(r.check, xe, 2, 0)),
                        f = 0,
                        d = 0,
                        r.mode = j;
                    case j:
                        for (; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        r.head && (r.head.time = f),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        xe[2] = f >>> 16 & 255,
                        xe[3] = f >>> 24 & 255,
                        r.check = b(r.check, xe, 4, 0)),
                        f = 0,
                        d = 0,
                        r.mode = z;
                    case z:
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        r.head && (r.head.xflags = 255 & f,
                        r.head.os = f >> 8),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        r.check = b(r.check, xe, 2, 0)),
                        f = 0,
                        d = 0,
                        r.mode = U;
                    case U:
                        if (1024 & r.flags) {
                            for (; 16 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.length = f,
                            r.head && (r.head.extra_len = f),
                            512 & r.flags && (xe[0] = 255 & f,
                            xe[1] = f >>> 8 & 255,
                            r.check = b(r.check, xe, 2, 0)),
                            f = 0,
                            d = 0
                        } else
                            r.head && (r.head.extra = null);
                        r.mode = V;
                    case V:
                        if (1024 & r.flags && (m = r.length,
                        m > l && (m = l),
                        m && (r.head && (Te = r.head.extra_len - r.length,
                        r.head.extra || (r.head.extra = new Array(r.head.extra_len)),
                        y.arraySet(r.head.extra, n, s, m, Te)),
                        512 & r.flags && (r.check = b(r.check, n, m, s)),
                        l -= m,
                        s += m,
                        r.length -= m),
                        r.length))
                            break t;
                        r.length = 0,
                        r.mode = $;
                    case $:
                        if (2048 & r.flags) {
                            if (0 === l)
                                break t;
                            m = 0;
                            do
                                Te = n[s + m++],
                                r.head && Te && r.length < 65536 && (r.head.name += String.fromCharCode(Te));
                            while (Te && l > m);if (512 & r.flags && (r.check = b(r.check, n, m, s)),
                            l -= m,
                            s += m,
                            Te)
                                break t
                        } else
                            r.head && (r.head.name = null);
                        r.length = 0,
                        r.mode = G;
                    case G:
                        if (4096 & r.flags) {
                            if (0 === l)
                                break t;
                            m = 0;
                            do
                                Te = n[s + m++],
                                r.head && Te && r.length < 65536 && (r.head.comment += String.fromCharCode(Te));
                            while (Te && l > m);if (512 & r.flags && (r.check = b(r.check, n, m, s)),
                            l -= m,
                            s += m,
                            Te)
                                break t
                        } else
                            r.head && (r.head.comment = null);
                        r.mode = W;
                    case W:
                        if (512 & r.flags) {
                            for (; 16 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (f !== (65535 & r.check)) {
                                t.msg = "header crc mismatch",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.head && (r.head.hcrc = r.flags >> 9 & 1,
                        r.head.done = !0),
                        t.adler = r.check = 0,
                        r.mode = X;
                        break;
                    case H:
                        for (; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        t.adler = r.check = i(f),
                        f = 0,
                        d = 0,
                        r.mode = Y;
                    case Y:
                        if (0 === r.havedict)
                            return t.next_out = o,
                            t.avail_out = h,
                            t.next_in = s,
                            t.avail_in = l,
                            r.hold = f,
                            r.bits = d,
                            k;
                        t.adler = r.check = 1,
                        r.mode = X;
                    case X:
                        if (e === x || e === P)
                            break t;
                    case Z:
                        if (r.last) {
                            f >>>= 7 & d,
                            d -= 7 & d,
                            r.mode = he;
                            break
                        }
                        for (; 3 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        switch (r.last = 1 & f,
                        f >>>= 1,
                        d -= 1,
                        3 & f) {
                        case 0:
                            r.mode = q;
                            break;
                        case 1:
                            if (u(r),
                            r.mode = re,
                            e === P) {
                                f >>>= 2,
                                d -= 2;
                                break t
                            }
                            break;
                        case 2:
                            r.mode = Q;
                            break;
                        case 3:
                            t.msg = "invalid block type",
                            r.mode = fe
                        }
                        f >>>= 2,
                        d -= 2;
                        break;
                    case q:
                        for (f >>>= 7 & d,
                        d -= 7 & d; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if ((65535 & f) !== (f >>> 16 ^ 65535)) {
                            t.msg = "invalid stored block lengths",
                            r.mode = fe;
                            break
                        }
                        if (r.length = 65535 & f,
                        f = 0,
                        d = 0,
                        r.mode = K,
                        e === P)
                            break t;
                    case K:
                        r.mode = J;
                    case J:
                        if (m = r.length) {
                            if (m > l && (m = l),
                            m > h && (m = h),
                            0 === m)
                                break t;
                            y.arraySet(a, n, s, m, o),
                            l -= m,
                            s += m,
                            h -= m,
                            o += m,
                            r.length -= m;
                            break
                        }
                        r.mode = X;
                        break;
                    case Q:
                        for (; 14 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (r.nlen = (31 & f) + 257,
                        f >>>= 5,
                        d -= 5,
                        r.ndist = (31 & f) + 1,
                        f >>>= 5,
                        d -= 5,
                        r.ncode = (15 & f) + 4,
                        f >>>= 4,
                        d -= 4,
                        r.nlen > 286 || r.ndist > 30) {
                            t.msg = "too many length or distance symbols",
                            r.mode = fe;
                            break
                        }
                        r.have = 0,
                        r.mode = te;
                    case te:
                        for (; r.have < r.ncode; ) {
                            for (; 3 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.lens[Pe[r.have++]] = 7 & f,
                            f >>>= 3,
                            d -= 3
                        }
                        for (; r.have < 19; )
                            r.lens[Pe[r.have++]] = 0;
                        if (r.lencode = r.lendyn,
                        r.lenbits = 7,
                        Se = {
                            bits: r.lenbits
                        },
                        De = T(D, r.lens, 0, 19, r.lencode, 0, r.work, Se),
                        r.lenbits = Se.bits,
                        De) {
                            t.msg = "invalid code lengths set",
                            r.mode = fe;
                            break
                        }
                        r.have = 0,
                        r.mode = ee;
                    case ee:
                        for (; r.have < r.nlen + r.ndist; ) {
                            for (; Ae = r.lencode[f & (1 << r.lenbits) - 1],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (16 > ye)
                                f >>>= me,
                                d -= me,
                                r.lens[r.have++] = ye;
                            else {
                                if (16 === ye) {
                                    for (Ee = me + 2; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    if (f >>>= me,
                                    d -= me,
                                    0 === r.have) {
                                        t.msg = "invalid bit length repeat",
                                        r.mode = fe;
                                        break
                                    }
                                    Te = r.lens[r.have - 1],
                                    m = 3 + (3 & f),
                                    f >>>= 2,
                                    d -= 2
                                } else if (17 === ye) {
                                    for (Ee = me + 3; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    f >>>= me,
                                    d -= me,
                                    Te = 0,
                                    m = 3 + (7 & f),
                                    f >>>= 3,
                                    d -= 3
                                } else {
                                    for (Ee = me + 7; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    f >>>= me,
                                    d -= me,
                                    Te = 0,
                                    m = 11 + (127 & f),
                                    f >>>= 7,
                                    d -= 7
                                }
                                if (r.have + m > r.nlen + r.ndist) {
                                    t.msg = "invalid bit length repeat",
                                    r.mode = fe;
                                    break
                                }
                                for (; m--; )
                                    r.lens[r.have++] = Te
                            }
                        }
                        if (r.mode === fe)
                            break;
                        if (0 === r.lens[256]) {
                            t.msg = "invalid code -- missing end-of-block",
                            r.mode = fe;
                            break
                        }
                        if (r.lenbits = 9,
                        Se = {
                            bits: r.lenbits
                        },
                        De = T(S, r.lens, 0, r.nlen, r.lencode, 0, r.work, Se),
                        r.lenbits = Se.bits,
                        De) {
                            t.msg = "invalid literal/lengths set",
                            r.mode = fe;
                            break
                        }
                        if (r.distbits = 6,
                        r.distcode = r.distdyn,
                        Se = {
                            bits: r.distbits
                        },
                        De = T(E, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, Se),
                        r.distbits = Se.bits,
                        De) {
                            t.msg = "invalid distances set",
                            r.mode = fe;
                            break
                        }
                        if (r.mode = re,
                        e === P)
                            break t;
                    case re:
                        r.mode = ie;
                    case ie:
                        if (l >= 6 && h >= 258) {
                            t.next_out = o,
                            t.avail_out = h,
                            t.next_in = s,
                            t.avail_in = l,
                            r.hold = f,
                            r.bits = d,
                            w(t, _),
                            o = t.next_out,
                            a = t.output,
                            h = t.avail_out,
                            s = t.next_in,
                            n = t.input,
                            l = t.avail_in,
                            f = r.hold,
                            d = r.bits,
                            r.mode === X && (r.back = -1);
                            break
                        }
                        for (r.back = 0; Ae = r.lencode[f & (1 << r.lenbits) - 1],
                        me = Ae >>> 24,
                        ge = Ae >>> 16 & 255,
                        ye = 65535 & Ae,
                        !(d >= me); ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (ge && 0 === (240 & ge)) {
                            for (ve = me,
                            be = ge,
                            we = ye; Ae = r.lencode[we + ((f & (1 << ve + be) - 1) >> ve)],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= ve + me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            f >>>= ve,
                            d -= ve,
                            r.back += ve
                        }
                        if (f >>>= me,
                        d -= me,
                        r.back += me,
                        r.length = ye,
                        0 === ge) {
                            r.mode = le;
                            break
                        }
                        if (32 & ge) {
                            r.back = -1,
                            r.mode = X;
                            break
                        }
                        if (64 & ge) {
                            t.msg = "invalid literal/length code",
                            r.mode = fe;
                            break
                        }
                        r.extra = 15 & ge,
                        r.mode = ne;
                    case ne:
                        if (r.extra) {
                            for (Ee = r.extra; Ee > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.length += f & (1 << r.extra) - 1,
                            f >>>= r.extra,
                            d -= r.extra,
                            r.back += r.extra
                        }
                        r.was = r.length,
                        r.mode = ae;
                    case ae:
                        for (; Ae = r.distcode[f & (1 << r.distbits) - 1],
                        me = Ae >>> 24,
                        ge = Ae >>> 16 & 255,
                        ye = 65535 & Ae,
                        !(d >= me); ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (0 === (240 & ge)) {
                            for (ve = me,
                            be = ge,
                            we = ye; Ae = r.distcode[we + ((f & (1 << ve + be) - 1) >> ve)],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= ve + me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            f >>>= ve,
                            d -= ve,
                            r.back += ve
                        }
                        if (f >>>= me,
                        d -= me,
                        r.back += me,
                        64 & ge) {
                            t.msg = "invalid distance code",
                            r.mode = fe;
                            break
                        }
                        r.offset = ye,
                        r.extra = 15 & ge,
                        r.mode = se;
                    case se:
                        if (r.extra) {
                            for (Ee = r.extra; Ee > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.offset += f & (1 << r.extra) - 1,
                            f >>>= r.extra,
                            d -= r.extra,
                            r.back += r.extra
                        }
                        if (r.offset > r.dmax) {
                            t.msg = "invalid distance too far back",
                            r.mode = fe;
                            break
                        }
                        r.mode = oe;
                    case oe:
                        if (0 === h)
                            break t;
                        if (m = _ - h,
                        r.offset > m) {
                            if (m = r.offset - m,
                            m > r.whave && r.sane) {
                                t.msg = "invalid distance too far back",
                                r.mode = fe;
                                break
                            }
                            m > r.wnext ? (m -= r.wnext,
                            g = r.wsize - m) : g = r.wnext - m,
                            m > r.length && (m = r.length),
                            _e = r.window
                        } else
                            _e = a,
                            g = o - r.offset,
                            m = r.length;
                        m > h && (m = h),
                        h -= m,
                        r.length -= m;
                        do
                            a[o++] = _e[g++];
                        while (--m);0 === r.length && (r.mode = ie);
                        break;
                    case le:
                        if (0 === h)
                            break t;
                        a[o++] = r.length,
                        h--,
                        r.mode = ie;
                        break;
                    case he:
                        if (r.wrap) {
                            for (; 32 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f |= n[s++] << d,
                                d += 8
                            }
                            if (_ -= h,
                            t.total_out += _,
                            r.total += _,
                            _ && (t.adler = r.check = r.flags ? b(r.check, a, _, o - _) : v(r.check, a, _, o - _)),
                            _ = h,
                            (r.flags ? f : i(f)) !== r.check) {
                                t.msg = "incorrect data check",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.mode = ue;
                    case ue:
                        if (r.wrap && r.flags) {
                            for (; 32 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (f !== (4294967295 & r.total)) {
                                t.msg = "incorrect length check",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.mode = ce;
                    case ce:
                        De = O;
                        break t;
                    case fe:
                        De = R;
                        break t;
                    case de:
                        return B;
                    case pe:
                    default:
                        return I
                    }
                return t.next_out = o,
                t.avail_out = h,
                t.next_in = s,
                t.avail_in = l,
                r.hold = f,
                r.bits = d,
                (r.wsize || _ !== t.avail_out && r.mode < fe && (r.mode < he || e !== A)) && c(t, t.output, t.next_out, _ - t.avail_out) ? (r.mode = de,
                B) : (p -= t.avail_in,
                _ -= t.avail_out,
                t.total_in += p,
                t.total_out += _,
                r.total += _,
                r.wrap && _ && (t.adler = r.check = r.flags ? b(r.check, a, _, t.next_out - _) : v(r.check, a, _, t.next_out - _)),
                t.data_type = r.bits + (r.last ? 64 : 0) + (r.mode === X ? 128 : 0) + (r.mode === re || r.mode === K ? 256 : 0),
                (0 === p && 0 === _ || e === A) && De === C && (De = M),
                De)
            }
            function d(t) {
                if (!t || !t.state)
                    return I;
                var e = t.state;
                return e.window && (e.window = null),
                t.state = null,
                C
            }
            function p(t, e) {
                var r;
                return t && t.state ? (r = t.state,
                0 === (2 & r.wrap) ? I : (r.head = e,
                e.done = !1,
                C)) : I
            }
            function _(t, e) {
                var r, i, n, a = e.length;
                return t && t.state ? (r = t.state,
                0 !== r.wrap && r.mode !== Y ? I : r.mode === Y && (i = 1,
                i = v(i, e, a, 0),
                i !== r.check) ? R : (n = c(t, e, a, a)) ? (r.mode = de,
                B) : (r.havedict = 1,
                C)) : I
            }
            var m, g, y = t("../utils/common"), v = t("./adler32"), b = t("./crc32"), w = t("./inffast"), T = t("./inftrees"), D = 0, S = 1, E = 2, A = 4, x = 5, P = 6, C = 0, O = 1, k = 2, I = -2, R = -3, B = -4, M = -5, F = 8, L = 1, N = 2, j = 3, z = 4, U = 5, V = 6, $ = 7, G = 8, W = 9, H = 10, Y = 11, X = 12, Z = 13, q = 14, K = 15, J = 16, Q = 17, te = 18, ee = 19, re = 20, ie = 21, ne = 22, ae = 23, se = 24, oe = 25, le = 26, he = 27, ue = 28, ce = 29, fe = 30, de = 31, pe = 32, _e = 852, me = 592, ge = 15, ye = ge, ve = !0;
            r.inflateReset = s,
            r.inflateReset2 = o,
            r.inflateResetKeep = a,
            r.inflateInit = h,
            r.inflateInit2 = l,
            r.inflate = f,
            r.inflateEnd = d,
            r.inflateGetHeader = p,
            r.inflateSetDictionary = _,
            r.inflateInfo = "pako inflate (from Nodeca project)"
        }
        , {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./inffast": 69,
            "./inftrees": 71
        }],
        71: [function(t, e, r) {
            "use strict";
            var i = t("../utils/common")
              , n = 15
              , a = 852
              , s = 592
              , o = 0
              , l = 1
              , h = 2
              , u = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]
              , c = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]
              , f = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]
              , d = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            e.exports = function(t, e, r, p, _, m, g, y) {
                var v, b, w, T, D, S, E, A, x, P = y.bits, C = 0, O = 0, k = 0, I = 0, R = 0, B = 0, M = 0, F = 0, L = 0, N = 0, j = null, z = 0, U = new i.Buf16(n + 1), V = new i.Buf16(n + 1), $ = null, G = 0;
                for (C = 0; n >= C; C++)
                    U[C] = 0;
                for (O = 0; p > O; O++)
                    U[e[r + O]]++;
                for (R = P,
                I = n; I >= 1 && 0 === U[I]; I--)
                    ;
                if (R > I && (R = I),
                0 === I)
                    return _[m++] = 20971520,
                    _[m++] = 20971520,
                    y.bits = 1,
                    0;
                for (k = 1; I > k && 0 === U[k]; k++)
                    ;
                for (k > R && (R = k),
                F = 1,
                C = 1; n >= C; C++)
                    if (F <<= 1,
                    F -= U[C],
                    0 > F)
                        return -1;
                if (F > 0 && (t === o || 1 !== I))
                    return -1;
                for (V[1] = 0,
                C = 1; n > C; C++)
                    V[C + 1] = V[C] + U[C];
                for (O = 0; p > O; O++)
                    0 !== e[r + O] && (g[V[e[r + O]]++] = O);
                if (t === o ? (j = $ = g,
                S = 19) : t === l ? (j = u,
                z -= 257,
                $ = c,
                G -= 257,
                S = 256) : (j = f,
                $ = d,
                S = -1),
                N = 0,
                O = 0,
                C = k,
                D = m,
                B = R,
                M = 0,
                w = -1,
                L = 1 << R,
                T = L - 1,
                t === l && L > a || t === h && L > s)
                    return 1;
                for (; ; ) {
                    E = C - M,
                    g[O] < S ? (A = 0,
                    x = g[O]) : g[O] > S ? (A = $[G + g[O]],
                    x = j[z + g[O]]) : (A = 96,
                    x = 0),
                    v = 1 << C - M,
                    b = 1 << B,
                    k = b;
                    do
                        b -= v,
                        _[D + (N >> M) + b] = E << 24 | A << 16 | x | 0;
                    while (0 !== b);for (v = 1 << C - 1; N & v; )
                        v >>= 1;
                    if (0 !== v ? (N &= v - 1,
                    N += v) : N = 0,
                    O++,
                    0 === --U[C]) {
                        if (C === I)
                            break;
                        C = e[r + g[O]]
                    }
                    if (C > R && (N & T) !== w) {
                        for (0 === M && (M = R),
                        D += k,
                        B = C - M,
                        F = 1 << B; I > B + M && (F -= U[B + M],
                        !(0 >= F)); )
                            B++,
                            F <<= 1;
                        if (L += 1 << B,
                        t === l && L > a || t === h && L > s)
                            return 1;
                        w = N & T,
                        _[w] = R << 24 | B << 16 | D - m | 0
                    }
                }
                return 0 !== N && (_[D + N] = C - M << 24 | 64 << 16 | 0),
                y.bits = R,
                0
            }
        }
        , {
            "../utils/common": 62
        }],
        72: [function(t, e, r) {
            "use strict";
            e.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }
        , {}],
        73: [function(t, e, r) {
            "use strict";
            function i(t) {
                for (var e = t.length; --e >= 0; )
                    t[e] = 0
            }
            function n(t, e, r, i, n) {
                this.static_tree = t,
                this.extra_bits = e,
                this.extra_base = r,
                this.elems = i,
                this.max_length = n,
                this.has_stree = t && t.length
            }
            function a(t, e) {
                this.dyn_tree = t,
                this.max_code = 0,
                this.stat_desc = e
            }
            function s(t) {
                return 256 > t ? le[t] : le[256 + (t >>> 7)]
            }
            function o(t, e) {
                t.pending_buf[t.pending++] = 255 & e,
                t.pending_buf[t.pending++] = e >>> 8 & 255
            }
            function l(t, e, r) {
                t.bi_valid > Z - r ? (t.bi_buf |= e << t.bi_valid & 65535,
                o(t, t.bi_buf),
                t.bi_buf = e >> Z - t.bi_valid,
                t.bi_valid += r - Z) : (t.bi_buf |= e << t.bi_valid & 65535,
                t.bi_valid += r)
            }
            function h(t, e, r) {
                l(t, r[2 * e], r[2 * e + 1])
            }
            function u(t, e) {
                var r = 0;
                do
                    r |= 1 & t,
                    t >>>= 1,
                    r <<= 1;
                while (--e > 0);return r >>> 1
            }
            function c(t) {
                16 === t.bi_valid ? (o(t, t.bi_buf),
                t.bi_buf = 0,
                t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf,
                t.bi_buf >>= 8,
                t.bi_valid -= 8)
            }
            function f(t, e) {
                var r, i, n, a, s, o, l = e.dyn_tree, h = e.max_code, u = e.stat_desc.static_tree, c = e.stat_desc.has_stree, f = e.stat_desc.extra_bits, d = e.stat_desc.extra_base, p = e.stat_desc.max_length, _ = 0;
                for (a = 0; X >= a; a++)
                    t.bl_count[a] = 0;
                for (l[2 * t.heap[t.heap_max] + 1] = 0,
                r = t.heap_max + 1; Y > r; r++)
                    i = t.heap[r],
                    a = l[2 * l[2 * i + 1] + 1] + 1,
                    a > p && (a = p,
                    _++),
                    l[2 * i + 1] = a,
                    i > h || (t.bl_count[a]++,
                    s = 0,
                    i >= d && (s = f[i - d]),
                    o = l[2 * i],
                    t.opt_len += o * (a + s),
                    c && (t.static_len += o * (u[2 * i + 1] + s)));
                if (0 !== _) {
                    do {
                        for (a = p - 1; 0 === t.bl_count[a]; )
                            a--;
                        t.bl_count[a]--,
                        t.bl_count[a + 1] += 2,
                        t.bl_count[p]--,
                        _ -= 2
                    } while (_ > 0);for (a = p; 0 !== a; a--)
                        for (i = t.bl_count[a]; 0 !== i; )
                            n = t.heap[--r],
                            n > h || (l[2 * n + 1] !== a && (t.opt_len += (a - l[2 * n + 1]) * l[2 * n],
                            l[2 * n + 1] = a),
                            i--)
                }
            }
            function d(t, e, r) {
                var i, n, a = new Array(X + 1), s = 0;
                for (i = 1; X >= i; i++)
                    a[i] = s = s + r[i - 1] << 1;
                for (n = 0; e >= n; n++) {
                    var o = t[2 * n + 1];
                    0 !== o && (t[2 * n] = u(a[o]++, o))
                }
            }
            function p() {
                var t, e, r, i, a, s = new Array(X + 1);
                for (r = 0,
                i = 0; V - 1 > i; i++)
                    for (ue[i] = r,
                    t = 0; t < 1 << ee[i]; t++)
                        he[r++] = i;
                for (he[r - 1] = i,
                a = 0,
                i = 0; 16 > i; i++)
                    for (ce[i] = a,
                    t = 0; t < 1 << re[i]; t++)
                        le[a++] = i;
                for (a >>= 7; W > i; i++)
                    for (ce[i] = a << 7,
                    t = 0; t < 1 << re[i] - 7; t++)
                        le[256 + a++] = i;
                for (e = 0; X >= e; e++)
                    s[e] = 0;
                for (t = 0; 143 >= t; )
                    se[2 * t + 1] = 8,
                    t++,
                    s[8]++;
                for (; 255 >= t; )
                    se[2 * t + 1] = 9,
                    t++,
                    s[9]++;
                for (; 279 >= t; )
                    se[2 * t + 1] = 7,
                    t++,
                    s[7]++;
                for (; 287 >= t; )
                    se[2 * t + 1] = 8,
                    t++,
                    s[8]++;
                for (d(se, G + 1, s),
                t = 0; W > t; t++)
                    oe[2 * t + 1] = 5,
                    oe[2 * t] = u(t, 5);
                fe = new n(se,ee,$ + 1,G,X),
                de = new n(oe,re,0,W,X),
                pe = new n(new Array(0),ie,0,H,q)
            }
            function _(t) {
                var e;
                for (e = 0; G > e; e++)
                    t.dyn_ltree[2 * e] = 0;
                for (e = 0; W > e; e++)
                    t.dyn_dtree[2 * e] = 0;
                for (e = 0; H > e; e++)
                    t.bl_tree[2 * e] = 0;
                t.dyn_ltree[2 * K] = 1,
                t.opt_len = t.static_len = 0,
                t.last_lit = t.matches = 0
            }
            function m(t) {
                t.bi_valid > 8 ? o(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf),
                t.bi_buf = 0,
                t.bi_valid = 0
            }
            function g(t, e, r, i) {
                m(t),
                i && (o(t, r),
                o(t, ~r)),
                I.arraySet(t.pending_buf, t.window, e, r, t.pending),
                t.pending += r
            }
            function y(t, e, r, i) {
                var n = 2 * e
                  , a = 2 * r;
                return t[n] < t[a] || t[n] === t[a] && i[e] <= i[r]
            }
            function v(t, e, r) {
                for (var i = t.heap[r], n = r << 1; n <= t.heap_len && (n < t.heap_len && y(e, t.heap[n + 1], t.heap[n], t.depth) && n++,
                !y(e, i, t.heap[n], t.depth)); )
                    t.heap[r] = t.heap[n],
                    r = n,
                    n <<= 1;
                t.heap[r] = i
            }
            function b(t, e, r) {
                var i, n, a, o, u = 0;
                if (0 !== t.last_lit)
                    do
                        i = t.pending_buf[t.d_buf + 2 * u] << 8 | t.pending_buf[t.d_buf + 2 * u + 1],
                        n = t.pending_buf[t.l_buf + u],
                        u++,
                        0 === i ? h(t, n, e) : (a = he[n],
                        h(t, a + $ + 1, e),
                        o = ee[a],
                        0 !== o && (n -= ue[a],
                        l(t, n, o)),
                        i--,
                        a = s(i),
                        h(t, a, r),
                        o = re[a],
                        0 !== o && (i -= ce[a],
                        l(t, i, o)));
                    while (u < t.last_lit);h(t, K, e)
            }
            function w(t, e) {
                var r, i, n, a = e.dyn_tree, s = e.stat_desc.static_tree, o = e.stat_desc.has_stree, l = e.stat_desc.elems, h = -1;
                for (t.heap_len = 0,
                t.heap_max = Y,
                r = 0; l > r; r++)
                    0 !== a[2 * r] ? (t.heap[++t.heap_len] = h = r,
                    t.depth[r] = 0) : a[2 * r + 1] = 0;
                for (; t.heap_len < 2; )
                    n = t.heap[++t.heap_len] = 2 > h ? ++h : 0,
                    a[2 * n] = 1,
                    t.depth[n] = 0,
                    t.opt_len--,
                    o && (t.static_len -= s[2 * n + 1]);
                for (e.max_code = h,
                r = t.heap_len >> 1; r >= 1; r--)
                    v(t, a, r);
                n = l;
                do
                    r = t.heap[1],
                    t.heap[1] = t.heap[t.heap_len--],
                    v(t, a, 1),
                    i = t.heap[1],
                    t.heap[--t.heap_max] = r,
                    t.heap[--t.heap_max] = i,
                    a[2 * n] = a[2 * r] + a[2 * i],
                    t.depth[n] = (t.depth[r] >= t.depth[i] ? t.depth[r] : t.depth[i]) + 1,
                    a[2 * r + 1] = a[2 * i + 1] = n,
                    t.heap[1] = n++,
                    v(t, a, 1);
                while (t.heap_len >= 2);t.heap[--t.heap_max] = t.heap[1],
                f(t, e),
                d(a, h, t.bl_count)
            }
            function T(t, e, r) {
                var i, n, a = -1, s = e[1], o = 0, l = 7, h = 4;
                for (0 === s && (l = 138,
                h = 3),
                e[2 * (r + 1) + 1] = 65535,
                i = 0; r >= i; i++)
                    n = s,
                    s = e[2 * (i + 1) + 1],
                    ++o < l && n === s || (h > o ? t.bl_tree[2 * n] += o : 0 !== n ? (n !== a && t.bl_tree[2 * n]++,
                    t.bl_tree[2 * J]++) : 10 >= o ? t.bl_tree[2 * Q]++ : t.bl_tree[2 * te]++,
                    o = 0,
                    a = n,
                    0 === s ? (l = 138,
                    h = 3) : n === s ? (l = 6,
                    h = 3) : (l = 7,
                    h = 4))
            }
            function D(t, e, r) {
                var i, n, a = -1, s = e[1], o = 0, u = 7, c = 4;
                for (0 === s && (u = 138,
                c = 3),
                i = 0; r >= i; i++)
                    if (n = s,
                    s = e[2 * (i + 1) + 1],
                    !(++o < u && n === s)) {
                        if (c > o) {
                            do
                                h(t, n, t.bl_tree);
                            while (0 !== --o)
                        } else
                            0 !== n ? (n !== a && (h(t, n, t.bl_tree),
                            o--),
                            h(t, J, t.bl_tree),
                            l(t, o - 3, 2)) : 10 >= o ? (h(t, Q, t.bl_tree),
                            l(t, o - 3, 3)) : (h(t, te, t.bl_tree),
                            l(t, o - 11, 7));
                        o = 0,
                        a = n,
                        0 === s ? (u = 138,
                        c = 3) : n === s ? (u = 6,
                        c = 3) : (u = 7,
                        c = 4)
                    }
            }
            function S(t) {
                var e;
                for (T(t, t.dyn_ltree, t.l_desc.max_code),
                T(t, t.dyn_dtree, t.d_desc.max_code),
                w(t, t.bl_desc),
                e = H - 1; e >= 3 && 0 === t.bl_tree[2 * ne[e] + 1]; e--)
                    ;
                return t.opt_len += 3 * (e + 1) + 5 + 5 + 4,
                e
            }
            function E(t, e, r, i) {
                var n;
                for (l(t, e - 257, 5),
                l(t, r - 1, 5),
                l(t, i - 4, 4),
                n = 0; i > n; n++)
                    l(t, t.bl_tree[2 * ne[n] + 1], 3);
                D(t, t.dyn_ltree, e - 1),
                D(t, t.dyn_dtree, r - 1)
            }
            function A(t) {
                var e, r = 4093624447;
                for (e = 0; 31 >= e; e++,
                r >>>= 1)
                    if (1 & r && 0 !== t.dyn_ltree[2 * e])
                        return B;
                if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26])
                    return M;
                for (e = 32; $ > e; e++)
                    if (0 !== t.dyn_ltree[2 * e])
                        return M;
                return B
            }
            function x(t) {
                _e || (p(),
                _e = !0),
                t.l_desc = new a(t.dyn_ltree,fe),
                t.d_desc = new a(t.dyn_dtree,de),
                t.bl_desc = new a(t.bl_tree,pe),
                t.bi_buf = 0,
                t.bi_valid = 0,
                _(t)
            }
            function P(t, e, r, i) {
                l(t, (L << 1) + (i ? 1 : 0), 3),
                g(t, e, r, !0)
            }
            function C(t) {
                l(t, N << 1, 3),
                h(t, K, se),
                c(t)
            }
            function O(t, e, r, i) {
                var n, a, s = 0;
                t.level > 0 ? (t.strm.data_type === F && (t.strm.data_type = A(t)),
                w(t, t.l_desc),
                w(t, t.d_desc),
                s = S(t),
                n = t.opt_len + 3 + 7 >>> 3,
                a = t.static_len + 3 + 7 >>> 3,
                n >= a && (n = a)) : n = a = r + 5,
                n >= r + 4 && -1 !== e ? P(t, e, r, i) : t.strategy === R || a === n ? (l(t, (N << 1) + (i ? 1 : 0), 3),
                b(t, se, oe)) : (l(t, (j << 1) + (i ? 1 : 0), 3),
                E(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, s + 1),
                b(t, t.dyn_ltree, t.dyn_dtree)),
                _(t),
                i && m(t)
            }
            function k(t, e, r) {
                return t.pending_buf[t.d_buf + 2 * t.last_lit] = e >>> 8 & 255,
                t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e,
                t.pending_buf[t.l_buf + t.last_lit] = 255 & r,
                t.last_lit++,
                0 === e ? t.dyn_ltree[2 * r]++ : (t.matches++,
                e--,
                t.dyn_ltree[2 * (he[r] + $ + 1)]++,
                t.dyn_dtree[2 * s(e)]++),
                t.last_lit === t.lit_bufsize - 1
            }
            var I = t("../utils/common")
              , R = 4
              , B = 0
              , M = 1
              , F = 2
              , L = 0
              , N = 1
              , j = 2
              , z = 3
              , U = 258
              , V = 29
              , $ = 256
              , G = $ + 1 + V
              , W = 30
              , H = 19
              , Y = 2 * G + 1
              , X = 15
              , Z = 16
              , q = 7
              , K = 256
              , J = 16
              , Q = 17
              , te = 18
              , ee = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              , re = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              , ie = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              , ne = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
              , ae = 512
              , se = new Array(2 * (G + 2));
            i(se);
            var oe = new Array(2 * W);
            i(oe);
            var le = new Array(ae);
            i(le);
            var he = new Array(U - z + 1);
            i(he);
            var ue = new Array(V);
            i(ue);
            var ce = new Array(W);
            i(ce);
            var fe, de, pe, _e = !1;
            r._tr_init = x,
            r._tr_stored_block = P,
            r._tr_flush_block = O,
            r._tr_tally = k,
            r._tr_align = C
        }
        , {
            "../utils/common": 62
        }],
        74: [function(t, e, r) {
            "use strict";
            function i() {
                this.input = null,
                this.next_in = 0,
                this.avail_in = 0,
                this.total_in = 0,
                this.output = null,
                this.next_out = 0,
                this.avail_out = 0,
                this.total_out = 0,
                this.msg = "",
                this.state = null,
                this.data_type = 2,
                this.adler = 0
            }
            e.exports = i
        }
        , {}]
    }, {}, [10])(10)
}),
!function(t) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd)
        define([], t);
    else {
        var e;
        e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
        e.JSZip = t()
    }
}(function() {
    return function t(e, r, i) {
        function n(s, o) {
            if (!r[s]) {
                if (!e[s]) {
                    var l = "function" == typeof require && require;
                    if (!o && l)
                        return l(s, !0);
                    if (a)
                        return a(s, !0);
                    var h = new Error("Cannot find module '" + s + "'");
                    throw h.code = "MODULE_NOT_FOUND",
                    h
                }
                var u = r[s] = {
                    exports: {}
                };
                e[s][0].call(u.exports, function(t) {
                    var r = e[s][1][t];
                    return n(r ? r : t)
                }, u, u.exports, t, e, r, i)
            }
            return r[s].exports
        }
        for (var a = "function" == typeof require && require, s = 0; s < i.length; s++)
            n(i[s]);
        return n
    }({
        1: [function(t, e, r) {
            "use strict";
            var i = t("./utils")
              , n = t("./support")
              , a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            r.encode = function(t) {
                for (var e, r, n, s, o, l, h, u = [], c = 0, f = t.length, d = f, p = "string" !== i.getTypeOf(t); c < t.length; )
                    d = f - c,
                    p ? (e = t[c++],
                    r = f > c ? t[c++] : 0,
                    n = f > c ? t[c++] : 0) : (e = t.charCodeAt(c++),
                    r = f > c ? t.charCodeAt(c++) : 0,
                    n = f > c ? t.charCodeAt(c++) : 0),
                    s = e >> 2,
                    o = (3 & e) << 4 | r >> 4,
                    l = d > 1 ? (15 & r) << 2 | n >> 6 : 64,
                    h = d > 2 ? 63 & n : 64,
                    u.push(a.charAt(s) + a.charAt(o) + a.charAt(l) + a.charAt(h));
                return u.join("")
            }
            ,
            r.decode = function(t) {
                var e, r, i, s, o, l, h, u = 0, c = 0, f = "data:";
                if (t.substr(0, f.length) === f)
                    throw new Error("Invalid base64 input, it looks like a data url.");
                t = t.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                var d = 3 * t.length / 4;
                if (t.charAt(t.length - 1) === a.charAt(64) && d--,
                t.charAt(t.length - 2) === a.charAt(64) && d--,
                d % 1 !== 0)
                    throw new Error("Invalid base64 input, bad content length.");
                var p;
                for (p = n.uint8array ? new Uint8Array(0 | d) : new Array(0 | d); u < t.length; )
                    s = a.indexOf(t.charAt(u++)),
                    o = a.indexOf(t.charAt(u++)),
                    l = a.indexOf(t.charAt(u++)),
                    h = a.indexOf(t.charAt(u++)),
                    e = s << 2 | o >> 4,
                    r = (15 & o) << 4 | l >> 2,
                    i = (3 & l) << 6 | h,
                    p[c++] = e,
                    64 !== l && (p[c++] = r),
                    64 !== h && (p[c++] = i);
                return p
            }
        }
        , {
            "./support": 30,
            "./utils": 32
        }],
        2: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i, n) {
                this.compressedSize = t,
                this.uncompressedSize = e,
                this.crc32 = r,
                this.compression = i,
                this.compressedContent = n
            }
            var n = t("./external")
              , a = t("./stream/DataWorker")
              , s = t("./stream/DataLengthProbe")
              , o = t("./stream/Crc32Probe")
              , s = t("./stream/DataLengthProbe");
            i.prototype = {
                getContentWorker: function() {
                    var t = new a(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new s("data_length"))
                      , e = this;
                    return t.on("end", function() {
                        if (this.streamInfo.data_length !== e.uncompressedSize)
                            throw new Error("Bug : uncompressed data size mismatch")
                    }),
                    t
                },
                getCompressedWorker: function() {
                    return new a(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression)
                }
            },
            i.createWorkerFrom = function(t, e, r) {
                return t.pipe(new o).pipe(new s("uncompressedSize")).pipe(e.compressWorker(r)).pipe(new s("compressedSize")).withStreamInfo("compression", e)
            }
            ,
            e.exports = i
        }
        , {
            "./external": 6,
            "./stream/Crc32Probe": 25,
            "./stream/DataLengthProbe": 26,
            "./stream/DataWorker": 27
        }],
        3: [function(t, e, r) {
            "use strict";
            var i = t("./stream/GenericWorker");
            r.STORE = {
                magic: "\x00\x00",
                compressWorker: function(t) {
                    return new i("STORE compression")
                },
                uncompressWorker: function() {
                    return new i("STORE decompression")
                }
            },
            r.DEFLATE = t("./flate")
        }
        , {
            "./flate": 7,
            "./stream/GenericWorker": 28
        }],
        4: [function(t, e, r) {
            "use strict";
            function i() {
                for (var t, e = [], r = 0; 256 > r; r++) {
                    t = r;
                    for (var i = 0; 8 > i; i++)
                        t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    e[r] = t
                }
                return e
            }
            function n(t, e, r, i) {
                var n = o
                  , a = i + r;
                t ^= -1;
                for (var s = i; a > s; s++)
                    t = t >>> 8 ^ n[255 & (t ^ e[s])];
                return -1 ^ t
            }
            function a(t, e, r, i) {
                var n = o
                  , a = i + r;
                t ^= -1;
                for (var s = i; a > s; s++)
                    t = t >>> 8 ^ n[255 & (t ^ e.charCodeAt(s))];
                return -1 ^ t
            }
            var s = t("./utils")
              , o = i();
            e.exports = function(t, e) {
                if ("undefined" == typeof t || !t.length)
                    return 0;
                var r = "string" !== s.getTypeOf(t);
                return r ? n(0 | e, t, t.length, 0) : a(0 | e, t, t.length, 0)
            }
        }
        , {
            "./utils": 32
        }],
        5: [function(t, e, r) {
            "use strict";
            r.base64 = !1,
            r.binary = !1,
            r.dir = !1,
            r.createFolders = !0,
            r.date = null,
            r.compression = null,
            r.compressionOptions = null,
            r.comment = null,
            r.unixPermissions = null,
            r.dosPermissions = null
        }
        , {}],
        6: [function(t, e, r) {
            "use strict";
            var i = null;
            i = "undefined" != typeof Promise ? Promise : t("lie"),
            e.exports = {
                Promise: i
            }
        }
        , {
            lie: 58
        }],
        7: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                o.call(this, "FlateWorker/" + t),
                this._pako = null,
                this._pakoAction = t,
                this._pakoOptions = e,
                this.meta = {}
            }
            var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array
              , a = t("pako")
              , s = t("./utils")
              , o = t("./stream/GenericWorker")
              , l = n ? "uint8array" : "array";
            r.magic = "\b\x00",
            s.inherits(i, o),
            i.prototype.processChunk = function(t) {
                this.meta = t.meta,
                null === this._pako && this._createPako(),
                this._pako.push(s.transformTo(l, t.data), !1)
            }
            ,
            i.prototype.flush = function() {
                o.prototype.flush.call(this),
                null === this._pako && this._createPako(),
                this._pako.push([], !0)
            }
            ,
            i.prototype.cleanUp = function() {
                o.prototype.cleanUp.call(this),
                this._pako = null
            }
            ,
            i.prototype._createPako = function() {
                this._pako = new a[this._pakoAction]({
                    raw: !0,
                    level: this._pakoOptions.level || -1
                });
                var t = this;
                this._pako.onData = function(e) {
                    t.push({
                        data: e,
                        meta: t.meta
                    })
                }
            }
            ,
            r.compressWorker = function(t) {
                return new i("Deflate",t)
            }
            ,
            r.uncompressWorker = function() {
                return new i("Inflate",{})
            }
        }
        , {
            "./stream/GenericWorker": 28,
            "./utils": 32,
            pako: 59
        }],
        8: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i) {
                a.call(this, "ZipFileWorker"),
                this.bytesWritten = 0,
                this.zipComment = e,
                this.zipPlatform = r,
                this.encodeFileName = i,
                this.streamFiles = t,
                this.accumulate = !1,
                this.contentBuffer = [],
                this.dirRecords = [],
                this.currentSourceOffset = 0,
                this.entriesCount = 0,
                this.currentFile = null,
                this._sources = []
            }
            var n = t("../utils")
              , a = t("../stream/GenericWorker")
              , s = t("../utf8")
              , o = t("../crc32")
              , l = t("../signature")
              , h = function(t, e) {
                var r, i = "";
                for (r = 0; e > r; r++)
                    i += String.fromCharCode(255 & t),
                    t >>>= 8;
                return i
            }
              , u = function(t, e) {
                var r = t;
                return t || (r = e ? 16893 : 33204),
                (65535 & r) << 16
            }
              , c = function(t, e) {
                return 63 & (t || 0)
            }
              , f = function(t, e, r, i, a, f) {
                var d, p, _ = t.file, m = t.compression, g = f !== s.utf8encode, y = n.transformTo("string", f(_.name)), v = n.transformTo("string", s.utf8encode(_.name)), b = _.comment, w = n.transformTo("string", f(b)), T = n.transformTo("string", s.utf8encode(b)), D = v.length !== _.name.length, S = T.length !== b.length, E = "", A = "", x = "", P = _.dir, C = _.date, O = {
                    crc32: 0,
                    compressedSize: 0,
                    uncompressedSize: 0
                };
                e && !r || (O.crc32 = t.crc32,
                O.compressedSize = t.compressedSize,
                O.uncompressedSize = t.uncompressedSize);
                var k = 0;
                e && (k |= 8),
                g || !D && !S || (k |= 2048);
                var I = 0
                  , R = 0;
                P && (I |= 16),
                "UNIX" === a ? (R = 798,
                I |= u(_.unixPermissions, P)) : (R = 20,
                I |= c(_.dosPermissions, P)),
                d = C.getUTCHours(),
                d <<= 6,
                d |= C.getUTCMinutes(),
                d <<= 5,
                d |= C.getUTCSeconds() / 2,
                p = C.getUTCFullYear() - 1980,
                p <<= 4,
                p |= C.getUTCMonth() + 1,
                p <<= 5,
                p |= C.getUTCDate(),
                D && (A = h(1, 1) + h(o(y), 4) + v,
                E += "up" + h(A.length, 2) + A),
                S && (x = h(1, 1) + h(o(w), 4) + T,
                E += "uc" + h(x.length, 2) + x);
                var B = "";
                B += "\n\x00",
                B += h(k, 2),
                B += m.magic,
                B += h(d, 2),
                B += h(p, 2),
                B += h(O.crc32, 4),
                B += h(O.compressedSize, 4),
                B += h(O.uncompressedSize, 4),
                B += h(y.length, 2),
                B += h(E.length, 2);
                var M = l.LOCAL_FILE_HEADER + B + y + E
                  , F = l.CENTRAL_FILE_HEADER + h(R, 2) + B + h(w.length, 2) + "\x00\x00\x00\x00" + h(I, 4) + h(i, 4) + y + E + w;
                return {
                    fileRecord: M,
                    dirRecord: F
                }
            }
              , d = function(t, e, r, i, a) {
                var s = ""
                  , o = n.transformTo("string", a(i));
                return s = l.CENTRAL_DIRECTORY_END + "\x00\x00\x00\x00" + h(t, 2) + h(t, 2) + h(e, 4) + h(r, 4) + h(o.length, 2) + o
            }
              , p = function(t) {
                var e = "";
                return e = l.DATA_DESCRIPTOR + h(t.crc32, 4) + h(t.compressedSize, 4) + h(t.uncompressedSize, 4)
            };
            n.inherits(i, a),
            i.prototype.push = function(t) {
                var e = t.meta.percent || 0
                  , r = this.entriesCount
                  , i = this._sources.length;
                this.accumulate ? this.contentBuffer.push(t) : (this.bytesWritten += t.data.length,
                a.prototype.push.call(this, {
                    data: t.data,
                    meta: {
                        currentFile: this.currentFile,
                        percent: r ? (e + 100 * (r - i - 1)) / r : 100
                    }
                }))
            }
            ,
            i.prototype.openedSource = function(t) {
                this.currentSourceOffset = this.bytesWritten,
                this.currentFile = t.file.name;
                var e = this.streamFiles && !t.file.dir;
                if (e) {
                    var r = f(t, e, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                    this.push({
                        data: r.fileRecord,
                        meta: {
                            percent: 0
                        }
                    })
                } else
                    this.accumulate = !0
            }
            ,
            i.prototype.closedSource = function(t) {
                this.accumulate = !1;
                var e = this.streamFiles && !t.file.dir
                  , r = f(t, e, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
                if (this.dirRecords.push(r.dirRecord),
                e)
                    this.push({
                        data: p(t),
                        meta: {
                            percent: 100
                        }
                    });
                else
                    for (this.push({
                        data: r.fileRecord,
                        meta: {
                            percent: 0
                        }
                    }); this.contentBuffer.length; )
                        this.push(this.contentBuffer.shift());
                this.currentFile = null
            }
            ,
            i.prototype.flush = function() {
                for (var t = this.bytesWritten, e = 0; e < this.dirRecords.length; e++)
                    this.push({
                        data: this.dirRecords[e],
                        meta: {
                            percent: 100
                        }
                    });
                var r = this.bytesWritten - t
                  , i = d(this.dirRecords.length, r, t, this.zipComment, this.encodeFileName);
                this.push({
                    data: i,
                    meta: {
                        percent: 100
                    }
                })
            }
            ,
            i.prototype.prepareNextSource = function() {
                this.previous = this._sources.shift(),
                this.openedSource(this.previous.streamInfo),
                this.isPaused ? this.previous.pause() : this.previous.resume()
            }
            ,
            i.prototype.registerPrevious = function(t) {
                this._sources.push(t);
                var e = this;
                return t.on("data", function(t) {
                    e.processChunk(t)
                }),
                t.on("end", function() {
                    e.closedSource(e.previous.streamInfo),
                    e._sources.length ? e.prepareNextSource() : e.end()
                }),
                t.on("error", function(t) {
                    e.error(t)
                }),
                this
            }
            ,
            i.prototype.resume = function() {
                return !!a.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(),
                !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(),
                !0))
            }
            ,
            i.prototype.error = function(t) {
                var e = this._sources;
                if (!a.prototype.error.call(this, t))
                    return !1;
                for (var r = 0; r < e.length; r++)
                    try {
                        e[r].error(t)
                    } catch (t) {}
                return !0
            }
            ,
            i.prototype.lock = function() {
                a.prototype.lock.call(this);
                for (var t = this._sources, e = 0; e < t.length; e++)
                    t[e].lock()
            }
            ,
            e.exports = i
        }
        , {
            "../crc32": 4,
            "../signature": 23,
            "../stream/GenericWorker": 28,
            "../utf8": 31,
            "../utils": 32
        }],
        9: [function(t, e, r) {
            "use strict";
            var i = t("../compressions")
              , n = t("./ZipFileWorker")
              , a = function(t, e) {
                var r = t || e
                  , n = i[r];
                if (!n)
                    throw new Error(r + " is not a valid compression method !");
                return n
            };
            r.generateWorker = function(t, e, r) {
                var i = new n(e.streamFiles,r,e.platform,e.encodeFileName)
                  , s = 0;
                try {
                    t.forEach(function(t, r) {
                        s++;
                        var n = a(r.options.compression, e.compression)
                          , o = r.options.compressionOptions || e.compressionOptions || {}
                          , l = r.dir
                          , h = r.date;
                        r._compressWorker(n, o).withStreamInfo("file", {
                            name: t,
                            dir: l,
                            date: h,
                            comment: r.comment || "",
                            unixPermissions: r.unixPermissions,
                            dosPermissions: r.dosPermissions
                        }).pipe(i)
                    }),
                    i.entriesCount = s
                } catch (o) {
                    i.error(o)
                }
                return i
            }
        }
        , {
            "../compressions": 3,
            "./ZipFileWorker": 8
        }],
        10: [function(t, e, r) {
            "use strict";
            function i() {
                if (!(this instanceof i))
                    return new i;
                if (arguments.length)
                    throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
                this.files = {},
                this.comment = null,
                this.root = "",
                this.clone = function() {
                    var t = new i;
                    for (var e in this)
                        "function" != typeof this[e] && (t[e] = this[e]);
                    return t
                }
            }
            i.prototype = t("./object"),
            i.prototype.loadAsync = t("./load"),
            i.support = t("./support"),
            i.defaults = t("./defaults"),
            i.version = "3.1.5",
            i.loadAsync = function(t, e) {
                return (new i).loadAsync(t, e)
            }
            ,
            i.external = t("./external"),
            e.exports = i
        }
        , {
            "./defaults": 5,
            "./external": 6,
            "./load": 11,
            "./object": 15,
            "./support": 30
        }],
        11: [function(t, e, r) {
            "use strict";
            function i(t) {
                return new a.Promise(function(e, r) {
                    var i = t.decompressed.getContentWorker().pipe(new l);
                    i.on("error", function(t) {
                        r(t)
                    }).on("end", function() {
                        i.streamInfo.crc32 !== t.decompressed.crc32 ? r(new Error("Corrupted zip : CRC32 mismatch")) : e()
                    }).resume()
                }
                )
            }
            var n = t("./utils")
              , a = t("./external")
              , s = t("./utf8")
              , n = t("./utils")
              , o = t("./zipEntries")
              , l = t("./stream/Crc32Probe")
              , h = t("./nodejsUtils");
            e.exports = function(t, e) {
                var r = this;
                return e = n.extend(e || {}, {
                    base64: !1,
                    checkCRC32: !1,
                    optimizedBinaryString: !1,
                    createFolders: !1,
                    decodeFileName: s.utf8decode
                }),
                h.isNode && h.isStream(t) ? a.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : n.prepareContent("the loaded zip file", t, !0, e.optimizedBinaryString, e.base64).then(function(t) {
                    var r = new o(e);
                    return r.load(t),
                    r
                }).then(function(t) {
                    var r = [a.Promise.resolve(t)]
                      , n = t.files;
                    if (e.checkCRC32)
                        for (var s = 0; s < n.length; s++)
                            r.push(i(n[s]));
                    return a.Promise.all(r)
                }).then(function(t) {
                    for (var i = t.shift(), n = i.files, a = 0; a < n.length; a++) {
                        var s = n[a];
                        r.file(s.fileNameStr, s.decompressed, {
                            binary: !0,
                            optimizedBinaryString: !0,
                            date: s.date,
                            dir: s.dir,
                            comment: s.fileCommentStr.length ? s.fileCommentStr : null,
                            unixPermissions: s.unixPermissions,
                            dosPermissions: s.dosPermissions,
                            createFolders: e.createFolders
                        })
                    }
                    return i.zipComment.length && (r.comment = i.zipComment),
                    r
                })
            }
        }
        , {
            "./external": 6,
            "./nodejsUtils": 14,
            "./stream/Crc32Probe": 25,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntries": 33
        }],
        12: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                a.call(this, "Nodejs stream input adapter for " + t),
                this._upstreamEnded = !1,
                this._bindStream(e)
            }
            var n = t("../utils")
              , a = t("../stream/GenericWorker");
            n.inherits(i, a),
            i.prototype._bindStream = function(t) {
                var e = this;
                this._stream = t,
                t.pause(),
                t.on("data", function(t) {
                    e.push({
                        data: t,
                        meta: {
                            percent: 0
                        }
                    })
                }).on("error", function(t) {
                    e.isPaused ? this.generatedError = t : e.error(t)
                }).on("end", function() {
                    e.isPaused ? e._upstreamEnded = !0 : e.end()
                })
            }
            ,
            i.prototype.pause = function() {
                return !!a.prototype.pause.call(this) && (this._stream.pause(),
                !0)
            }
            ,
            i.prototype.resume = function() {
                return !!a.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(),
                !0)
            }
            ,
            e.exports = i
        }
        , {
            "../stream/GenericWorker": 28,
            "../utils": 32
        }],
        13: [function(t, e, r) {
            "use strict";
            function i(t, e, r) {
                n.call(this, e),
                this._helper = t;
                var i = this;
                t.on("data", function(t, e) {
                    i.push(t) || i._helper.pause(),
                    r && r(e)
                }).on("error", function(t) {
                    i.emit("error", t)
                }).on("end", function() {
                    i.push(null)
                })
            }
            var n = t("readable-stream").Readable
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype._read = function() {
                this._helper.resume()
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "readable-stream": 16
        }],
        14: [function(t, e, r) {
            "use strict";
            e.exports = {
                isNode: "undefined" != typeof Buffer,
                newBufferFrom: function(t, e) {
                    return new Buffer(t,e)
                },
                allocBuffer: function(t) {
                    return Buffer.alloc ? Buffer.alloc(t) : new Buffer(t)
                },
                isBuffer: function(t) {
                    return Buffer.isBuffer(t)
                },
                isStream: function(t) {
                    return t && "function" == typeof t.on && "function" == typeof t.pause && "function" == typeof t.resume
                }
            }
        }
        , {}],
        15: [function(t, e, r) {
            "use strict";
            function i(t) {
                return "[object RegExp]" === Object.prototype.toString.call(t)
            }
            var n = t("./utf8")
              , a = t("./utils")
              , s = t("./stream/GenericWorker")
              , o = t("./stream/StreamHelper")
              , l = t("./defaults")
              , h = t("./compressedObject")
              , u = t("./zipObject")
              , c = t("./generate")
              , f = t("./nodejsUtils")
              , d = t("./nodejs/NodejsStreamInputAdapter")
              , p = function(t, e, r) {
                var i, n = a.getTypeOf(e), o = a.extend(r || {}, l);
                o.date = o.date || new Date,
                null !== o.compression && (o.compression = o.compression.toUpperCase()),
                "string" == typeof o.unixPermissions && (o.unixPermissions = parseInt(o.unixPermissions, 8)),
                o.unixPermissions && 16384 & o.unixPermissions && (o.dir = !0),
                o.dosPermissions && 16 & o.dosPermissions && (o.dir = !0),
                o.dir && (t = m(t)),
                o.createFolders && (i = _(t)) && g.call(this, i, !0);
                var c = "string" === n && o.binary === !1 && o.base64 === !1;
                r && "undefined" != typeof r.binary || (o.binary = !c);
                var p = e instanceof h && 0 === e.uncompressedSize;
                (p || o.dir || !e || 0 === e.length) && (o.base64 = !1,
                o.binary = !0,
                e = "",
                o.compression = "STORE",
                n = "string");
                var y = null;
                y = e instanceof h || e instanceof s ? e : f.isNode && f.isStream(e) ? new d(t,e) : a.prepareContent(t, e, o.binary, o.optimizedBinaryString, o.base64);
                var v = new u(t,y,o);
                this.files[t] = v
            }
              , _ = function(t) {
                "/" === t.slice(-1) && (t = t.substring(0, t.length - 1));
                var e = t.lastIndexOf("/");
                return e > 0 ? t.substring(0, e) : ""
            }
              , m = function(t) {
                return "/" !== t.slice(-1) && (t += "/"),
                t
            }
              , g = function(t, e) {
                return e = "undefined" != typeof e ? e : l.createFolders,
                t = m(t),
                this.files[t] || p.call(this, t, null, {
                    dir: !0,
                    createFolders: e
                }),
                this.files[t]
            }
              , y = {
                load: function() {
                    throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                },
                forEach: function(t) {
                    var e, r, i;
                    for (e in this.files)
                        this.files.hasOwnProperty(e) && (i = this.files[e],
                        r = e.slice(this.root.length, e.length),
                        r && e.slice(0, this.root.length) === this.root && t(r, i))
                },
                filter: function(t) {
                    var e = [];
                    return this.forEach(function(r, i) {
                        t(r, i) && e.push(i)
                    }),
                    e
                },
                file: function(t, e, r) {
                    if (1 === arguments.length) {
                        if (i(t)) {
                            var n = t;
                            return this.filter(function(t, e) {
                                return !e.dir && n.test(t)
                            })
                        }
                        var a = this.files[this.root + t];
                        return a && !a.dir ? a : null
                    }
                    return t = this.root + t,
                    p.call(this, t, e, r),
                    this
                },
                folder: function(t) {
                    if (!t)
                        return this;
                    if (i(t))
                        return this.filter(function(e, r) {
                            return r.dir && t.test(e)
                        });
                    var e = this.root + t
                      , r = g.call(this, e)
                      , n = this.clone();
                    return n.root = r.name,
                    n
                },
                remove: function(t) {
                    t = this.root + t;
                    var e = this.files[t];
                    if (e || ("/" !== t.slice(-1) && (t += "/"),
                    e = this.files[t]),
                    e && !e.dir)
                        delete this.files[t];
                    else
                        for (var r = this.filter(function(e, r) {
                            return r.name.slice(0, t.length) === t
                        }), i = 0; i < r.length; i++)
                            delete this.files[r[i].name];
                    return this
                },
                generate: function(t) {
                    throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
                },
                generateInternalStream: function(t) {
                    var e, r = {};
                    try {
                        if (r = a.extend(t || {}, {
                            streamFiles: !1,
                            compression: "STORE",
                            compressionOptions: null,
                            type: "",
                            platform: "DOS",
                            comment: null,
                            mimeType: "application/zip",
                            encodeFileName: n.utf8encode
                        }),
                        r.type = r.type.toLowerCase(),
                        r.compression = r.compression.toUpperCase(),
                        "binarystring" === r.type && (r.type = "string"),
                        !r.type)
                            throw new Error("No output type specified.");
                        a.checkSupport(r.type),
                        "darwin" !== r.platform && "freebsd" !== r.platform && "linux" !== r.platform && "sunos" !== r.platform || (r.platform = "UNIX"),
                        "win32" === r.platform && (r.platform = "DOS");
                        var i = r.comment || this.comment || "";
                        e = c.generateWorker(this, r, i)
                    } catch (l) {
                        e = new s("error"),
                        e.error(l)
                    }
                    return new o(e,r.type || "string",r.mimeType)
                },
                generateAsync: function(t, e) {
                    return this.generateInternalStream(t).accumulate(e)
                },
                generateNodeStream: function(t, e) {
                    return t = t || {},
                    t.type || (t.type = "nodebuffer"),
                    this.generateInternalStream(t).toNodejsStream(e)
                }
            };
            e.exports = y
        }
        , {
            "./compressedObject": 2,
            "./defaults": 5,
            "./generate": 9,
            "./nodejs/NodejsStreamInputAdapter": 12,
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31,
            "./utils": 32,
            "./zipObject": 35
        }],
        16: [function(t, e, r) {
            e.exports = t("stream")
        }
        , {
            stream: void 0
        }],
        17: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t);
                for (var e = 0; e < this.data.length; e++)
                    t[e] = 255 & t[e]
            }
            var n = t("./DataReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.byteAt = function(t) {
                return this.data[this.zero + t]
            }
            ,
            i.prototype.lastIndexOfSignature = function(t) {
                for (var e = t.charCodeAt(0), r = t.charCodeAt(1), i = t.charCodeAt(2), n = t.charCodeAt(3), a = this.length - 4; a >= 0; --a)
                    if (this.data[a] === e && this.data[a + 1] === r && this.data[a + 2] === i && this.data[a + 3] === n)
                        return a - this.zero;
                return -1
            }
            ,
            i.prototype.readAndCheckSignature = function(t) {
                var e = t.charCodeAt(0)
                  , r = t.charCodeAt(1)
                  , i = t.charCodeAt(2)
                  , n = t.charCodeAt(3)
                  , a = this.readData(4);
                return e === a[0] && r === a[1] && i === a[2] && n === a[3]
            }
            ,
            i.prototype.readData = function(t) {
                if (this.checkOffset(t),
                0 === t)
                    return [];
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./DataReader": 18
        }],
        18: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.data = t,
                this.length = t.length,
                this.index = 0,
                this.zero = 0
            }
            var n = t("../utils");
            i.prototype = {
                checkOffset: function(t) {
                    this.checkIndex(this.index + t)
                },
                checkIndex: function(t) {
                    if (this.length < this.zero + t || 0 > t)
                        throw new Error("End of data reached (data length = " + this.length + ", asked index = " + t + "). Corrupted zip ?")
                },
                setIndex: function(t) {
                    this.checkIndex(t),
                    this.index = t
                },
                skip: function(t) {
                    this.setIndex(this.index + t)
                },
                byteAt: function(t) {},
                readInt: function(t) {
                    var e, r = 0;
                    for (this.checkOffset(t),
                    e = this.index + t - 1; e >= this.index; e--)
                        r = (r << 8) + this.byteAt(e);
                    return this.index += t,
                    r
                },
                readString: function(t) {
                    return n.transformTo("string", this.readData(t))
                },
                readData: function(t) {},
                lastIndexOfSignature: function(t) {},
                readAndCheckSignature: function(t) {},
                readDate: function() {
                    var t = this.readInt(4);
                    return new Date(Date.UTC((t >> 25 & 127) + 1980, (t >> 21 & 15) - 1, t >> 16 & 31, t >> 11 & 31, t >> 5 & 63, (31 & t) << 1))
                }
            },
            e.exports = i
        }
        , {
            "../utils": 32
        }],
        19: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./Uint8ArrayReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.readData = function(t) {
                this.checkOffset(t);
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./Uint8ArrayReader": 21
        }],
        20: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./DataReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.byteAt = function(t) {
                return this.data.charCodeAt(this.zero + t)
            }
            ,
            i.prototype.lastIndexOfSignature = function(t) {
                return this.data.lastIndexOf(t) - this.zero
            }
            ,
            i.prototype.readAndCheckSignature = function(t) {
                var e = this.readData(4);
                return t === e
            }
            ,
            i.prototype.readData = function(t) {
                this.checkOffset(t);
                var e = this.data.slice(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./DataReader": 18
        }],
        21: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, t)
            }
            var n = t("./ArrayReader")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.readData = function(t) {
                if (this.checkOffset(t),
                0 === t)
                    return new Uint8Array(0);
                var e = this.data.subarray(this.zero + this.index, this.zero + this.index + t);
                return this.index += t,
                e
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./ArrayReader": 17
        }],
        22: [function(t, e, r) {
            "use strict";
            var i = t("../utils")
              , n = t("../support")
              , a = t("./ArrayReader")
              , s = t("./StringReader")
              , o = t("./NodeBufferReader")
              , l = t("./Uint8ArrayReader");
            e.exports = function(t) {
                var e = i.getTypeOf(t);
                return i.checkSupport(e),
                "string" !== e || n.uint8array ? "nodebuffer" === e ? new o(t) : n.uint8array ? new l(i.transformTo("uint8array", t)) : new a(i.transformTo("array", t)) : new s(t)
            }
        }
        , {
            "../support": 30,
            "../utils": 32,
            "./ArrayReader": 17,
            "./NodeBufferReader": 19,
            "./StringReader": 20,
            "./Uint8ArrayReader": 21
        }],
        23: [function(t, e, r) {
            "use strict";
            r.LOCAL_FILE_HEADER = "PK",
            r.CENTRAL_FILE_HEADER = "PK",
            r.CENTRAL_DIRECTORY_END = "PK",
            r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK",
            r.ZIP64_CENTRAL_DIRECTORY_END = "PK",
            r.DATA_DESCRIPTOR = "PK\b"
        }
        , {}],
        24: [function(t, e, r) {
            "use strict";
            function i(t) {
                n.call(this, "ConvertWorker to " + t),
                this.destType = t
            }
            var n = t("./GenericWorker")
              , a = t("../utils");
            a.inherits(i, n),
            i.prototype.processChunk = function(t) {
                this.push({
                    data: a.transformTo(this.destType, t.data),
                    meta: t.meta
                })
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        25: [function(t, e, r) {
            "use strict";
            function i() {
                n.call(this, "Crc32Probe"),
                this.withStreamInfo("crc32", 0)
            }
            var n = t("./GenericWorker")
              , a = t("../crc32")
              , s = t("../utils");
            s.inherits(i, n),
            i.prototype.processChunk = function(t) {
                this.streamInfo.crc32 = a(t.data, this.streamInfo.crc32 || 0),
                this.push(t)
            }
            ,
            e.exports = i
        }
        , {
            "../crc32": 4,
            "../utils": 32,
            "./GenericWorker": 28
        }],
        26: [function(t, e, r) {
            "use strict";
            function i(t) {
                a.call(this, "DataLengthProbe for " + t),
                this.propName = t,
                this.withStreamInfo(t, 0)
            }
            var n = t("../utils")
              , a = t("./GenericWorker");
            n.inherits(i, a),
            i.prototype.processChunk = function(t) {
                if (t) {
                    var e = this.streamInfo[this.propName] || 0;
                    this.streamInfo[this.propName] = e + t.data.length
                }
                a.prototype.processChunk.call(this, t)
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        27: [function(t, e, r) {
            "use strict";
            function i(t) {
                a.call(this, "DataWorker");
                var e = this;
                this.dataIsReady = !1,
                this.index = 0,
                this.max = 0,
                this.data = null,
                this.type = "",
                this._tickScheduled = !1,
                t.then(function(t) {
                    e.dataIsReady = !0,
                    e.data = t,
                    e.max = t && t.length || 0,
                    e.type = n.getTypeOf(t),
                    e.isPaused || e._tickAndRepeat()
                }, function(t) {
                    e.error(t)
                })
            }
            var n = t("../utils")
              , a = t("./GenericWorker")
              , s = 16384;
            n.inherits(i, a),
            i.prototype.cleanUp = function() {
                a.prototype.cleanUp.call(this),
                this.data = null
            }
            ,
            i.prototype.resume = function() {
                return !!a.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0,
                n.delay(this._tickAndRepeat, [], this)),
                !0)
            }
            ,
            i.prototype._tickAndRepeat = function() {
                this._tickScheduled = !1,
                this.isPaused || this.isFinished || (this._tick(),
                this.isFinished || (n.delay(this._tickAndRepeat, [], this),
                this._tickScheduled = !0))
            }
            ,
            i.prototype._tick = function() {
                if (this.isPaused || this.isFinished)
                    return !1;
                var t = s
                  , e = null
                  , r = Math.min(this.max, this.index + t);
                if (this.index >= this.max)
                    return this.end();
                switch (this.type) {
                case "string":
                    e = this.data.substring(this.index, r);
                    break;
                case "uint8array":
                    e = this.data.subarray(this.index, r);
                    break;
                case "array":
                case "nodebuffer":
                    e = this.data.slice(this.index, r)
                }
                return this.index = r,
                this.push({
                    data: e,
                    meta: {
                        percent: this.max ? this.index / this.max * 100 : 0
                    }
                })
            }
            ,
            e.exports = i
        }
        , {
            "../utils": 32,
            "./GenericWorker": 28
        }],
        28: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.name = t || "default",
                this.streamInfo = {},
                this.generatedError = null,
                this.extraStreamInfo = {},
                this.isPaused = !0,
                this.isFinished = !1,
                this.isLocked = !1,
                this._listeners = {
                    data: [],
                    end: [],
                    error: []
                },
                this.previous = null
            }
            i.prototype = {
                push: function(t) {
                    this.emit("data", t)
                },
                end: function() {
                    if (this.isFinished)
                        return !1;
                    this.flush();
                    try {
                        this.emit("end"),
                        this.cleanUp(),
                        this.isFinished = !0
                    } catch (t) {
                        this.emit("error", t)
                    }
                    return !0
                },
                error: function(t) {
                    return !this.isFinished && (this.isPaused ? this.generatedError = t : (this.isFinished = !0,
                    this.emit("error", t),
                    this.previous && this.previous.error(t),
                    this.cleanUp()),
                    !0)
                },
                on: function(t, e) {
                    return this._listeners[t].push(e),
                    this
                },
                cleanUp: function() {
                    this.streamInfo = this.generatedError = this.extraStreamInfo = null,
                    this._listeners = []
                },
                emit: function(t, e) {
                    if (this._listeners[t])
                        for (var r = 0; r < this._listeners[t].length; r++)
                            this._listeners[t][r].call(this, e)
                },
                pipe: function(t) {
                    return t.registerPrevious(this)
                },
                registerPrevious: function(t) {
                    if (this.isLocked)
                        throw new Error("The stream '" + this + "' has already been used.");
                    this.streamInfo = t.streamInfo,
                    this.mergeStreamInfo(),
                    this.previous = t;
                    var e = this;
                    return t.on("data", function(t) {
                        e.processChunk(t)
                    }),
                    t.on("end", function() {
                        e.end()
                    }),
                    t.on("error", function(t) {
                        e.error(t)
                    }),
                    this
                },
                pause: function() {
                    return !this.isPaused && !this.isFinished && (this.isPaused = !0,
                    this.previous && this.previous.pause(),
                    !0)
                },
                resume: function() {
                    if (!this.isPaused || this.isFinished)
                        return !1;
                    this.isPaused = !1;
                    var t = !1;
                    return this.generatedError && (this.error(this.generatedError),
                    t = !0),
                    this.previous && this.previous.resume(),
                    !t
                },
                flush: function() {},
                processChunk: function(t) {
                    this.push(t)
                },
                withStreamInfo: function(t, e) {
                    return this.extraStreamInfo[t] = e,
                    this.mergeStreamInfo(),
                    this
                },
                mergeStreamInfo: function() {
                    for (var t in this.extraStreamInfo)
                        this.extraStreamInfo.hasOwnProperty(t) && (this.streamInfo[t] = this.extraStreamInfo[t])
                },
                lock: function() {
                    if (this.isLocked)
                        throw new Error("The stream '" + this + "' has already been used.");
                    this.isLocked = !0,
                    this.previous && this.previous.lock()
                },
                toString: function() {
                    var t = "Worker " + this.name;
                    return this.previous ? this.previous + " -> " + t : t
                }
            },
            e.exports = i
        }
        , {}],
        29: [function(t, e, r) {
            "use strict";
            function i(t, e, r) {
                switch (t) {
                case "blob":
                    return o.newBlob(o.transformTo("arraybuffer", e), r);
                case "base64":
                    return u.encode(e);
                default:
                    return o.transformTo(t, e)
                }
            }
            function n(t, e) {
                var r, i = 0, n = null, a = 0;
                for (r = 0; r < e.length; r++)
                    a += e[r].length;
                switch (t) {
                case "string":
                    return e.join("");
                case "array":
                    return Array.prototype.concat.apply([], e);
                case "uint8array":
                    for (n = new Uint8Array(a),
                    r = 0; r < e.length; r++)
                        n.set(e[r], i),
                        i += e[r].length;
                    return n;
                case "nodebuffer":
                    return Buffer.concat(e);
                default:
                    throw new Error("concat : unsupported type '" + t + "'")
                }
            }
            function a(t, e) {
                return new f.Promise(function(r, a) {
                    var s = []
                      , o = t._internalType
                      , l = t._outputType
                      , h = t._mimeType;
                    t.on("data", function(t, r) {
                        s.push(t),
                        e && e(r)
                    }).on("error", function(t) {
                        s = [],
                        a(t)
                    }).on("end", function() {
                        try {
                            var t = i(l, n(o, s), h);
                            r(t)
                        } catch (e) {
                            a(e)
                        }
                        s = []
                    }).resume()
                }
                )
            }
            function s(t, e, r) {
                var i = e;
                switch (e) {
                case "blob":
                case "arraybuffer":
                    i = "uint8array";
                    break;
                case "base64":
                    i = "string"
                }
                try {
                    this._internalType = i,
                    this._outputType = e,
                    this._mimeType = r,
                    o.checkSupport(i),
                    this._worker = t.pipe(new l(i)),
                    t.lock()
                } catch (n) {
                    this._worker = new h("error"),
                    this._worker.error(n)
                }
            }
            var o = t("../utils")
              , l = t("./ConvertWorker")
              , h = t("./GenericWorker")
              , u = t("../base64")
              , c = t("../support")
              , f = t("../external")
              , d = null;
            if (c.nodestream)
                try {
                    d = t("../nodejs/NodejsStreamOutputAdapter")
                } catch (p) {}
            s.prototype = {
                accumulate: function(t) {
                    return a(this, t)
                },
                on: function(t, e) {
                    var r = this;
                    return "data" === t ? this._worker.on(t, function(t) {
                        e.call(r, t.data, t.meta)
                    }) : this._worker.on(t, function() {
                        o.delay(e, arguments, r)
                    }),
                    this
                },
                resume: function() {
                    return o.delay(this._worker.resume, [], this._worker),
                    this
                },
                pause: function() {
                    return this._worker.pause(),
                    this
                },
                toNodejsStream: function(t) {
                    if (o.checkSupport("nodestream"),
                    "nodebuffer" !== this._outputType)
                        throw new Error(this._outputType + " is not supported by this method");
                    return new d(this,{
                        objectMode: "nodebuffer" !== this._outputType
                    },t)
                }
            },
            e.exports = s
        }
        , {
            "../base64": 1,
            "../external": 6,
            "../nodejs/NodejsStreamOutputAdapter": 13,
            "../support": 30,
            "../utils": 32,
            "./ConvertWorker": 24,
            "./GenericWorker": 28
        }],
        30: [function(t, e, r) {
            "use strict";
            if (r.base64 = !0,
            r.array = !0,
            r.string = !0,
            r.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array,
            r.nodebuffer = "undefined" != typeof Buffer,
            r.uint8array = "undefined" != typeof Uint8Array,
            "undefined" == typeof ArrayBuffer)
                r.blob = !1;
            else {
                var i = new ArrayBuffer(0);
                try {
                    r.blob = 0 === new Blob([i],{
                        type: "application/zip"
                    }).size
                } catch (n) {
                    try {
                        var a = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder
                          , s = new a;
                        s.append(i),
                        r.blob = 0 === s.getBlob("application/zip").size
                    } catch (n) {
                        r.blob = !1
                    }
                }
            }
            try {
                r.nodestream = !!t("readable-stream").Readable
            } catch (n) {
                r.nodestream = !1
            }
        }
        , {
            "readable-stream": 16
        }],
        31: [function(t, e, r) {
            "use strict";
            function i() {
                l.call(this, "utf-8 decode"),
                this.leftOver = null
            }
            function n() {
                l.call(this, "utf-8 encode")
            }
            for (var a = t("./utils"), s = t("./support"), o = t("./nodejsUtils"), l = t("./stream/GenericWorker"), h = new Array(256), u = 0; 256 > u; u++)
                h[u] = u >= 252 ? 6 : u >= 248 ? 5 : u >= 240 ? 4 : u >= 224 ? 3 : u >= 192 ? 2 : 1;
            h[254] = h[254] = 1;
            var c = function(t) {
                var e, r, i, n, a, o = t.length, l = 0;
                for (n = 0; o > n; n++)
                    r = t.charCodeAt(n),
                    55296 === (64512 & r) && o > n + 1 && (i = t.charCodeAt(n + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    n++)),
                    l += 128 > r ? 1 : 2048 > r ? 2 : 65536 > r ? 3 : 4;
                for (e = s.uint8array ? new Uint8Array(l) : new Array(l),
                a = 0,
                n = 0; l > a; n++)
                    r = t.charCodeAt(n),
                    55296 === (64512 & r) && o > n + 1 && (i = t.charCodeAt(n + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    n++)),
                    128 > r ? e[a++] = r : 2048 > r ? (e[a++] = 192 | r >>> 6,
                    e[a++] = 128 | 63 & r) : 65536 > r ? (e[a++] = 224 | r >>> 12,
                    e[a++] = 128 | r >>> 6 & 63,
                    e[a++] = 128 | 63 & r) : (e[a++] = 240 | r >>> 18,
                    e[a++] = 128 | r >>> 12 & 63,
                    e[a++] = 128 | r >>> 6 & 63,
                    e[a++] = 128 | 63 & r);
                return e
            }
              , f = function(t, e) {
                var r;
                for (e = e || t.length,
                e > t.length && (e = t.length),
                r = e - 1; r >= 0 && 128 === (192 & t[r]); )
                    r--;
                return 0 > r ? e : 0 === r ? e : r + h[t[r]] > e ? r : e
            }
              , d = function(t) {
                var e, r, i, n, s = t.length, o = new Array(2 * s);
                for (r = 0,
                e = 0; s > e; )
                    if (i = t[e++],
                    128 > i)
                        o[r++] = i;
                    else if (n = h[i],
                    n > 4)
                        o[r++] = 65533,
                        e += n - 1;
                    else {
                        for (i &= 2 === n ? 31 : 3 === n ? 15 : 7; n > 1 && s > e; )
                            i = i << 6 | 63 & t[e++],
                            n--;
                        n > 1 ? o[r++] = 65533 : 65536 > i ? o[r++] = i : (i -= 65536,
                        o[r++] = 55296 | i >> 10 & 1023,
                        o[r++] = 56320 | 1023 & i)
                    }
                return o.length !== r && (o.subarray ? o = o.subarray(0, r) : o.length = r),
                a.applyFromCharCode(o)
            };
            r.utf8encode = function(t) {
                return s.nodebuffer ? o.newBufferFrom(t, "utf-8") : c(t)
            }
            ,
            r.utf8decode = function(t) {
                return s.nodebuffer ? a.transformTo("nodebuffer", t).toString("utf-8") : (t = a.transformTo(s.uint8array ? "uint8array" : "array", t),
                d(t))
            }
            ,
            a.inherits(i, l),
            i.prototype.processChunk = function(t) {
                var e = a.transformTo(s.uint8array ? "uint8array" : "array", t.data);
                if (this.leftOver && this.leftOver.length) {
                    if (s.uint8array) {
                        var i = e;
                        e = new Uint8Array(i.length + this.leftOver.length),
                        e.set(this.leftOver, 0),
                        e.set(i, this.leftOver.length)
                    } else
                        e = this.leftOver.concat(e);
                    this.leftOver = null
                }
                var n = f(e)
                  , o = e;
                n !== e.length && (s.uint8array ? (o = e.subarray(0, n),
                this.leftOver = e.subarray(n, e.length)) : (o = e.slice(0, n),
                this.leftOver = e.slice(n, e.length))),
                this.push({
                    data: r.utf8decode(o),
                    meta: t.meta
                })
            }
            ,
            i.prototype.flush = function() {
                this.leftOver && this.leftOver.length && (this.push({
                    data: r.utf8decode(this.leftOver),
                    meta: {}
                }),
                this.leftOver = null)
            }
            ,
            r.Utf8DecodeWorker = i,
            a.inherits(n, l),
            n.prototype.processChunk = function(t) {
                this.push({
                    data: r.utf8encode(t.data),
                    meta: t.meta
                })
            }
            ,
            r.Utf8EncodeWorker = n
        }
        , {
            "./nodejsUtils": 14,
            "./stream/GenericWorker": 28,
            "./support": 30,
            "./utils": 32
        }],
        32: [function(t, e, r) {
            "use strict";
            function i(t) {
                var e = null;
                return e = l.uint8array ? new Uint8Array(t.length) : new Array(t.length),
                a(t, e)
            }
            function n(t) {
                return t
            }
            function a(t, e) {
                for (var r = 0; r < t.length; ++r)
                    e[r] = 255 & t.charCodeAt(r);
                return e
            }
            function s(t) {
                var e = 65536
                  , i = r.getTypeOf(t)
                  , n = !0;
                if ("uint8array" === i ? n = d.applyCanBeUsed.uint8array : "nodebuffer" === i && (n = d.applyCanBeUsed.nodebuffer),
                n)
                    for (; e > 1; )
                        try {
                            return d.stringifyByChunk(t, i, e)
                        } catch (a) {
                            e = Math.floor(e / 2)
                        }
                return d.stringifyByChar(t)
            }
            function o(t, e) {
                for (var r = 0; r < t.length; r++)
                    e[r] = t[r];
                return e
            }
            var l = t("./support")
              , h = t("./base64")
              , u = t("./nodejsUtils")
              , c = t("core-js/library/fn/set-immediate")
              , f = t("./external");
            r.newBlob = function(t, e) {
                r.checkSupport("blob");
                try {
                    return new Blob([t],{
                        type: e
                    })
                } catch (i) {
                    try {
                        var n = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder
                          , a = new n;
                        return a.append(t),
                        a.getBlob(e)
                    } catch (i) {
                        throw new Error("Bug : can't construct the Blob.")
                    }
                }
            }
            ;
            var d = {
                stringifyByChunk: function(t, e, r) {
                    var i = []
                      , n = 0
                      , a = t.length;
                    if (r >= a)
                        return String.fromCharCode.apply(null, t);
                    for (; a > n; )
                        "array" === e || "nodebuffer" === e ? i.push(String.fromCharCode.apply(null, t.slice(n, Math.min(n + r, a)))) : i.push(String.fromCharCode.apply(null, t.subarray(n, Math.min(n + r, a)))),
                        n += r;
                    return i.join("")
                },
                stringifyByChar: function(t) {
                    for (var e = "", r = 0; r < t.length; r++)
                        e += String.fromCharCode(t[r]);
                    return e
                },
                applyCanBeUsed: {
                    uint8array: function() {
                        try {
                            return l.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length
                        } catch (t) {
                            return !1
                        }
                    }(),
                    nodebuffer: function() {
                        try {
                            return l.nodebuffer && 1 === String.fromCharCode.apply(null, u.allocBuffer(1)).length
                        } catch (t) {
                            return !1
                        }
                    }()
                }
            };
            r.applyFromCharCode = s;
            var p = {};
            p.string = {
                string: n,
                array: function(t) {
                    return a(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return p.string.uint8array(t).buffer
                },
                uint8array: function(t) {
                    return a(t, new Uint8Array(t.length))
                },
                nodebuffer: function(t) {
                    return a(t, u.allocBuffer(t.length))
                }
            },
            p.array = {
                string: s,
                array: n,
                arraybuffer: function(t) {
                    return new Uint8Array(t).buffer
                },
                uint8array: function(t) {
                    return new Uint8Array(t)
                },
                nodebuffer: function(t) {
                    return u.newBufferFrom(t)
                }
            },
            p.arraybuffer = {
                string: function(t) {
                    return s(new Uint8Array(t))
                },
                array: function(t) {
                    return o(new Uint8Array(t), new Array(t.byteLength))
                },
                arraybuffer: n,
                uint8array: function(t) {
                    return new Uint8Array(t)
                },
                nodebuffer: function(t) {
                    return u.newBufferFrom(new Uint8Array(t))
                }
            },
            p.uint8array = {
                string: s,
                array: function(t) {
                    return o(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return t.buffer
                },
                uint8array: n,
                nodebuffer: function(t) {
                    return u.newBufferFrom(t)
                }
            },
            p.nodebuffer = {
                string: s,
                array: function(t) {
                    return o(t, new Array(t.length))
                },
                arraybuffer: function(t) {
                    return p.nodebuffer.uint8array(t).buffer
                },
                uint8array: function(t) {
                    return o(t, new Uint8Array(t.length))
                },
                nodebuffer: n
            },
            r.transformTo = function(t, e) {
                if (e || (e = ""),
                !t)
                    return e;
                r.checkSupport(t);
                var i = r.getTypeOf(e)
                  , n = p[i][t](e);
                return n
            }
            ,
            r.getTypeOf = function(t) {
                return "string" == typeof t ? "string" : "[object Array]" === Object.prototype.toString.call(t) ? "array" : l.nodebuffer && u.isBuffer(t) ? "nodebuffer" : l.uint8array && t instanceof Uint8Array ? "uint8array" : l.arraybuffer && t instanceof ArrayBuffer ? "arraybuffer" : void 0
            }
            ,
            r.checkSupport = function(t) {
                var e = l[t.toLowerCase()];
                if (!e)
                    throw new Error(t + " is not supported by this platform")
            }
            ,
            r.MAX_VALUE_16BITS = 65535,
            r.MAX_VALUE_32BITS = -1,
            r.pretty = function(t) {
                var e, r, i = "";
                for (r = 0; r < (t || "").length; r++)
                    e = t.charCodeAt(r),
                    i += "\\x" + (16 > e ? "0" : "") + e.toString(16).toUpperCase();
                return i
            }
            ,
            r.delay = function(t, e, r) {
                c(function() {
                    t.apply(r || null, e || [])
                })
            }
            ,
            r.inherits = function(t, e) {
                var r = function() {};
                r.prototype = e.prototype,
                t.prototype = new r
            }
            ,
            r.extend = function() {
                var t, e, r = {};
                for (t = 0; t < arguments.length; t++)
                    for (e in arguments[t])
                        arguments[t].hasOwnProperty(e) && "undefined" == typeof r[e] && (r[e] = arguments[t][e]);
                return r
            }
            ,
            r.prepareContent = function(t, e, n, a, s) {
                var o = f.Promise.resolve(e).then(function(t) {
                    var e = l.blob && (t instanceof Blob || -1 !== ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(t)));
                    return e && "undefined" != typeof FileReader ? new f.Promise(function(e, r) {
                        var i = new FileReader;
                        i.onload = function(t) {
                            e(t.target.result)
                        }
                        ,
                        i.onerror = function(t) {
                            r(t.target.error)
                        }
                        ,
                        i.readAsArrayBuffer(t)
                    }
                    ) : t
                });
                return o.then(function(e) {
                    var o = r.getTypeOf(e);
                    return o ? ("arraybuffer" === o ? e = r.transformTo("uint8array", e) : "string" === o && (s ? e = h.decode(e) : n && a !== !0 && (e = i(e))),
                    e) : f.Promise.reject(new Error("Can't read the data of '" + t + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))
                })
            }
        }
        , {
            "./base64": 1,
            "./external": 6,
            "./nodejsUtils": 14,
            "./support": 30,
            "core-js/library/fn/set-immediate": 36
        }],
        33: [function(t, e, r) {
            "use strict";
            function i(t) {
                this.files = [],
                this.loadOptions = t
            }
            var n = t("./reader/readerFor")
              , a = t("./utils")
              , s = t("./signature")
              , o = t("./zipEntry")
              , l = (t("./utf8"),
            t("./support"));
            i.prototype = {
                checkSignature: function(t) {
                    if (!this.reader.readAndCheckSignature(t)) {
                        this.reader.index -= 4;
                        var e = this.reader.readString(4);
                        throw new Error("Corrupted zip or bug: unexpected signature (" + a.pretty(e) + ", expected " + a.pretty(t) + ")")
                    }
                },
                isSignature: function(t, e) {
                    var r = this.reader.index;
                    this.reader.setIndex(t);
                    var i = this.reader.readString(4)
                      , n = i === e;
                    return this.reader.setIndex(r),
                    n
                },
                readBlockEndOfCentral: function() {
                    this.diskNumber = this.reader.readInt(2),
                    this.diskWithCentralDirStart = this.reader.readInt(2),
                    this.centralDirRecordsOnThisDisk = this.reader.readInt(2),
                    this.centralDirRecords = this.reader.readInt(2),
                    this.centralDirSize = this.reader.readInt(4),
                    this.centralDirOffset = this.reader.readInt(4),
                    this.zipCommentLength = this.reader.readInt(2);
                    var t = this.reader.readData(this.zipCommentLength)
                      , e = l.uint8array ? "uint8array" : "array"
                      , r = a.transformTo(e, t);
                    this.zipComment = this.loadOptions.decodeFileName(r)
                },
                readBlockZip64EndOfCentral: function() {
                    this.zip64EndOfCentralSize = this.reader.readInt(8),
                    this.reader.skip(4),
                    this.diskNumber = this.reader.readInt(4),
                    this.diskWithCentralDirStart = this.reader.readInt(4),
                    this.centralDirRecordsOnThisDisk = this.reader.readInt(8),
                    this.centralDirRecords = this.reader.readInt(8),
                    this.centralDirSize = this.reader.readInt(8),
                    this.centralDirOffset = this.reader.readInt(8),
                    this.zip64ExtensibleData = {};
                    for (var t, e, r, i = this.zip64EndOfCentralSize - 44, n = 0; i > n; )
                        t = this.reader.readInt(2),
                        e = this.reader.readInt(4),
                        r = this.reader.readData(e),
                        this.zip64ExtensibleData[t] = {
                            id: t,
                            length: e,
                            value: r
                        }
                },
                readBlockZip64EndOfCentralLocator: function() {
                    if (this.diskWithZip64CentralDirStart = this.reader.readInt(4),
                    this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8),
                    this.disksCount = this.reader.readInt(4),
                    this.disksCount > 1)
                        throw new Error("Multi-volumes zip are not supported")
                },
                readLocalFiles: function() {
                    var t, e;
                    for (t = 0; t < this.files.length; t++)
                        e = this.files[t],
                        this.reader.setIndex(e.localHeaderOffset),
                        this.checkSignature(s.LOCAL_FILE_HEADER),
                        e.readLocalPart(this.reader),
                        e.handleUTF8(),
                        e.processAttributes()
                },
                readCentralDir: function() {
                    var t;
                    for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); )
                        t = new o({
                            zip64: this.zip64
                        },this.loadOptions),
                        t.readCentralPart(this.reader),
                        this.files.push(t);
                    if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length)
                        throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length)
                },
                readEndOfCentral: function() {
                    var t = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
                    if (0 > t) {
                        var e = !this.isSignature(0, s.LOCAL_FILE_HEADER);
                        throw e ? new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : new Error("Corrupted zip: can't find end of central directory")
                    }
                    this.reader.setIndex(t);
                    var r = t;
                    if (this.checkSignature(s.CENTRAL_DIRECTORY_END),
                    this.readBlockEndOfCentral(),
                    this.diskNumber === a.MAX_VALUE_16BITS || this.diskWithCentralDirStart === a.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === a.MAX_VALUE_16BITS || this.centralDirRecords === a.MAX_VALUE_16BITS || this.centralDirSize === a.MAX_VALUE_32BITS || this.centralDirOffset === a.MAX_VALUE_32BITS) {
                        if (this.zip64 = !0,
                        t = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                        0 > t)
                            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
                        if (this.reader.setIndex(t),
                        this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                        this.readBlockZip64EndOfCentralLocator(),
                        !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),
                        this.relativeOffsetEndOfZip64CentralDir < 0))
                            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
                        this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),
                        this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),
                        this.readBlockZip64EndOfCentral()
                    }
                    var i = this.centralDirOffset + this.centralDirSize;
                    this.zip64 && (i += 20,
                    i += 12 + this.zip64EndOfCentralSize);
                    var n = r - i;
                    if (n > 0)
                        this.isSignature(r, s.CENTRAL_FILE_HEADER) || (this.reader.zero = n);
                    else if (0 > n)
                        throw new Error("Corrupted zip: missing " + Math.abs(n) + " bytes.")
                },
                prepareReader: function(t) {
                    this.reader = n(t)
                },
                load: function(t) {
                    this.prepareReader(t),
                    this.readEndOfCentral(),
                    this.readCentralDir(),
                    this.readLocalFiles()
                }
            },
            e.exports = i
        }
        , {
            "./reader/readerFor": 22,
            "./signature": 23,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32,
            "./zipEntry": 34
        }],
        34: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                this.options = t,
                this.loadOptions = e
            }
            var n = t("./reader/readerFor")
              , a = t("./utils")
              , s = t("./compressedObject")
              , o = t("./crc32")
              , l = t("./utf8")
              , h = t("./compressions")
              , u = t("./support")
              , c = 0
              , f = 3
              , d = function(t) {
                for (var e in h)
                    if (h.hasOwnProperty(e) && h[e].magic === t)
                        return h[e];
                return null
            };
            i.prototype = {
                isEncrypted: function() {
                    return 1 === (1 & this.bitFlag)
                },
                useUTF8: function() {
                    return 2048 === (2048 & this.bitFlag)
                },
                readLocalPart: function(t) {
                    var e, r;
                    if (t.skip(22),
                    this.fileNameLength = t.readInt(2),
                    r = t.readInt(2),
                    this.fileName = t.readData(this.fileNameLength),
                    t.skip(r),
                    -1 === this.compressedSize || -1 === this.uncompressedSize)
                        throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");
                    if (e = d(this.compressionMethod),
                    null === e)
                        throw new Error("Corrupted zip : compression " + a.pretty(this.compressionMethod) + " unknown (inner file : " + a.transformTo("string", this.fileName) + ")");
                    this.decompressed = new s(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))
                },
                readCentralPart: function(t) {
                    this.versionMadeBy = t.readInt(2),
                    t.skip(2),
                    this.bitFlag = t.readInt(2),
                    this.compressionMethod = t.readString(2),
                    this.date = t.readDate(),
                    this.crc32 = t.readInt(4),
                    this.compressedSize = t.readInt(4),
                    this.uncompressedSize = t.readInt(4);
                    var e = t.readInt(2);
                    if (this.extraFieldsLength = t.readInt(2),
                    this.fileCommentLength = t.readInt(2),
                    this.diskNumberStart = t.readInt(2),
                    this.internalFileAttributes = t.readInt(2),
                    this.externalFileAttributes = t.readInt(4),
                    this.localHeaderOffset = t.readInt(4),
                    this.isEncrypted())
                        throw new Error("Encrypted zip are not supported");
                    t.skip(e),
                    this.readExtraFields(t),
                    this.parseZIP64ExtraField(t),
                    this.fileComment = t.readData(this.fileCommentLength)
                },
                processAttributes: function() {
                    this.unixPermissions = null,
                    this.dosPermissions = null;
                    var t = this.versionMadeBy >> 8;
                    this.dir = !!(16 & this.externalFileAttributes),
                    t === c && (this.dosPermissions = 63 & this.externalFileAttributes),
                    t === f && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535),
                    this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0)
                },
                parseZIP64ExtraField: function(t) {
                    if (this.extraFields[1]) {
                        var e = n(this.extraFields[1].value);
                        this.uncompressedSize === a.MAX_VALUE_32BITS && (this.uncompressedSize = e.readInt(8)),
                        this.compressedSize === a.MAX_VALUE_32BITS && (this.compressedSize = e.readInt(8)),
                        this.localHeaderOffset === a.MAX_VALUE_32BITS && (this.localHeaderOffset = e.readInt(8)),
                        this.diskNumberStart === a.MAX_VALUE_32BITS && (this.diskNumberStart = e.readInt(4))
                    }
                },
                readExtraFields: function(t) {
                    var e, r, i, n = t.index + this.extraFieldsLength;
                    for (this.extraFields || (this.extraFields = {}); t.index < n; )
                        e = t.readInt(2),
                        r = t.readInt(2),
                        i = t.readData(r),
                        this.extraFields[e] = {
                            id: e,
                            length: r,
                            value: i
                        }
                },
                handleUTF8: function() {
                    var t = u.uint8array ? "uint8array" : "array";
                    if (this.useUTF8())
                        this.fileNameStr = l.utf8decode(this.fileName),
                        this.fileCommentStr = l.utf8decode(this.fileComment);
                    else {
                        var e = this.findExtraFieldUnicodePath();
                        if (null !== e)
                            this.fileNameStr = e;
                        else {
                            var r = a.transformTo(t, this.fileName);
                            this.fileNameStr = this.loadOptions.decodeFileName(r)
                        }
                        var i = this.findExtraFieldUnicodeComment();
                        if (null !== i)
                            this.fileCommentStr = i;
                        else {
                            var n = a.transformTo(t, this.fileComment);
                            this.fileCommentStr = this.loadOptions.decodeFileName(n)
                        }
                    }
                },
                findExtraFieldUnicodePath: function() {
                    var t = this.extraFields[28789];
                    if (t) {
                        var e = n(t.value);
                        return 1 !== e.readInt(1) ? null : o(this.fileName) !== e.readInt(4) ? null : l.utf8decode(e.readData(t.length - 5))
                    }
                    return null
                },
                findExtraFieldUnicodeComment: function() {
                    var t = this.extraFields[25461];
                    if (t) {
                        var e = n(t.value);
                        return 1 !== e.readInt(1) ? null : o(this.fileComment) !== e.readInt(4) ? null : l.utf8decode(e.readData(t.length - 5))
                    }
                    return null
                }
            },
            e.exports = i
        }
        , {
            "./compressedObject": 2,
            "./compressions": 3,
            "./crc32": 4,
            "./reader/readerFor": 22,
            "./support": 30,
            "./utf8": 31,
            "./utils": 32
        }],
        35: [function(t, e, r) {
            "use strict";
            var i = t("./stream/StreamHelper")
              , n = t("./stream/DataWorker")
              , a = t("./utf8")
              , s = t("./compressedObject")
              , o = t("./stream/GenericWorker")
              , l = function(t, e, r) {
                this.name = t,
                this.dir = r.dir,
                this.date = r.date,
                this.comment = r.comment,
                this.unixPermissions = r.unixPermissions,
                this.dosPermissions = r.dosPermissions,
                this._data = e,
                this._dataBinary = r.binary,
                this.options = {
                    compression: r.compression,
                    compressionOptions: r.compressionOptions
                }
            };
            l.prototype = {
                internalStream: function(t) {
                    var e = null
                      , r = "string";
                    try {
                        if (!t)
                            throw new Error("No output type specified.");
                        r = t.toLowerCase();
                        var n = "string" === r || "text" === r;
                        "binarystring" !== r && "text" !== r || (r = "string"),
                        e = this._decompressWorker();
                        var s = !this._dataBinary;
                        s && !n && (e = e.pipe(new a.Utf8EncodeWorker)),
                        !s && n && (e = e.pipe(new a.Utf8DecodeWorker))
                    } catch (l) {
                        e = new o("error"),
                        e.error(l)
                    }
                    return new i(e,r,"")
                },
                async: function(t, e) {
                    return this.internalStream(t).accumulate(e)
                },
                nodeStream: function(t, e) {
                    return this.internalStream(t || "nodebuffer").toNodejsStream(e)
                },
                _compressWorker: function(t, e) {
                    if (this._data instanceof s && this._data.compression.magic === t.magic)
                        return this._data.getCompressedWorker();
                    var r = this._decompressWorker();
                    return this._dataBinary || (r = r.pipe(new a.Utf8EncodeWorker)),
                    s.createWorkerFrom(r, t, e)
                },
                _decompressWorker: function() {
                    return this._data instanceof s ? this._data.getContentWorker() : this._data instanceof o ? this._data : new n(this._data)
                }
            };
            for (var h = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], u = function() {
                throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")
            }, c = 0; c < h.length; c++)
                l.prototype[h[c]] = u;
            e.exports = l
        }
        , {
            "./compressedObject": 2,
            "./stream/DataWorker": 27,
            "./stream/GenericWorker": 28,
            "./stream/StreamHelper": 29,
            "./utf8": 31
        }],
        36: [function(t, e, r) {
            t("../modules/web.immediate"),
            e.exports = t("../modules/_core").setImmediate
        }
        , {
            "../modules/_core": 40,
            "../modules/web.immediate": 56
        }],
        37: [function(t, e, r) {
            e.exports = function(t) {
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function!");
                return t
            }
        }
        , {}],
        38: [function(t, e, r) {
            var i = t("./_is-object");
            e.exports = function(t) {
                if (!i(t))
                    throw TypeError(t + " is not an object!");
                return t
            }
        }
        , {
            "./_is-object": 51
        }],
        39: [function(t, e, r) {
            var i = {}.toString;
            e.exports = function(t) {
                return i.call(t).slice(8, -1)
            }
        }
        , {}],
        40: [function(t, e, r) {
            var i = e.exports = {
                version: "2.3.0"
            };
            "number" == typeof __e && (__e = i)
        }
        , {}],
        41: [function(t, e, r) {
            var i = t("./_a-function");
            e.exports = function(t, e, r) {
                if (i(t),
                void 0 === e)
                    return t;
                switch (r) {
                case 1:
                    return function(r) {
                        return t.call(e, r)
                    }
                    ;
                case 2:
                    return function(r, i) {
                        return t.call(e, r, i)
                    }
                    ;
                case 3:
                    return function(r, i, n) {
                        return t.call(e, r, i, n)
                    }
                }
                return function() {
                    return t.apply(e, arguments)
                }
            }
        }
        , {
            "./_a-function": 37
        }],
        42: [function(t, e, r) {
            e.exports = !t("./_fails")(function() {
                return 7 != Object.defineProperty({}, "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }
        , {
            "./_fails": 45
        }],
        43: [function(t, e, r) {
            var i = t("./_is-object")
              , n = t("./_global").document
              , a = i(n) && i(n.createElement);
            e.exports = function(t) {
                return a ? n.createElement(t) : {}
            }
        }
        , {
            "./_global": 46,
            "./_is-object": 51
        }],
        44: [function(t, e, r) {
            var i = t("./_global")
              , n = t("./_core")
              , a = t("./_ctx")
              , s = t("./_hide")
              , o = "prototype"
              , l = function(t, e, r) {
                var h, u, c, f = t & l.F, d = t & l.G, p = t & l.S, _ = t & l.P, m = t & l.B, g = t & l.W, y = d ? n : n[e] || (n[e] = {}), v = y[o], b = d ? i : p ? i[e] : (i[e] || {})[o];
                d && (r = e);
                for (h in r)
                    u = !f && b && void 0 !== b[h],
                    u && h in y || (c = u ? b[h] : r[h],
                    y[h] = d && "function" != typeof b[h] ? r[h] : m && u ? a(c, i) : g && b[h] == c ? function(t) {
                        var e = function(e, r, i) {
                            if (this instanceof t) {
                                switch (arguments.length) {
                                case 0:
                                    return new t;
                                case 1:
                                    return new t(e);
                                case 2:
                                    return new t(e,r)
                                }
                                return new t(e,r,i)
                            }
                            return t.apply(this, arguments)
                        };
                        return e[o] = t[o],
                        e
                    }(c) : _ && "function" == typeof c ? a(Function.call, c) : c,
                    _ && ((y.virtual || (y.virtual = {}))[h] = c,
                    t & l.R && v && !v[h] && s(v, h, c)))
            };
            l.F = 1,
            l.G = 2,
            l.S = 4,
            l.P = 8,
            l.B = 16,
            l.W = 32,
            l.U = 64,
            l.R = 128,
            e.exports = l
        }
        , {
            "./_core": 40,
            "./_ctx": 41,
            "./_global": 46,
            "./_hide": 47
        }],
        45: [function(t, e, r) {
            e.exports = function(t) {
                try {
                    return !!t()
                } catch (e) {
                    return !0
                }
            }
        }
        , {}],
        46: [function(t, e, r) {
            var i = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = i)
        }
        , {}],
        47: [function(t, e, r) {
            var i = t("./_object-dp")
              , n = t("./_property-desc");
            e.exports = t("./_descriptors") ? function(t, e, r) {
                return i.f(t, e, n(1, r))
            }
            : function(t, e, r) {
                return t[e] = r,
                t
            }
        }
        , {
            "./_descriptors": 42,
            "./_object-dp": 52,
            "./_property-desc": 53
        }],
        48: [function(t, e, r) {
            e.exports = t("./_global").document && document.documentElement
        }
        , {
            "./_global": 46
        }],
        49: [function(t, e, r) {
            e.exports = !t("./_descriptors") && !t("./_fails")(function() {
                return 7 != Object.defineProperty(t("./_dom-create")("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
        }
        , {
            "./_descriptors": 42,
            "./_dom-create": 43,
            "./_fails": 45
        }],
        50: [function(t, e, r) {
            e.exports = function(t, e, r) {
                var i = void 0 === r;
                switch (e.length) {
                case 0:
                    return i ? t() : t.call(r);
                case 1:
                    return i ? t(e[0]) : t.call(r, e[0]);
                case 2:
                    return i ? t(e[0], e[1]) : t.call(r, e[0], e[1]);
                case 3:
                    return i ? t(e[0], e[1], e[2]) : t.call(r, e[0], e[1], e[2]);
                case 4:
                    return i ? t(e[0], e[1], e[2], e[3]) : t.call(r, e[0], e[1], e[2], e[3])
                }
                return t.apply(r, e)
            }
        }
        , {}],
        51: [function(t, e, r) {
            e.exports = function(t) {
                return "object" == typeof t ? null !== t : "function" == typeof t
            }
        }
        , {}],
        52: [function(t, e, r) {
            var i = t("./_an-object")
              , n = t("./_ie8-dom-define")
              , a = t("./_to-primitive")
              , s = Object.defineProperty;
            r.f = t("./_descriptors") ? Object.defineProperty : function(t, e, r) {
                if (i(t),
                e = a(e, !0),
                i(r),
                n)
                    try {
                        return s(t, e, r)
                    } catch (o) {}
                if ("get"in r || "set"in r)
                    throw TypeError("Accessors not supported!");
                return "value"in r && (t[e] = r.value),
                t
            }
        }
        , {
            "./_an-object": 38,
            "./_descriptors": 42,
            "./_ie8-dom-define": 49,
            "./_to-primitive": 55
        }],
        53: [function(t, e, r) {
            e.exports = function(t, e) {
                return {
                    enumerable: !(1 & t),
                    configurable: !(2 & t),
                    writable: !(4 & t),
                    value: e
                }
            }
        }
        , {}],
        54: [function(t, e, r) {
            var i, n, a, s = t("./_ctx"), o = t("./_invoke"), l = t("./_html"), h = t("./_dom-create"), u = t("./_global"), c = u.process, f = u.setImmediate, d = u.clearImmediate, p = u.MessageChannel, _ = 0, m = {}, g = "onreadystatechange", y = function() {
                var t = +this;
                if (m.hasOwnProperty(t)) {
                    var e = m[t];
                    delete m[t],
                    e()
                }
            }, v = function(t) {
                y.call(t.data)
            };
            f && d || (f = function(t) {
                for (var e = [], r = 1; arguments.length > r; )
                    e.push(arguments[r++]);
                return m[++_] = function() {
                    o("function" == typeof t ? t : Function(t), e)
                }
                ,
                i(_),
                _
            }
            ,
            d = function(t) {
                delete m[t]
            }
            ,
            "process" == t("./_cof")(c) ? i = function(t) {
                c.nextTick(s(y, t, 1))
            }
            : p ? (n = new p,
            a = n.port2,
            n.port1.onmessage = v,
            i = s(a.postMessage, a, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (i = function(t) {
                u.postMessage(t + "", "*")
            }
            ,
            u.addEventListener("message", v, !1)) : i = g in h("script") ? function(t) {
                l.appendChild(h("script"))[g] = function() {
                    l.removeChild(this),
                    y.call(t)
                }
            }
            : function(t) {
                setTimeout(s(y, t, 1), 0)
            }
            ),
            e.exports = {
                set: f,
                clear: d
            }
        }
        , {
            "./_cof": 39,
            "./_ctx": 41,
            "./_dom-create": 43,
            "./_global": 46,
            "./_html": 48,
            "./_invoke": 50
        }],
        55: [function(t, e, r) {
            var i = t("./_is-object");
            e.exports = function(t, e) {
                if (!i(t))
                    return t;
                var r, n;
                if (e && "function" == typeof (r = t.toString) && !i(n = r.call(t)))
                    return n;
                if ("function" == typeof (r = t.valueOf) && !i(n = r.call(t)))
                    return n;
                if (!e && "function" == typeof (r = t.toString) && !i(n = r.call(t)))
                    return n;
                throw TypeError("Can't convert object to primitive value")
            }
        }
        , {
            "./_is-object": 51
        }],
        56: [function(t, e, r) {
            var i = t("./_export")
              , n = t("./_task");
            i(i.G + i.B, {
                setImmediate: n.set,
                clearImmediate: n.clear
            })
        }
        , {
            "./_export": 44,
            "./_task": 54
        }],
        57: [function(t, e, r) {
            (function(t) {
                "use strict";
                function r() {
                    u = !0;
                    for (var t, e, r = c.length; r; ) {
                        for (e = c,
                        c = [],
                        t = -1; ++t < r; )
                            e[t]();
                        r = c.length
                    }
                    u = !1
                }
                function i(t) {
                    1 !== c.push(t) || u || n()
                }
                var n, a = t.MutationObserver || t.WebKitMutationObserver;
                if (a) {
                    var s = 0
                      , o = new a(r)
                      , l = t.document.createTextNode("");
                    o.observe(l, {
                        characterData: !0
                    }),
                    n = function() {
                        l.data = s = ++s % 2
                    }
                } else if (t.setImmediate || "undefined" == typeof t.MessageChannel)
                    n = "document"in t && "onreadystatechange"in t.document.createElement("script") ? function() {
                        var e = t.document.createElement("script");
                        e.onreadystatechange = function() {
                            r(),
                            e.onreadystatechange = null,
                            e.parentNode.removeChild(e),
                            e = null
                        }
                        ,
                        t.document.documentElement.appendChild(e)
                    }
                    : function() {
                        setTimeout(r, 0)
                    }
                    ;
                else {
                    var h = new t.MessageChannel;
                    h.port1.onmessage = r,
                    n = function() {
                        h.port2.postMessage(0)
                    }
                }
                var u, c = [];
                e.exports = i
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        58: [function(t, e, r) {
            "use strict";
            function i() {}
            function n(t) {
                if ("function" != typeof t)
                    throw new TypeError("resolver must be a function");
                this.state = y,
                this.queue = [],
                this.outcome = void 0,
                t !== i && l(this, t)
            }
            function a(t, e, r) {
                this.promise = t,
                "function" == typeof e && (this.onFulfilled = e,
                this.callFulfilled = this.otherCallFulfilled),
                "function" == typeof r && (this.onRejected = r,
                this.callRejected = this.otherCallRejected)
            }
            function s(t, e, r) {
                p(function() {
                    var i;
                    try {
                        i = e(r)
                    } catch (n) {
                        return _.reject(t, n)
                    }
                    i === t ? _.reject(t, new TypeError("Cannot resolve promise with itself")) : _.resolve(t, i)
                })
            }
            function o(t) {
                var e = t && t.then;
                return !t || "object" != typeof t && "function" != typeof t || "function" != typeof e ? void 0 : function() {
                    e.apply(t, arguments)
                }
            }
            function l(t, e) {
                function r(e) {
                    a || (a = !0,
                    _.reject(t, e))
                }
                function i(e) {
                    a || (a = !0,
                    _.resolve(t, e))
                }
                function n() {
                    e(i, r)
                }
                var a = !1
                  , s = h(n);
                "error" === s.status && r(s.value)
            }
            function h(t, e) {
                var r = {};
                try {
                    r.value = t(e),
                    r.status = "success"
                } catch (i) {
                    r.status = "error",
                    r.value = i
                }
                return r
            }
            function u(t) {
                return t instanceof this ? t : _.resolve(new this(i), t)
            }
            function c(t) {
                var e = new this(i);
                return _.reject(e, t)
            }
            function f(t) {
                function e(t, e) {
                    function i(t) {
                        s[e] = t,
                        ++o !== n || a || (a = !0,
                        _.resolve(h, s))
                    }
                    r.resolve(t).then(i, function(t) {
                        a || (a = !0,
                        _.reject(h, t))
                    })
                }
                var r = this;
                if ("[object Array]" !== Object.prototype.toString.call(t))
                    return this.reject(new TypeError("must be an array"));
                var n = t.length
                  , a = !1;
                if (!n)
                    return this.resolve([]);
                for (var s = new Array(n), o = 0, l = -1, h = new this(i); ++l < n; )
                    e(t[l], l);
                return h
            }
            function d(t) {
                function e(t) {
                    r.resolve(t).then(function(t) {
                        a || (a = !0,
                        _.resolve(o, t))
                    }, function(t) {
                        a || (a = !0,
                        _.reject(o, t))
                    })
                }
                var r = this;
                if ("[object Array]" !== Object.prototype.toString.call(t))
                    return this.reject(new TypeError("must be an array"));
                var n = t.length
                  , a = !1;
                if (!n)
                    return this.resolve([]);
                for (var s = -1, o = new this(i); ++s < n; )
                    e(t[s]);
                return o
            }
            var p = t("immediate")
              , _ = {}
              , m = ["REJECTED"]
              , g = ["FULFILLED"]
              , y = ["PENDING"];
            e.exports = n,
            n.prototype["catch"] = function(t) {
                return this.then(null, t)
            }
            ,
            n.prototype.then = function(t, e) {
                if ("function" != typeof t && this.state === g || "function" != typeof e && this.state === m)
                    return this;
                var r = new this.constructor(i);
                if (this.state !== y) {
                    var n = this.state === g ? t : e;
                    s(r, n, this.outcome)
                } else
                    this.queue.push(new a(r,t,e));
                return r
            }
            ,
            a.prototype.callFulfilled = function(t) {
                _.resolve(this.promise, t)
            }
            ,
            a.prototype.otherCallFulfilled = function(t) {
                s(this.promise, this.onFulfilled, t)
            }
            ,
            a.prototype.callRejected = function(t) {
                _.reject(this.promise, t)
            }
            ,
            a.prototype.otherCallRejected = function(t) {
                s(this.promise, this.onRejected, t)
            }
            ,
            _.resolve = function(t, e) {
                var r = h(o, e);
                if ("error" === r.status)
                    return _.reject(t, r.value);
                var i = r.value;
                if (i)
                    l(t, i);
                else {
                    t.state = g,
                    t.outcome = e;
                    for (var n = -1, a = t.queue.length; ++n < a; )
                        t.queue[n].callFulfilled(e)
                }
                return t
            }
            ,
            _.reject = function(t, e) {
                t.state = m,
                t.outcome = e;
                for (var r = -1, i = t.queue.length; ++r < i; )
                    t.queue[r].callRejected(e);
                return t
            }
            ,
            n.resolve = u,
            n.reject = c,
            n.all = f,
            n.race = d
        }
        , {
            immediate: 57
        }],
        59: [function(t, e, r) {
            "use strict";
            var i = t("./lib/utils/common").assign
              , n = t("./lib/deflate")
              , a = t("./lib/inflate")
              , s = t("./lib/zlib/constants")
              , o = {};
            i(o, n, a, s),
            e.exports = o
        }
        , {
            "./lib/deflate": 60,
            "./lib/inflate": 61,
            "./lib/utils/common": 62,
            "./lib/zlib/constants": 65
        }],
        60: [function(t, e, r) {
            "use strict";
            function i(t) {
                if (!(this instanceof i))
                    return new i(t);
                this.options = l.assign({
                    level: y,
                    method: b,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: v,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits > 0 ? e.windowBits = -e.windowBits : e.gzip && e.windowBits > 0 && e.windowBits < 16 && (e.windowBits += 16),
                this.err = 0,
                this.msg = "",
                this.ended = !1,
                this.chunks = [],
                this.strm = new c,
                this.strm.avail_out = 0;
                var r = o.deflateInit2(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy);
                if (r !== _)
                    throw new Error(u[r]);
                if (e.header && o.deflateSetHeader(this.strm, e.header),
                e.dictionary) {
                    var n;
                    if (n = "string" == typeof e.dictionary ? h.string2buf(e.dictionary) : "[object ArrayBuffer]" === f.call(e.dictionary) ? new Uint8Array(e.dictionary) : e.dictionary,
                    r = o.deflateSetDictionary(this.strm, n),
                    r !== _)
                        throw new Error(u[r]);
                    this._dict_set = !0
                }
            }
            function n(t, e) {
                var r = new i(e);
                if (r.push(t, !0),
                r.err)
                    throw r.msg || u[r.err];
                return r.result
            }
            function a(t, e) {
                return e = e || {},
                e.raw = !0,
                n(t, e)
            }
            function s(t, e) {
                return e = e || {},
                e.gzip = !0,
                n(t, e)
            }
            var o = t("./zlib/deflate")
              , l = t("./utils/common")
              , h = t("./utils/strings")
              , u = t("./zlib/messages")
              , c = t("./zlib/zstream")
              , f = Object.prototype.toString
              , d = 0
              , p = 4
              , _ = 0
              , m = 1
              , g = 2
              , y = -1
              , v = 0
              , b = 8;
            i.prototype.push = function(t, e) {
                var r, i, n = this.strm, a = this.options.chunkSize;
                if (this.ended)
                    return !1;
                i = e === ~~e ? e : e === !0 ? p : d,
                "string" == typeof t ? n.input = h.string2buf(t) : "[object ArrayBuffer]" === f.call(t) ? n.input = new Uint8Array(t) : n.input = t,
                n.next_in = 0,
                n.avail_in = n.input.length;
                do {
                    if (0 === n.avail_out && (n.output = new l.Buf8(a),
                    n.next_out = 0,
                    n.avail_out = a),
                    r = o.deflate(n, i),
                    r !== m && r !== _)
                        return this.onEnd(r),
                        this.ended = !0,
                        !1;
                    0 !== n.avail_out && (0 !== n.avail_in || i !== p && i !== g) || ("string" === this.options.to ? this.onData(h.buf2binstring(l.shrinkBuf(n.output, n.next_out))) : this.onData(l.shrinkBuf(n.output, n.next_out)))
                } while ((n.avail_in > 0 || 0 === n.avail_out) && r !== m);return i === p ? (r = o.deflateEnd(this.strm),
                this.onEnd(r),
                this.ended = !0,
                r === _) : i !== g || (this.onEnd(_),
                n.avail_out = 0,
                !0)
            }
            ,
            i.prototype.onData = function(t) {
                this.chunks.push(t)
            }
            ,
            i.prototype.onEnd = function(t) {
                t === _ && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = l.flattenChunks(this.chunks)),
                this.chunks = [],
                this.err = t,
                this.msg = this.strm.msg
            }
            ,
            r.Deflate = i,
            r.deflate = n,
            r.deflateRaw = a,
            r.gzip = s
        }
        , {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/deflate": 67,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        61: [function(t, e, r) {
            "use strict";
            function i(t) {
                if (!(this instanceof i))
                    return new i(t);
                this.options = o.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, t || {});
                var e = this.options;
                e.raw && e.windowBits >= 0 && e.windowBits < 16 && (e.windowBits = -e.windowBits,
                0 === e.windowBits && (e.windowBits = -15)),
                !(e.windowBits >= 0 && e.windowBits < 16) || t && t.windowBits || (e.windowBits += 32),
                e.windowBits > 15 && e.windowBits < 48 && 0 === (15 & e.windowBits) && (e.windowBits |= 15),
                this.err = 0,
                this.msg = "",
                this.ended = !1,
                this.chunks = [],
                this.strm = new c,
                this.strm.avail_out = 0;
                var r = s.inflateInit2(this.strm, e.windowBits);
                if (r !== h.Z_OK)
                    throw new Error(u[r]);
                this.header = new f,
                s.inflateGetHeader(this.strm, this.header)
            }
            function n(t, e) {
                var r = new i(e);
                if (r.push(t, !0),
                r.err)
                    throw r.msg || u[r.err];
                return r.result
            }
            function a(t, e) {
                return e = e || {},
                e.raw = !0,
                n(t, e)
            }
            var s = t("./zlib/inflate")
              , o = t("./utils/common")
              , l = t("./utils/strings")
              , h = t("./zlib/constants")
              , u = t("./zlib/messages")
              , c = t("./zlib/zstream")
              , f = t("./zlib/gzheader")
              , d = Object.prototype.toString;
            i.prototype.push = function(t, e) {
                var r, i, n, a, u, c, f = this.strm, p = this.options.chunkSize, _ = this.options.dictionary, m = !1;
                if (this.ended)
                    return !1;
                i = e === ~~e ? e : e === !0 ? h.Z_FINISH : h.Z_NO_FLUSH,
                "string" == typeof t ? f.input = l.binstring2buf(t) : "[object ArrayBuffer]" === d.call(t) ? f.input = new Uint8Array(t) : f.input = t,
                f.next_in = 0,
                f.avail_in = f.input.length;
                do {
                    if (0 === f.avail_out && (f.output = new o.Buf8(p),
                    f.next_out = 0,
                    f.avail_out = p),
                    r = s.inflate(f, h.Z_NO_FLUSH),
                    r === h.Z_NEED_DICT && _ && (c = "string" == typeof _ ? l.string2buf(_) : "[object ArrayBuffer]" === d.call(_) ? new Uint8Array(_) : _,
                    r = s.inflateSetDictionary(this.strm, c)),
                    r === h.Z_BUF_ERROR && m === !0 && (r = h.Z_OK,
                    m = !1),
                    r !== h.Z_STREAM_END && r !== h.Z_OK)
                        return this.onEnd(r),
                        this.ended = !0,
                        !1;
                    f.next_out && (0 !== f.avail_out && r !== h.Z_STREAM_END && (0 !== f.avail_in || i !== h.Z_FINISH && i !== h.Z_SYNC_FLUSH) || ("string" === this.options.to ? (n = l.utf8border(f.output, f.next_out),
                    a = f.next_out - n,
                    u = l.buf2string(f.output, n),
                    f.next_out = a,
                    f.avail_out = p - a,
                    a && o.arraySet(f.output, f.output, n, a, 0),
                    this.onData(u)) : this.onData(o.shrinkBuf(f.output, f.next_out)))),
                    0 === f.avail_in && 0 === f.avail_out && (m = !0)
                } while ((f.avail_in > 0 || 0 === f.avail_out) && r !== h.Z_STREAM_END);return r === h.Z_STREAM_END && (i = h.Z_FINISH),
                i === h.Z_FINISH ? (r = s.inflateEnd(this.strm),
                this.onEnd(r),
                this.ended = !0,
                r === h.Z_OK) : i !== h.Z_SYNC_FLUSH || (this.onEnd(h.Z_OK),
                f.avail_out = 0,
                !0)
            }
            ,
            i.prototype.onData = function(t) {
                this.chunks.push(t)
            }
            ,
            i.prototype.onEnd = function(t) {
                t === h.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)),
                this.chunks = [],
                this.err = t,
                this.msg = this.strm.msg
            }
            ,
            r.Inflate = i,
            r.inflate = n,
            r.inflateRaw = a,
            r.ungzip = n
        }
        , {
            "./utils/common": 62,
            "./utils/strings": 63,
            "./zlib/constants": 65,
            "./zlib/gzheader": 68,
            "./zlib/inflate": 70,
            "./zlib/messages": 72,
            "./zlib/zstream": 74
        }],
        62: [function(t, e, r) {
            "use strict";
            var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            r.assign = function(t) {
                for (var e = Array.prototype.slice.call(arguments, 1); e.length; ) {
                    var r = e.shift();
                    if (r) {
                        if ("object" != typeof r)
                            throw new TypeError(r + "must be non-object");
                        for (var i in r)
                            r.hasOwnProperty(i) && (t[i] = r[i])
                    }
                }
                return t
            }
            ,
            r.shrinkBuf = function(t, e) {
                return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e,
                t)
            }
            ;
            var n = {
                arraySet: function(t, e, r, i, n) {
                    if (e.subarray && t.subarray)
                        return void t.set(e.subarray(r, r + i), n);
                    for (var a = 0; i > a; a++)
                        t[n + a] = e[r + a]
                },
                flattenChunks: function(t) {
                    var e, r, i, n, a, s;
                    for (i = 0,
                    e = 0,
                    r = t.length; r > e; e++)
                        i += t[e].length;
                    for (s = new Uint8Array(i),
                    n = 0,
                    e = 0,
                    r = t.length; r > e; e++)
                        a = t[e],
                        s.set(a, n),
                        n += a.length;
                    return s
                }
            }
              , a = {
                arraySet: function(t, e, r, i, n) {
                    for (var a = 0; i > a; a++)
                        t[n + a] = e[r + a]
                },
                flattenChunks: function(t) {
                    return [].concat.apply([], t)
                }
            };
            r.setTyped = function(t) {
                t ? (r.Buf8 = Uint8Array,
                r.Buf16 = Uint16Array,
                r.Buf32 = Int32Array,
                r.assign(r, n)) : (r.Buf8 = Array,
                r.Buf16 = Array,
                r.Buf32 = Array,
                r.assign(r, a))
            }
            ,
            r.setTyped(i)
        }
        , {}],
        63: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                if (65537 > e && (t.subarray && s || !t.subarray && a))
                    return String.fromCharCode.apply(null, n.shrinkBuf(t, e));
                for (var r = "", i = 0; e > i; i++)
                    r += String.fromCharCode(t[i]);
                return r
            }
            var n = t("./common")
              , a = !0
              , s = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (o) {
                a = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (o) {
                s = !1
            }
            for (var l = new n.Buf8(256), h = 0; 256 > h; h++)
                l[h] = h >= 252 ? 6 : h >= 248 ? 5 : h >= 240 ? 4 : h >= 224 ? 3 : h >= 192 ? 2 : 1;
            l[254] = l[254] = 1,
            r.string2buf = function(t) {
                var e, r, i, a, s, o = t.length, l = 0;
                for (a = 0; o > a; a++)
                    r = t.charCodeAt(a),
                    55296 === (64512 & r) && o > a + 1 && (i = t.charCodeAt(a + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    a++)),
                    l += 128 > r ? 1 : 2048 > r ? 2 : 65536 > r ? 3 : 4;
                for (e = new n.Buf8(l),
                s = 0,
                a = 0; l > s; a++)
                    r = t.charCodeAt(a),
                    55296 === (64512 & r) && o > a + 1 && (i = t.charCodeAt(a + 1),
                    56320 === (64512 & i) && (r = 65536 + (r - 55296 << 10) + (i - 56320),
                    a++)),
                    128 > r ? e[s++] = r : 2048 > r ? (e[s++] = 192 | r >>> 6,
                    e[s++] = 128 | 63 & r) : 65536 > r ? (e[s++] = 224 | r >>> 12,
                    e[s++] = 128 | r >>> 6 & 63,
                    e[s++] = 128 | 63 & r) : (e[s++] = 240 | r >>> 18,
                    e[s++] = 128 | r >>> 12 & 63,
                    e[s++] = 128 | r >>> 6 & 63,
                    e[s++] = 128 | 63 & r);
                return e
            }
            ,
            r.buf2binstring = function(t) {
                return i(t, t.length)
            }
            ,
            r.binstring2buf = function(t) {
                for (var e = new n.Buf8(t.length), r = 0, i = e.length; i > r; r++)
                    e[r] = t.charCodeAt(r);
                return e
            }
            ,
            r.buf2string = function(t, e) {
                var r, n, a, s, o = e || t.length, h = new Array(2 * o);
                for (n = 0,
                r = 0; o > r; )
                    if (a = t[r++],
                    128 > a)
                        h[n++] = a;
                    else if (s = l[a],
                    s > 4)
                        h[n++] = 65533,
                        r += s - 1;
                    else {
                        for (a &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && o > r; )
                            a = a << 6 | 63 & t[r++],
                            s--;
                        s > 1 ? h[n++] = 65533 : 65536 > a ? h[n++] = a : (a -= 65536,
                        h[n++] = 55296 | a >> 10 & 1023,
                        h[n++] = 56320 | 1023 & a)
                    }
                return i(h, n)
            }
            ,
            r.utf8border = function(t, e) {
                var r;
                for (e = e || t.length,
                e > t.length && (e = t.length),
                r = e - 1; r >= 0 && 128 === (192 & t[r]); )
                    r--;
                return 0 > r ? e : 0 === r ? e : r + l[t[r]] > e ? r : e
            }
        }
        , {
            "./common": 62
        }],
        64: [function(t, e, r) {
            "use strict";
            function i(t, e, r, i) {
                for (var n = 65535 & t | 0, a = t >>> 16 & 65535 | 0, s = 0; 0 !== r; ) {
                    s = r > 2e3 ? 2e3 : r,
                    r -= s;
                    do
                        n = n + e[i++] | 0,
                        a = a + n | 0;
                    while (--s);n %= 65521,
                    a %= 65521
                }
                return n | a << 16 | 0
            }
            e.exports = i
        }
        , {}],
        65: [function(t, e, r) {
            "use strict";
            e.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }
        , {}],
        66: [function(t, e, r) {
            "use strict";
            function i() {
                for (var t, e = [], r = 0; 256 > r; r++) {
                    t = r;
                    for (var i = 0; 8 > i; i++)
                        t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    e[r] = t
                }
                return e
            }
            function n(t, e, r, i) {
                var n = a
                  , s = i + r;
                t ^= -1;
                for (var o = i; s > o; o++)
                    t = t >>> 8 ^ n[255 & (t ^ e[o])];
                return -1 ^ t
            }
            var a = i();
            e.exports = n
        }
        , {}],
        67: [function(t, e, r) {
            "use strict";
            function i(t, e) {
                return t.msg = B[e],
                e
            }
            function n(t) {
                return (t << 1) - (t > 4 ? 9 : 0)
            }
            function a(t) {
                for (var e = t.length; --e >= 0; )
                    t[e] = 0
            }
            function s(t) {
                var e = t.state
                  , r = e.pending;
                r > t.avail_out && (r = t.avail_out),
                0 !== r && (O.arraySet(t.output, e.pending_buf, e.pending_out, r, t.next_out),
                t.next_out += r,
                e.pending_out += r,
                t.total_out += r,
                t.avail_out -= r,
                e.pending -= r,
                0 === e.pending && (e.pending_out = 0))
            }
            function o(t, e) {
                k._tr_flush_block(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e),
                t.block_start = t.strstart,
                s(t.strm)
            }
            function l(t, e) {
                t.pending_buf[t.pending++] = e
            }
            function h(t, e) {
                t.pending_buf[t.pending++] = e >>> 8 & 255,
                t.pending_buf[t.pending++] = 255 & e
            }
            function u(t, e, r, i) {
                var n = t.avail_in;
                return n > i && (n = i),
                0 === n ? 0 : (t.avail_in -= n,
                O.arraySet(e, t.input, t.next_in, n, r),
                1 === t.state.wrap ? t.adler = I(t.adler, e, n, r) : 2 === t.state.wrap && (t.adler = R(t.adler, e, n, r)),
                t.next_in += n,
                t.total_in += n,
                n)
            }
            function c(t, e) {
                var r, i, n = t.max_chain_length, a = t.strstart, s = t.prev_length, o = t.nice_match, l = t.strstart > t.w_size - ce ? t.strstart - (t.w_size - ce) : 0, h = t.window, u = t.w_mask, c = t.prev, f = t.strstart + ue, d = h[a + s - 1], p = h[a + s];
                t.prev_length >= t.good_match && (n >>= 2),
                o > t.lookahead && (o = t.lookahead);
                do
                    if (r = e,
                    h[r + s] === p && h[r + s - 1] === d && h[r] === h[a] && h[++r] === h[a + 1]) {
                        a += 2,
                        r++;
                        do
                            ;
                        while (h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && h[++a] === h[++r] && f > a);if (i = ue - (f - a),
                        a = f - ue,
                        i > s) {
                            if (t.match_start = e,
                            s = i,
                            i >= o)
                                break;
                            d = h[a + s - 1],
                            p = h[a + s]
                        }
                    }
                while ((e = c[e & u]) > l && 0 !== --n);return s <= t.lookahead ? s : t.lookahead
            }
            function f(t) {
                var e, r, i, n, a, s = t.w_size;
                do {
                    if (n = t.window_size - t.lookahead - t.strstart,
                    t.strstart >= s + (s - ce)) {
                        O.arraySet(t.window, t.window, s, s, 0),
                        t.match_start -= s,
                        t.strstart -= s,
                        t.block_start -= s,
                        r = t.hash_size,
                        e = r;
                        do
                            i = t.head[--e],
                            t.head[e] = i >= s ? i - s : 0;
                        while (--r);r = s,
                        e = r;
                        do
                            i = t.prev[--e],
                            t.prev[e] = i >= s ? i - s : 0;
                        while (--r);n += s
                    }
                    if (0 === t.strm.avail_in)
                        break;
                    if (r = u(t.strm, t.window, t.strstart + t.lookahead, n),
                    t.lookahead += r,
                    t.lookahead + t.insert >= he)
                        for (a = t.strstart - t.insert,
                        t.ins_h = t.window[a],
                        t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + 1]) & t.hash_mask; t.insert && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[a + he - 1]) & t.hash_mask,
                        t.prev[a & t.w_mask] = t.head[t.ins_h],
                        t.head[t.ins_h] = a,
                        a++,
                        t.insert--,
                        !(t.lookahead + t.insert < he)); )
                            ;
                } while (t.lookahead < ce && 0 !== t.strm.avail_in)
            }
            function d(t, e) {
                var r = 65535;
                for (r > t.pending_buf_size - 5 && (r = t.pending_buf_size - 5); ; ) {
                    if (t.lookahead <= 1) {
                        if (f(t),
                        0 === t.lookahead && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    t.strstart += t.lookahead,
                    t.lookahead = 0;
                    var i = t.block_start + r;
                    if ((0 === t.strstart || t.strstart >= i) && (t.lookahead = t.strstart - i,
                    t.strstart = i,
                    o(t, !1),
                    0 === t.strm.avail_out))
                        return be;
                    if (t.strstart - t.block_start >= t.w_size - ce && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.strstart > t.block_start && (o(t, !1),
                0 === t.strm.avail_out) ? be : be
            }
            function p(t, e) {
                for (var r, i; ; ) {
                    if (t.lookahead < ce) {
                        if (f(t),
                        t.lookahead < ce && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (r = 0,
                    t.lookahead >= he && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                    r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                    t.head[t.ins_h] = t.strstart),
                    0 !== r && t.strstart - r <= t.w_size - ce && (t.match_length = c(t, r)),
                    t.match_length >= he)
                        if (i = k._tr_tally(t, t.strstart - t.match_start, t.match_length - he),
                        t.lookahead -= t.match_length,
                        t.match_length <= t.max_lazy_match && t.lookahead >= he) {
                            t.match_length--;
                            do
                                t.strstart++,
                                t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                                r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                                t.head[t.ins_h] = t.strstart;
                            while (0 !== --t.match_length);t.strstart++
                        } else
                            t.strstart += t.match_length,
                            t.match_length = 0,
                            t.ins_h = t.window[t.strstart],
                            t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + 1]) & t.hash_mask;
                    else
                        i = k._tr_tally(t, 0, t.window[t.strstart]),
                        t.lookahead--,
                        t.strstart++;
                    if (i && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = t.strstart < he - 1 ? t.strstart : he - 1,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function _(t, e) {
                for (var r, i, n; ; ) {
                    if (t.lookahead < ce) {
                        if (f(t),
                        t.lookahead < ce && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (r = 0,
                    t.lookahead >= he && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                    r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                    t.head[t.ins_h] = t.strstart),
                    t.prev_length = t.match_length,
                    t.prev_match = t.match_start,
                    t.match_length = he - 1,
                    0 !== r && t.prev_length < t.max_lazy_match && t.strstart - r <= t.w_size - ce && (t.match_length = c(t, r),
                    t.match_length <= 5 && (t.strategy === H || t.match_length === he && t.strstart - t.match_start > 4096) && (t.match_length = he - 1)),
                    t.prev_length >= he && t.match_length <= t.prev_length) {
                        n = t.strstart + t.lookahead - he,
                        i = k._tr_tally(t, t.strstart - 1 - t.prev_match, t.prev_length - he),
                        t.lookahead -= t.prev_length - 1,
                        t.prev_length -= 2;
                        do
                            ++t.strstart <= n && (t.ins_h = (t.ins_h << t.hash_shift ^ t.window[t.strstart + he - 1]) & t.hash_mask,
                            r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h],
                            t.head[t.ins_h] = t.strstart);
                        while (0 !== --t.prev_length);if (t.match_available = 0,
                        t.match_length = he - 1,
                        t.strstart++,
                        i && (o(t, !1),
                        0 === t.strm.avail_out))
                            return be
                    } else if (t.match_available) {
                        if (i = k._tr_tally(t, 0, t.window[t.strstart - 1]),
                        i && o(t, !1),
                        t.strstart++,
                        t.lookahead--,
                        0 === t.strm.avail_out)
                            return be
                    } else
                        t.match_available = 1,
                        t.strstart++,
                        t.lookahead--
                }
                return t.match_available && (i = k._tr_tally(t, 0, t.window[t.strstart - 1]),
                t.match_available = 0),
                t.insert = t.strstart < he - 1 ? t.strstart : he - 1,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function m(t, e) {
                for (var r, i, n, a, s = t.window; ; ) {
                    if (t.lookahead <= ue) {
                        if (f(t),
                        t.lookahead <= ue && e === M)
                            return be;
                        if (0 === t.lookahead)
                            break
                    }
                    if (t.match_length = 0,
                    t.lookahead >= he && t.strstart > 0 && (n = t.strstart - 1,
                    i = s[n],
                    i === s[++n] && i === s[++n] && i === s[++n])) {
                        a = t.strstart + ue;
                        do
                            ;
                        while (i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && i === s[++n] && a > n);t.match_length = ue - (a - n),
                        t.match_length > t.lookahead && (t.match_length = t.lookahead)
                    }
                    if (t.match_length >= he ? (r = k._tr_tally(t, 1, t.match_length - he),
                    t.lookahead -= t.match_length,
                    t.strstart += t.match_length,
                    t.match_length = 0) : (r = k._tr_tally(t, 0, t.window[t.strstart]),
                    t.lookahead--,
                    t.strstart++),
                    r && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function g(t, e) {
                for (var r; ; ) {
                    if (0 === t.lookahead && (f(t),
                    0 === t.lookahead)) {
                        if (e === M)
                            return be;
                        break
                    }
                    if (t.match_length = 0,
                    r = k._tr_tally(t, 0, t.window[t.strstart]),
                    t.lookahead--,
                    t.strstart++,
                    r && (o(t, !1),
                    0 === t.strm.avail_out))
                        return be
                }
                return t.insert = 0,
                e === N ? (o(t, !0),
                0 === t.strm.avail_out ? Te : De) : t.last_lit && (o(t, !1),
                0 === t.strm.avail_out) ? be : we
            }
            function y(t, e, r, i, n) {
                this.good_length = t,
                this.max_lazy = e,
                this.nice_length = r,
                this.max_chain = i,
                this.func = n
            }
            function v(t) {
                t.window_size = 2 * t.w_size,
                a(t.head),
                t.max_lazy_match = C[t.level].max_lazy,
                t.good_match = C[t.level].good_length,
                t.nice_match = C[t.level].nice_length,
                t.max_chain_length = C[t.level].max_chain,
                t.strstart = 0,
                t.block_start = 0,
                t.lookahead = 0,
                t.insert = 0,
                t.match_length = t.prev_length = he - 1,
                t.match_available = 0,
                t.ins_h = 0
            }
            function b() {
                this.strm = null,
                this.status = 0,
                this.pending_buf = null,
                this.pending_buf_size = 0,
                this.pending_out = 0,
                this.pending = 0,
                this.wrap = 0,
                this.gzhead = null,
                this.gzindex = 0,
                this.method = J,
                this.last_flush = -1,
                this.w_size = 0,
                this.w_bits = 0,
                this.w_mask = 0,
                this.window = null,
                this.window_size = 0,
                this.prev = null,
                this.head = null,
                this.ins_h = 0,
                this.hash_size = 0,
                this.hash_bits = 0,
                this.hash_mask = 0,
                this.hash_shift = 0,
                this.block_start = 0,
                this.match_length = 0,
                this.prev_match = 0,
                this.match_available = 0,
                this.strstart = 0,
                this.match_start = 0,
                this.lookahead = 0,
                this.prev_length = 0,
                this.max_chain_length = 0,
                this.max_lazy_match = 0,
                this.level = 0,
                this.strategy = 0,
                this.good_match = 0,
                this.nice_match = 0,
                this.dyn_ltree = new O.Buf16(2 * oe),
                this.dyn_dtree = new O.Buf16(2 * (2 * ae + 1)),
                this.bl_tree = new O.Buf16(2 * (2 * se + 1)),
                a(this.dyn_ltree),
                a(this.dyn_dtree),
                a(this.bl_tree),
                this.l_desc = null,
                this.d_desc = null,
                this.bl_desc = null,
                this.bl_count = new O.Buf16(le + 1),
                this.heap = new O.Buf16(2 * ne + 1),
                a(this.heap),
                this.heap_len = 0,
                this.heap_max = 0,
                this.depth = new O.Buf16(2 * ne + 1),
                a(this.depth),
                this.l_buf = 0,
                this.lit_bufsize = 0,
                this.last_lit = 0,
                this.d_buf = 0,
                this.opt_len = 0,
                this.static_len = 0,
                this.matches = 0,
                this.insert = 0,
                this.bi_buf = 0,
                this.bi_valid = 0
            }
            function w(t) {
                var e;
                return t && t.state ? (t.total_in = t.total_out = 0,
                t.data_type = K,
                e = t.state,
                e.pending = 0,
                e.pending_out = 0,
                e.wrap < 0 && (e.wrap = -e.wrap),
                e.status = e.wrap ? de : ye,
                t.adler = 2 === e.wrap ? 0 : 1,
                e.last_flush = M,
                k._tr_init(e),
                z) : i(t, V)
            }
            function T(t) {
                var e = w(t);
                return e === z && v(t.state),
                e
            }
            function D(t, e) {
                return t && t.state ? 2 !== t.state.wrap ? V : (t.state.gzhead = e,
                z) : V
            }
            function S(t, e, r, n, a, s) {
                if (!t)
                    return V;
                var o = 1;
                if (e === W && (e = 6),
                0 > n ? (o = 0,
                n = -n) : n > 15 && (o = 2,
                n -= 16),
                1 > a || a > Q || r !== J || 8 > n || n > 15 || 0 > e || e > 9 || 0 > s || s > Z)
                    return i(t, V);
                8 === n && (n = 9);
                var l = new b;
                return t.state = l,
                l.strm = t,
                l.wrap = o,
                l.gzhead = null,
                l.w_bits = n,
                l.w_size = 1 << l.w_bits,
                l.w_mask = l.w_size - 1,
                l.hash_bits = a + 7,
                l.hash_size = 1 << l.hash_bits,
                l.hash_mask = l.hash_size - 1,
                l.hash_shift = ~~((l.hash_bits + he - 1) / he),
                l.window = new O.Buf8(2 * l.w_size),
                l.head = new O.Buf16(l.hash_size),
                l.prev = new O.Buf16(l.w_size),
                l.lit_bufsize = 1 << a + 6,
                l.pending_buf_size = 4 * l.lit_bufsize,
                l.pending_buf = new O.Buf8(l.pending_buf_size),
                l.d_buf = 1 * l.lit_bufsize,
                l.l_buf = 3 * l.lit_bufsize,
                l.level = e,
                l.strategy = s,
                l.method = r,
                T(t)
            }
            function E(t, e) {
                return S(t, e, J, te, ee, q)
            }
            function A(t, e) {
                var r, o, u, c;
                if (!t || !t.state || e > j || 0 > e)
                    return t ? i(t, V) : V;
                if (o = t.state,
                !t.output || !t.input && 0 !== t.avail_in || o.status === ve && e !== N)
                    return i(t, 0 === t.avail_out ? G : V);
                if (o.strm = t,
                r = o.last_flush,
                o.last_flush = e,
                o.status === de)
                    if (2 === o.wrap)
                        t.adler = 0,
                        l(o, 31),
                        l(o, 139),
                        l(o, 8),
                        o.gzhead ? (l(o, (o.gzhead.text ? 1 : 0) + (o.gzhead.hcrc ? 2 : 0) + (o.gzhead.extra ? 4 : 0) + (o.gzhead.name ? 8 : 0) + (o.gzhead.comment ? 16 : 0)),
                        l(o, 255 & o.gzhead.time),
                        l(o, o.gzhead.time >> 8 & 255),
                        l(o, o.gzhead.time >> 16 & 255),
                        l(o, o.gzhead.time >> 24 & 255),
                        l(o, 9 === o.level ? 2 : o.strategy >= Y || o.level < 2 ? 4 : 0),
                        l(o, 255 & o.gzhead.os),
                        o.gzhead.extra && o.gzhead.extra.length && (l(o, 255 & o.gzhead.extra.length),
                        l(o, o.gzhead.extra.length >> 8 & 255)),
                        o.gzhead.hcrc && (t.adler = R(t.adler, o.pending_buf, o.pending, 0)),
                        o.gzindex = 0,
                        o.status = pe) : (l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 0),
                        l(o, 9 === o.level ? 2 : o.strategy >= Y || o.level < 2 ? 4 : 0),
                        l(o, Se),
                        o.status = ye);
                    else {
                        var f = J + (o.w_bits - 8 << 4) << 8
                          , d = -1;
                        d = o.strategy >= Y || o.level < 2 ? 0 : o.level < 6 ? 1 : 6 === o.level ? 2 : 3,
                        f |= d << 6,
                        0 !== o.strstart && (f |= fe),
                        f += 31 - f % 31,
                        o.status = ye,
                        h(o, f),
                        0 !== o.strstart && (h(o, t.adler >>> 16),
                        h(o, 65535 & t.adler)),
                        t.adler = 1
                    }
                if (o.status === pe)
                    if (o.gzhead.extra) {
                        for (u = o.pending; o.gzindex < (65535 & o.gzhead.extra.length) && (o.pending !== o.pending_buf_size || (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        s(t),
                        u = o.pending,
                        o.pending !== o.pending_buf_size)); )
                            l(o, 255 & o.gzhead.extra[o.gzindex]),
                            o.gzindex++;
                        o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        o.gzindex === o.gzhead.extra.length && (o.gzindex = 0,
                        o.status = _e)
                    } else
                        o.status = _e;
                if (o.status === _e)
                    if (o.gzhead.name) {
                        u = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                            s(t),
                            u = o.pending,
                            o.pending === o.pending_buf_size)) {
                                c = 1;
                                break
                            }
                            c = o.gzindex < o.gzhead.name.length ? 255 & o.gzhead.name.charCodeAt(o.gzindex++) : 0,
                            l(o, c)
                        } while (0 !== c);o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        0 === c && (o.gzindex = 0,
                        o.status = me)
                    } else
                        o.status = me;
                if (o.status === me)
                    if (o.gzhead.comment) {
                        u = o.pending;
                        do {
                            if (o.pending === o.pending_buf_size && (o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                            s(t),
                            u = o.pending,
                            o.pending === o.pending_buf_size)) {
                                c = 1;
                                break
                            }
                            c = o.gzindex < o.gzhead.comment.length ? 255 & o.gzhead.comment.charCodeAt(o.gzindex++) : 0,
                            l(o, c)
                        } while (0 !== c);o.gzhead.hcrc && o.pending > u && (t.adler = R(t.adler, o.pending_buf, o.pending - u, u)),
                        0 === c && (o.status = ge)
                    } else
                        o.status = ge;
                if (o.status === ge && (o.gzhead.hcrc ? (o.pending + 2 > o.pending_buf_size && s(t),
                o.pending + 2 <= o.pending_buf_size && (l(o, 255 & t.adler),
                l(o, t.adler >> 8 & 255),
                t.adler = 0,
                o.status = ye)) : o.status = ye),
                0 !== o.pending) {
                    if (s(t),
                    0 === t.avail_out)
                        return o.last_flush = -1,
                        z
                } else if (0 === t.avail_in && n(e) <= n(r) && e !== N)
                    return i(t, G);
                if (o.status === ve && 0 !== t.avail_in)
                    return i(t, G);
                if (0 !== t.avail_in || 0 !== o.lookahead || e !== M && o.status !== ve) {
                    var p = o.strategy === Y ? g(o, e) : o.strategy === X ? m(o, e) : C[o.level].func(o, e);
                    if (p !== Te && p !== De || (o.status = ve),
                    p === be || p === Te)
                        return 0 === t.avail_out && (o.last_flush = -1),
                        z;
                    if (p === we && (e === F ? k._tr_align(o) : e !== j && (k._tr_stored_block(o, 0, 0, !1),
                    e === L && (a(o.head),
                    0 === o.lookahead && (o.strstart = 0,
                    o.block_start = 0,
                    o.insert = 0))),
                    s(t),
                    0 === t.avail_out))
                        return o.last_flush = -1,
                        z
                }
                return e !== N ? z : o.wrap <= 0 ? U : (2 === o.wrap ? (l(o, 255 & t.adler),
                l(o, t.adler >> 8 & 255),
                l(o, t.adler >> 16 & 255),
                l(o, t.adler >> 24 & 255),
                l(o, 255 & t.total_in),
                l(o, t.total_in >> 8 & 255),
                l(o, t.total_in >> 16 & 255),
                l(o, t.total_in >> 24 & 255)) : (h(o, t.adler >>> 16),
                h(o, 65535 & t.adler)),
                s(t),
                o.wrap > 0 && (o.wrap = -o.wrap),
                0 !== o.pending ? z : U)
            }
            function x(t) {
                var e;
                return t && t.state ? (e = t.state.status,
                e !== de && e !== pe && e !== _e && e !== me && e !== ge && e !== ye && e !== ve ? i(t, V) : (t.state = null,
                e === ye ? i(t, $) : z)) : V
            }
            function P(t, e) {
                var r, i, n, s, o, l, h, u, c = e.length;
                if (!t || !t.state)
                    return V;
                if (r = t.state,
                s = r.wrap,
                2 === s || 1 === s && r.status !== de || r.lookahead)
                    return V;
                for (1 === s && (t.adler = I(t.adler, e, c, 0)),
                r.wrap = 0,
                c >= r.w_size && (0 === s && (a(r.head),
                r.strstart = 0,
                r.block_start = 0,
                r.insert = 0),
                u = new O.Buf8(r.w_size),
                O.arraySet(u, e, c - r.w_size, r.w_size, 0),
                e = u,
                c = r.w_size),
                o = t.avail_in,
                l = t.next_in,
                h = t.input,
                t.avail_in = c,
                t.next_in = 0,
                t.input = e,
                f(r); r.lookahead >= he; ) {
                    i = r.strstart,
                    n = r.lookahead - (he - 1);
                    do
                        r.ins_h = (r.ins_h << r.hash_shift ^ r.window[i + he - 1]) & r.hash_mask,
                        r.prev[i & r.w_mask] = r.head[r.ins_h],
                        r.head[r.ins_h] = i,
                        i++;
                    while (--n);r.strstart = i,
                    r.lookahead = he - 1,
                    f(r)
                }
                return r.strstart += r.lookahead,
                r.block_start = r.strstart,
                r.insert = r.lookahead,
                r.lookahead = 0,
                r.match_length = r.prev_length = he - 1,
                r.match_available = 0,
                t.next_in = l,
                t.input = h,
                t.avail_in = o,
                r.wrap = s,
                z
            }
            var C, O = t("../utils/common"), k = t("./trees"), I = t("./adler32"), R = t("./crc32"), B = t("./messages"), M = 0, F = 1, L = 3, N = 4, j = 5, z = 0, U = 1, V = -2, $ = -3, G = -5, W = -1, H = 1, Y = 2, X = 3, Z = 4, q = 0, K = 2, J = 8, Q = 9, te = 15, ee = 8, re = 29, ie = 256, ne = ie + 1 + re, ae = 30, se = 19, oe = 2 * ne + 1, le = 15, he = 3, ue = 258, ce = ue + he + 1, fe = 32, de = 42, pe = 69, _e = 73, me = 91, ge = 103, ye = 113, ve = 666, be = 1, we = 2, Te = 3, De = 4, Se = 3;
            C = [new y(0,0,0,0,d), new y(4,4,8,4,p), new y(4,5,16,8,p), new y(4,6,32,32,p), new y(4,4,16,16,_), new y(8,16,32,32,_), new y(8,16,128,128,_), new y(8,32,128,256,_), new y(32,128,258,1024,_), new y(32,258,258,4096,_)],
            r.deflateInit = E,
            r.deflateInit2 = S,
            r.deflateReset = T,
            r.deflateResetKeep = w,
            r.deflateSetHeader = D,
            r.deflate = A,
            r.deflateEnd = x,
            r.deflateSetDictionary = P,
            r.deflateInfo = "pako deflate (from Nodeca project)"
        }
        , {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./messages": 72,
            "./trees": 73
        }],
        68: [function(t, e, r) {
            "use strict";
            function i() {
                this.text = 0,
                this.time = 0,
                this.xflags = 0,
                this.os = 0,
                this.extra = null,
                this.extra_len = 0,
                this.name = "",
                this.comment = "",
                this.hcrc = 0,
                this.done = !1
            }
            e.exports = i
        }
        , {}],
        69: [function(t, e, r) {
            "use strict";
            var i = 30
              , n = 12;
            e.exports = function(t, e) {
                var r, a, s, o, l, h, u, c, f, d, p, _, m, g, y, v, b, w, T, D, S, E, A, x, P;
                r = t.state,
                a = t.next_in,
                x = t.input,
                s = a + (t.avail_in - 5),
                o = t.next_out,
                P = t.output,
                l = o - (e - t.avail_out),
                h = o + (t.avail_out - 257),
                u = r.dmax,
                c = r.wsize,
                f = r.whave,
                d = r.wnext,
                p = r.window,
                _ = r.hold,
                m = r.bits,
                g = r.lencode,
                y = r.distcode,
                v = (1 << r.lenbits) - 1,
                b = (1 << r.distbits) - 1;
                t: do {
                    15 > m && (_ += x[a++] << m,
                    m += 8,
                    _ += x[a++] << m,
                    m += 8),
                    w = g[_ & v];
                    e: for (; ; ) {
                        if (T = w >>> 24,
                        _ >>>= T,
                        m -= T,
                        T = w >>> 16 & 255,
                        0 === T)
                            P[o++] = 65535 & w;
                        else {
                            if (!(16 & T)) {
                                if (0 === (64 & T)) {
                                    w = g[(65535 & w) + (_ & (1 << T) - 1)];
                                    continue e
                                }
                                if (32 & T) {
                                    r.mode = n;
                                    break t
                                }
                                t.msg = "invalid literal/length code",
                                r.mode = i;
                                break t
                            }
                            D = 65535 & w,
                            T &= 15,
                            T && (T > m && (_ += x[a++] << m,
                            m += 8),
                            D += _ & (1 << T) - 1,
                            _ >>>= T,
                            m -= T),
                            15 > m && (_ += x[a++] << m,
                            m += 8,
                            _ += x[a++] << m,
                            m += 8),
                            w = y[_ & b];
                            r: for (; ; ) {
                                if (T = w >>> 24,
                                _ >>>= T,
                                m -= T,
                                T = w >>> 16 & 255,
                                !(16 & T)) {
                                    if (0 === (64 & T)) {
                                        w = y[(65535 & w) + (_ & (1 << T) - 1)];
                                        continue r
                                    }
                                    t.msg = "invalid distance code",
                                    r.mode = i;
                                    break t
                                }
                                if (S = 65535 & w,
                                T &= 15,
                                T > m && (_ += x[a++] << m,
                                m += 8,
                                T > m && (_ += x[a++] << m,
                                m += 8)),
                                S += _ & (1 << T) - 1,
                                S > u) {
                                    t.msg = "invalid distance too far back",
                                    r.mode = i;
                                    break t
                                }
                                if (_ >>>= T,
                                m -= T,
                                T = o - l,
                                S > T) {
                                    if (T = S - T,
                                    T > f && r.sane) {
                                        t.msg = "invalid distance too far back",
                                        r.mode = i;
                                        break t
                                    }
                                    if (E = 0,
                                    A = p,
                                    0 === d) {
                                        if (E += c - T,
                                        D > T) {
                                            D -= T;
                                            do
                                                P[o++] = p[E++];
                                            while (--T);E = o - S,
                                            A = P
                                        }
                                    } else if (T > d) {
                                        if (E += c + d - T,
                                        T -= d,
                                        D > T) {
                                            D -= T;
                                            do
                                                P[o++] = p[E++];
                                            while (--T);if (E = 0,
                                            D > d) {
                                                T = d,
                                                D -= T;
                                                do
                                                    P[o++] = p[E++];
                                                while (--T);E = o - S,
                                                A = P
                                            }
                                        }
                                    } else if (E += d - T,
                                    D > T) {
                                        D -= T;
                                        do
                                            P[o++] = p[E++];
                                        while (--T);E = o - S,
                                        A = P
                                    }
                                    for (; D > 2; )
                                        P[o++] = A[E++],
                                        P[o++] = A[E++],
                                        P[o++] = A[E++],
                                        D -= 3;
                                    D && (P[o++] = A[E++],
                                    D > 1 && (P[o++] = A[E++]))
                                } else {
                                    E = o - S;
                                    do
                                        P[o++] = P[E++],
                                        P[o++] = P[E++],
                                        P[o++] = P[E++],
                                        D -= 3;
                                    while (D > 2);D && (P[o++] = P[E++],
                                    D > 1 && (P[o++] = P[E++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (s > a && h > o);D = m >> 3,
                a -= D,
                m -= D << 3,
                _ &= (1 << m) - 1,
                t.next_in = a,
                t.next_out = o,
                t.avail_in = s > a ? 5 + (s - a) : 5 - (a - s),
                t.avail_out = h > o ? 257 + (h - o) : 257 - (o - h),
                r.hold = _,
                r.bits = m
            }
        }
        , {}],
        70: [function(t, e, r) {
            "use strict";
            function i(t) {
                return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24)
            }
            function n() {
                this.mode = 0,
                this.last = !1,
                this.wrap = 0,
                this.havedict = !1,
                this.flags = 0,
                this.dmax = 0,
                this.check = 0,
                this.total = 0,
                this.head = null,
                this.wbits = 0,
                this.wsize = 0,
                this.whave = 0,
                this.wnext = 0,
                this.window = null,
                this.hold = 0,
                this.bits = 0,
                this.length = 0,
                this.offset = 0,
                this.extra = 0,
                this.lencode = null,
                this.distcode = null,
                this.lenbits = 0,
                this.distbits = 0,
                this.ncode = 0,
                this.nlen = 0,
                this.ndist = 0,
                this.have = 0,
                this.next = null,
                this.lens = new y.Buf16(320),
                this.work = new y.Buf16(288),
                this.lendyn = null,
                this.distdyn = null,
                this.sane = 0,
                this.back = 0,
                this.was = 0
            }
            function a(t) {
                var e;
                return t && t.state ? (e = t.state,
                t.total_in = t.total_out = e.total = 0,
                t.msg = "",
                e.wrap && (t.adler = 1 & e.wrap),
                e.mode = L,
                e.last = 0,
                e.havedict = 0,
                e.dmax = 32768,
                e.head = null,
                e.hold = 0,
                e.bits = 0,
                e.lencode = e.lendyn = new y.Buf32(_e),
                e.distcode = e.distdyn = new y.Buf32(me),
                e.sane = 1,
                e.back = -1,
                C) : I
            }
            function s(t) {
                var e;
                return t && t.state ? (e = t.state,
                e.wsize = 0,
                e.whave = 0,
                e.wnext = 0,
                a(t)) : I
            }
            function o(t, e) {
                var r, i;
                return t && t.state ? (i = t.state,
                0 > e ? (r = 0,
                e = -e) : (r = (e >> 4) + 1,
                48 > e && (e &= 15)),
                e && (8 > e || e > 15) ? I : (null !== i.window && i.wbits !== e && (i.window = null),
                i.wrap = r,
                i.wbits = e,
                s(t))) : I
            }
            function l(t, e) {
                var r, i;
                return t ? (i = new n,
                t.state = i,
                i.window = null,
                r = o(t, e),
                r !== C && (t.state = null),
                r) : I
            }
            function h(t) {
                return l(t, ye)
            }
            function u(t) {
                if (ve) {
                    var e;
                    for (m = new y.Buf32(512),
                    g = new y.Buf32(32),
                    e = 0; 144 > e; )
                        t.lens[e++] = 8;
                    for (; 256 > e; )
                        t.lens[e++] = 9;
                    for (; 280 > e; )
                        t.lens[e++] = 7;
                    for (; 288 > e; )
                        t.lens[e++] = 8;
                    for (T(S, t.lens, 0, 288, m, 0, t.work, {
                        bits: 9
                    }),
                    e = 0; 32 > e; )
                        t.lens[e++] = 5;
                    T(E, t.lens, 0, 32, g, 0, t.work, {
                        bits: 5
                    }),
                    ve = !1
                }
                t.lencode = m,
                t.lenbits = 9,
                t.distcode = g,
                t.distbits = 5
            }
            function c(t, e, r, i) {
                var n, a = t.state;
                return null === a.window && (a.wsize = 1 << a.wbits,
                a.wnext = 0,
                a.whave = 0,
                a.window = new y.Buf8(a.wsize)),
                i >= a.wsize ? (y.arraySet(a.window, e, r - a.wsize, a.wsize, 0),
                a.wnext = 0,
                a.whave = a.wsize) : (n = a.wsize - a.wnext,
                n > i && (n = i),
                y.arraySet(a.window, e, r - i, n, a.wnext),
                i -= n,
                i ? (y.arraySet(a.window, e, r - i, i, 0),
                a.wnext = i,
                a.whave = a.wsize) : (a.wnext += n,
                a.wnext === a.wsize && (a.wnext = 0),
                a.whave < a.wsize && (a.whave += n))),
                0
            }
            function f(t, e) {
                var r, n, a, s, o, l, h, f, d, p, _, m, g, _e, me, ge, ye, ve, be, we, Te, De, Se, Ee, Ae = 0, xe = new y.Buf8(4), Pe = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!t || !t.state || !t.output || !t.input && 0 !== t.avail_in)
                    return I;
                r = t.state,
                r.mode === X && (r.mode = Z),
                o = t.next_out,
                a = t.output,
                h = t.avail_out,
                s = t.next_in,
                n = t.input,
                l = t.avail_in,
                f = r.hold,
                d = r.bits,
                p = l,
                _ = h,
                De = C;
                t: for (; ; )
                    switch (r.mode) {
                    case L:
                        if (0 === r.wrap) {
                            r.mode = Z;
                            break
                        }
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (2 & r.wrap && 35615 === f) {
                            r.check = 0,
                            xe[0] = 255 & f,
                            xe[1] = f >>> 8 & 255,
                            r.check = b(r.check, xe, 2, 0),
                            f = 0,
                            d = 0,
                            r.mode = N;
                            break
                        }
                        if (r.flags = 0,
                        r.head && (r.head.done = !1),
                        !(1 & r.wrap) || (((255 & f) << 8) + (f >> 8)) % 31) {
                            t.msg = "incorrect header check",
                            r.mode = fe;
                            break
                        }
                        if ((15 & f) !== F) {
                            t.msg = "unknown compression method",
                            r.mode = fe;
                            break
                        }
                        if (f >>>= 4,
                        d -= 4,
                        Te = (15 & f) + 8,
                        0 === r.wbits)
                            r.wbits = Te;
                        else if (Te > r.wbits) {
                            t.msg = "invalid window size",
                            r.mode = fe;
                            break
                        }
                        r.dmax = 1 << Te,
                        t.adler = r.check = 1,
                        r.mode = 512 & f ? H : X,
                        f = 0,
                        d = 0;
                        break;
                    case N:
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (r.flags = f,
                        (255 & r.flags) !== F) {
                            t.msg = "unknown compression method",
                            r.mode = fe;
                            break
                        }
                        if (57344 & r.flags) {
                            t.msg = "unknown header flags set",
                            r.mode = fe;
                            break
                        }
                        r.head && (r.head.text = f >> 8 & 1),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        r.check = b(r.check, xe, 2, 0)),
                        f = 0,
                        d = 0,
                        r.mode = j;
                    case j:
                        for (; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        r.head && (r.head.time = f),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        xe[2] = f >>> 16 & 255,
                        xe[3] = f >>> 24 & 255,
                        r.check = b(r.check, xe, 4, 0)),
                        f = 0,
                        d = 0,
                        r.mode = z;
                    case z:
                        for (; 16 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        r.head && (r.head.xflags = 255 & f,
                        r.head.os = f >> 8),
                        512 & r.flags && (xe[0] = 255 & f,
                        xe[1] = f >>> 8 & 255,
                        r.check = b(r.check, xe, 2, 0)),
                        f = 0,
                        d = 0,
                        r.mode = U;
                    case U:
                        if (1024 & r.flags) {
                            for (; 16 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.length = f,
                            r.head && (r.head.extra_len = f),
                            512 & r.flags && (xe[0] = 255 & f,
                            xe[1] = f >>> 8 & 255,
                            r.check = b(r.check, xe, 2, 0)),
                            f = 0,
                            d = 0
                        } else
                            r.head && (r.head.extra = null);
                        r.mode = V;
                    case V:
                        if (1024 & r.flags && (m = r.length,
                        m > l && (m = l),
                        m && (r.head && (Te = r.head.extra_len - r.length,
                        r.head.extra || (r.head.extra = new Array(r.head.extra_len)),
                        y.arraySet(r.head.extra, n, s, m, Te)),
                        512 & r.flags && (r.check = b(r.check, n, m, s)),
                        l -= m,
                        s += m,
                        r.length -= m),
                        r.length))
                            break t;
                        r.length = 0,
                        r.mode = $;
                    case $:
                        if (2048 & r.flags) {
                            if (0 === l)
                                break t;
                            m = 0;
                            do
                                Te = n[s + m++],
                                r.head && Te && r.length < 65536 && (r.head.name += String.fromCharCode(Te));
                            while (Te && l > m);if (512 & r.flags && (r.check = b(r.check, n, m, s)),
                            l -= m,
                            s += m,
                            Te)
                                break t
                        } else
                            r.head && (r.head.name = null);
                        r.length = 0,
                        r.mode = G;
                    case G:
                        if (4096 & r.flags) {
                            if (0 === l)
                                break t;
                            m = 0;
                            do
                                Te = n[s + m++],
                                r.head && Te && r.length < 65536 && (r.head.comment += String.fromCharCode(Te));
                            while (Te && l > m);if (512 & r.flags && (r.check = b(r.check, n, m, s)),
                            l -= m,
                            s += m,
                            Te)
                                break t
                        } else
                            r.head && (r.head.comment = null);
                        r.mode = W;
                    case W:
                        if (512 & r.flags) {
                            for (; 16 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (f !== (65535 & r.check)) {
                                t.msg = "header crc mismatch",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.head && (r.head.hcrc = r.flags >> 9 & 1,
                        r.head.done = !0),
                        t.adler = r.check = 0,
                        r.mode = X;
                        break;
                    case H:
                        for (; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        t.adler = r.check = i(f),
                        f = 0,
                        d = 0,
                        r.mode = Y;
                    case Y:
                        if (0 === r.havedict)
                            return t.next_out = o,
                            t.avail_out = h,
                            t.next_in = s,
                            t.avail_in = l,
                            r.hold = f,
                            r.bits = d,
                            k;
                        t.adler = r.check = 1,
                        r.mode = X;
                    case X:
                        if (e === x || e === P)
                            break t;
                    case Z:
                        if (r.last) {
                            f >>>= 7 & d,
                            d -= 7 & d,
                            r.mode = he;
                            break
                        }
                        for (; 3 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        switch (r.last = 1 & f,
                        f >>>= 1,
                        d -= 1,
                        3 & f) {
                        case 0:
                            r.mode = q;
                            break;
                        case 1:
                            if (u(r),
                            r.mode = re,
                            e === P) {
                                f >>>= 2,
                                d -= 2;
                                break t
                            }
                            break;
                        case 2:
                            r.mode = Q;
                            break;
                        case 3:
                            t.msg = "invalid block type",
                            r.mode = fe
                        }
                        f >>>= 2,
                        d -= 2;
                        break;
                    case q:
                        for (f >>>= 7 & d,
                        d -= 7 & d; 32 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if ((65535 & f) !== (f >>> 16 ^ 65535)) {
                            t.msg = "invalid stored block lengths",
                            r.mode = fe;
                            break
                        }
                        if (r.length = 65535 & f,
                        f = 0,
                        d = 0,
                        r.mode = K,
                        e === P)
                            break t;
                    case K:
                        r.mode = J;
                    case J:
                        if (m = r.length) {
                            if (m > l && (m = l),
                            m > h && (m = h),
                            0 === m)
                                break t;
                            y.arraySet(a, n, s, m, o),
                            l -= m,
                            s += m,
                            h -= m,
                            o += m,
                            r.length -= m;
                            break
                        }
                        r.mode = X;
                        break;
                    case Q:
                        for (; 14 > d; ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (r.nlen = (31 & f) + 257,
                        f >>>= 5,
                        d -= 5,
                        r.ndist = (31 & f) + 1,
                        f >>>= 5,
                        d -= 5,
                        r.ncode = (15 & f) + 4,
                        f >>>= 4,
                        d -= 4,
                        r.nlen > 286 || r.ndist > 30) {
                            t.msg = "too many length or distance symbols",
                            r.mode = fe;
                            break
                        }
                        r.have = 0,
                        r.mode = te;
                    case te:
                        for (; r.have < r.ncode; ) {
                            for (; 3 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.lens[Pe[r.have++]] = 7 & f,
                            f >>>= 3,
                            d -= 3
                        }
                        for (; r.have < 19; )
                            r.lens[Pe[r.have++]] = 0;
                        if (r.lencode = r.lendyn,
                        r.lenbits = 7,
                        Se = {
                            bits: r.lenbits
                        },
                        De = T(D, r.lens, 0, 19, r.lencode, 0, r.work, Se),
                        r.lenbits = Se.bits,
                        De) {
                            t.msg = "invalid code lengths set",
                            r.mode = fe;
                            break
                        }
                        r.have = 0,
                        r.mode = ee;
                    case ee:
                        for (; r.have < r.nlen + r.ndist; ) {
                            for (; Ae = r.lencode[f & (1 << r.lenbits) - 1],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (16 > ye)
                                f >>>= me,
                                d -= me,
                                r.lens[r.have++] = ye;
                            else {
                                if (16 === ye) {
                                    for (Ee = me + 2; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    if (f >>>= me,
                                    d -= me,
                                    0 === r.have) {
                                        t.msg = "invalid bit length repeat",
                                        r.mode = fe;
                                        break
                                    }
                                    Te = r.lens[r.have - 1],
                                    m = 3 + (3 & f),
                                    f >>>= 2,
                                    d -= 2
                                } else if (17 === ye) {
                                    for (Ee = me + 3; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    f >>>= me,
                                    d -= me,
                                    Te = 0,
                                    m = 3 + (7 & f),
                                    f >>>= 3,
                                    d -= 3
                                } else {
                                    for (Ee = me + 7; Ee > d; ) {
                                        if (0 === l)
                                            break t;
                                        l--,
                                        f += n[s++] << d,
                                        d += 8
                                    }
                                    f >>>= me,
                                    d -= me,
                                    Te = 0,
                                    m = 11 + (127 & f),
                                    f >>>= 7,
                                    d -= 7
                                }
                                if (r.have + m > r.nlen + r.ndist) {
                                    t.msg = "invalid bit length repeat",
                                    r.mode = fe;
                                    break
                                }
                                for (; m--; )
                                    r.lens[r.have++] = Te
                            }
                        }
                        if (r.mode === fe)
                            break;
                        if (0 === r.lens[256]) {
                            t.msg = "invalid code -- missing end-of-block",
                            r.mode = fe;
                            break
                        }
                        if (r.lenbits = 9,
                        Se = {
                            bits: r.lenbits
                        },
                        De = T(S, r.lens, 0, r.nlen, r.lencode, 0, r.work, Se),
                        r.lenbits = Se.bits,
                        De) {
                            t.msg = "invalid literal/lengths set",
                            r.mode = fe;
                            break
                        }
                        if (r.distbits = 6,
                        r.distcode = r.distdyn,
                        Se = {
                            bits: r.distbits
                        },
                        De = T(E, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, Se),
                        r.distbits = Se.bits,
                        De) {
                            t.msg = "invalid distances set",
                            r.mode = fe;
                            break
                        }
                        if (r.mode = re,
                        e === P)
                            break t;
                    case re:
                        r.mode = ie;
                    case ie:
                        if (l >= 6 && h >= 258) {
                            t.next_out = o,
                            t.avail_out = h,
                            t.next_in = s,
                            t.avail_in = l,
                            r.hold = f,
                            r.bits = d,
                            w(t, _),
                            o = t.next_out,
                            a = t.output,
                            h = t.avail_out,
                            s = t.next_in,
                            n = t.input,
                            l = t.avail_in,
                            f = r.hold,
                            d = r.bits,
                            r.mode === X && (r.back = -1);
                            break
                        }
                        for (r.back = 0; Ae = r.lencode[f & (1 << r.lenbits) - 1],
                        me = Ae >>> 24,
                        ge = Ae >>> 16 & 255,
                        ye = 65535 & Ae,
                        !(d >= me); ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (ge && 0 === (240 & ge)) {
                            for (ve = me,
                            be = ge,
                            we = ye; Ae = r.lencode[we + ((f & (1 << ve + be) - 1) >> ve)],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= ve + me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            f >>>= ve,
                            d -= ve,
                            r.back += ve
                        }
                        if (f >>>= me,
                        d -= me,
                        r.back += me,
                        r.length = ye,
                        0 === ge) {
                            r.mode = le;
                            break
                        }
                        if (32 & ge) {
                            r.back = -1,
                            r.mode = X;
                            break
                        }
                        if (64 & ge) {
                            t.msg = "invalid literal/length code",
                            r.mode = fe;
                            break
                        }
                        r.extra = 15 & ge,
                        r.mode = ne;
                    case ne:
                        if (r.extra) {
                            for (Ee = r.extra; Ee > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.length += f & (1 << r.extra) - 1,
                            f >>>= r.extra,
                            d -= r.extra,
                            r.back += r.extra
                        }
                        r.was = r.length,
                        r.mode = ae;
                    case ae:
                        for (; Ae = r.distcode[f & (1 << r.distbits) - 1],
                        me = Ae >>> 24,
                        ge = Ae >>> 16 & 255,
                        ye = 65535 & Ae,
                        !(d >= me); ) {
                            if (0 === l)
                                break t;
                            l--,
                            f += n[s++] << d,
                            d += 8
                        }
                        if (0 === (240 & ge)) {
                            for (ve = me,
                            be = ge,
                            we = ye; Ae = r.distcode[we + ((f & (1 << ve + be) - 1) >> ve)],
                            me = Ae >>> 24,
                            ge = Ae >>> 16 & 255,
                            ye = 65535 & Ae,
                            !(d >= ve + me); ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            f >>>= ve,
                            d -= ve,
                            r.back += ve
                        }
                        if (f >>>= me,
                        d -= me,
                        r.back += me,
                        64 & ge) {
                            t.msg = "invalid distance code",
                            r.mode = fe;
                            break
                        }
                        r.offset = ye,
                        r.extra = 15 & ge,
                        r.mode = se;
                    case se:
                        if (r.extra) {
                            for (Ee = r.extra; Ee > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            r.offset += f & (1 << r.extra) - 1,
                            f >>>= r.extra,
                            d -= r.extra,
                            r.back += r.extra
                        }
                        if (r.offset > r.dmax) {
                            t.msg = "invalid distance too far back",
                            r.mode = fe;
                            break
                        }
                        r.mode = oe;
                    case oe:
                        if (0 === h)
                            break t;
                        if (m = _ - h,
                        r.offset > m) {
                            if (m = r.offset - m,
                            m > r.whave && r.sane) {
                                t.msg = "invalid distance too far back",
                                r.mode = fe;
                                break
                            }
                            m > r.wnext ? (m -= r.wnext,
                            g = r.wsize - m) : g = r.wnext - m,
                            m > r.length && (m = r.length),
                            _e = r.window
                        } else
                            _e = a,
                            g = o - r.offset,
                            m = r.length;
                        m > h && (m = h),
                        h -= m,
                        r.length -= m;
                        do
                            a[o++] = _e[g++];
                        while (--m);0 === r.length && (r.mode = ie);
                        break;
                    case le:
                        if (0 === h)
                            break t;
                        a[o++] = r.length,
                        h--,
                        r.mode = ie;
                        break;
                    case he:
                        if (r.wrap) {
                            for (; 32 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f |= n[s++] << d,
                                d += 8
                            }
                            if (_ -= h,
                            t.total_out += _,
                            r.total += _,
                            _ && (t.adler = r.check = r.flags ? b(r.check, a, _, o - _) : v(r.check, a, _, o - _)),
                            _ = h,
                            (r.flags ? f : i(f)) !== r.check) {
                                t.msg = "incorrect data check",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.mode = ue;
                    case ue:
                        if (r.wrap && r.flags) {
                            for (; 32 > d; ) {
                                if (0 === l)
                                    break t;
                                l--,
                                f += n[s++] << d,
                                d += 8
                            }
                            if (f !== (4294967295 & r.total)) {
                                t.msg = "incorrect length check",
                                r.mode = fe;
                                break
                            }
                            f = 0,
                            d = 0
                        }
                        r.mode = ce;
                    case ce:
                        De = O;
                        break t;
                    case fe:
                        De = R;
                        break t;
                    case de:
                        return B;
                    case pe:
                    default:
                        return I
                    }
                return t.next_out = o,
                t.avail_out = h,
                t.next_in = s,
                t.avail_in = l,
                r.hold = f,
                r.bits = d,
                (r.wsize || _ !== t.avail_out && r.mode < fe && (r.mode < he || e !== A)) && c(t, t.output, t.next_out, _ - t.avail_out) ? (r.mode = de,
                B) : (p -= t.avail_in,
                _ -= t.avail_out,
                t.total_in += p,
                t.total_out += _,
                r.total += _,
                r.wrap && _ && (t.adler = r.check = r.flags ? b(r.check, a, _, t.next_out - _) : v(r.check, a, _, t.next_out - _)),
                t.data_type = r.bits + (r.last ? 64 : 0) + (r.mode === X ? 128 : 0) + (r.mode === re || r.mode === K ? 256 : 0),
                (0 === p && 0 === _ || e === A) && De === C && (De = M),
                De)
            }
            function d(t) {
                if (!t || !t.state)
                    return I;
                var e = t.state;
                return e.window && (e.window = null),
                t.state = null,
                C
            }
            function p(t, e) {
                var r;
                return t && t.state ? (r = t.state,
                0 === (2 & r.wrap) ? I : (r.head = e,
                e.done = !1,
                C)) : I
            }
            function _(t, e) {
                var r, i, n, a = e.length;
                return t && t.state ? (r = t.state,
                0 !== r.wrap && r.mode !== Y ? I : r.mode === Y && (i = 1,
                i = v(i, e, a, 0),
                i !== r.check) ? R : (n = c(t, e, a, a)) ? (r.mode = de,
                B) : (r.havedict = 1,
                C)) : I
            }
            var m, g, y = t("../utils/common"), v = t("./adler32"), b = t("./crc32"), w = t("./inffast"), T = t("./inftrees"), D = 0, S = 1, E = 2, A = 4, x = 5, P = 6, C = 0, O = 1, k = 2, I = -2, R = -3, B = -4, M = -5, F = 8, L = 1, N = 2, j = 3, z = 4, U = 5, V = 6, $ = 7, G = 8, W = 9, H = 10, Y = 11, X = 12, Z = 13, q = 14, K = 15, J = 16, Q = 17, te = 18, ee = 19, re = 20, ie = 21, ne = 22, ae = 23, se = 24, oe = 25, le = 26, he = 27, ue = 28, ce = 29, fe = 30, de = 31, pe = 32, _e = 852, me = 592, ge = 15, ye = ge, ve = !0;
            r.inflateReset = s,
            r.inflateReset2 = o,
            r.inflateResetKeep = a,
            r.inflateInit = h,
            r.inflateInit2 = l,
            r.inflate = f,
            r.inflateEnd = d,
            r.inflateGetHeader = p,
            r.inflateSetDictionary = _,
            r.inflateInfo = "pako inflate (from Nodeca project)"
        }
        , {
            "../utils/common": 62,
            "./adler32": 64,
            "./crc32": 66,
            "./inffast": 69,
            "./inftrees": 71
        }],
        71: [function(t, e, r) {
            "use strict";
            var i = t("../utils/common")
              , n = 15
              , a = 852
              , s = 592
              , o = 0
              , l = 1
              , h = 2
              , u = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]
              , c = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]
              , f = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]
              , d = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            e.exports = function(t, e, r, p, _, m, g, y) {
                var v, b, w, T, D, S, E, A, x, P = y.bits, C = 0, O = 0, k = 0, I = 0, R = 0, B = 0, M = 0, F = 0, L = 0, N = 0, j = null, z = 0, U = new i.Buf16(n + 1), V = new i.Buf16(n + 1), $ = null, G = 0;
                for (C = 0; n >= C; C++)
                    U[C] = 0;
                for (O = 0; p > O; O++)
                    U[e[r + O]]++;
                for (R = P,
                I = n; I >= 1 && 0 === U[I]; I--)
                    ;
                if (R > I && (R = I),
                0 === I)
                    return _[m++] = 20971520,
                    _[m++] = 20971520,
                    y.bits = 1,
                    0;
                for (k = 1; I > k && 0 === U[k]; k++)
                    ;
                for (k > R && (R = k),
                F = 1,
                C = 1; n >= C; C++)
                    if (F <<= 1,
                    F -= U[C],
                    0 > F)
                        return -1;
                if (F > 0 && (t === o || 1 !== I))
                    return -1;
                for (V[1] = 0,
                C = 1; n > C; C++)
                    V[C + 1] = V[C] + U[C];
                for (O = 0; p > O; O++)
                    0 !== e[r + O] && (g[V[e[r + O]]++] = O);
                if (t === o ? (j = $ = g,
                S = 19) : t === l ? (j = u,
                z -= 257,
                $ = c,
                G -= 257,
                S = 256) : (j = f,
                $ = d,
                S = -1),
                N = 0,
                O = 0,
                C = k,
                D = m,
                B = R,
                M = 0,
                w = -1,
                L = 1 << R,
                T = L - 1,
                t === l && L > a || t === h && L > s)
                    return 1;
                for (; ; ) {
                    E = C - M,
                    g[O] < S ? (A = 0,
                    x = g[O]) : g[O] > S ? (A = $[G + g[O]],
                    x = j[z + g[O]]) : (A = 96,
                    x = 0),
                    v = 1 << C - M,
                    b = 1 << B,
                    k = b;
                    do
                        b -= v,
                        _[D + (N >> M) + b] = E << 24 | A << 16 | x | 0;
                    while (0 !== b);for (v = 1 << C - 1; N & v; )
                        v >>= 1;
                    if (0 !== v ? (N &= v - 1,
                    N += v) : N = 0,
                    O++,
                    0 === --U[C]) {
                        if (C === I)
                            break;
                        C = e[r + g[O]]
                    }
                    if (C > R && (N & T) !== w) {
                        for (0 === M && (M = R),
                        D += k,
                        B = C - M,
                        F = 1 << B; I > B + M && (F -= U[B + M],
                        !(0 >= F)); )
                            B++,
                            F <<= 1;
                        if (L += 1 << B,
                        t === l && L > a || t === h && L > s)
                            return 1;
                        w = N & T,
                        _[w] = R << 24 | B << 16 | D - m | 0
                    }
                }
                return 0 !== N && (_[D + N] = C - M << 24 | 64 << 16 | 0),
                y.bits = R,
                0
            }
        }
        , {
            "../utils/common": 62
        }],
        72: [function(t, e, r) {
            "use strict";
            e.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }
        , {}],
        73: [function(t, e, r) {
            "use strict";
            function i(t) {
                for (var e = t.length; --e >= 0; )
                    t[e] = 0
            }
            function n(t, e, r, i, n) {
                this.static_tree = t,
                this.extra_bits = e,
                this.extra_base = r,
                this.elems = i,
                this.max_length = n,
                this.has_stree = t && t.length
            }
            function a(t, e) {
                this.dyn_tree = t,
                this.max_code = 0,
                this.stat_desc = e
            }
            function s(t) {
                return 256 > t ? le[t] : le[256 + (t >>> 7)]
            }
            function o(t, e) {
                t.pending_buf[t.pending++] = 255 & e,
                t.pending_buf[t.pending++] = e >>> 8 & 255
            }
            function l(t, e, r) {
                t.bi_valid > Z - r ? (t.bi_buf |= e << t.bi_valid & 65535,
                o(t, t.bi_buf),
                t.bi_buf = e >> Z - t.bi_valid,
                t.bi_valid += r - Z) : (t.bi_buf |= e << t.bi_valid & 65535,
                t.bi_valid += r)
            }
            function h(t, e, r) {
                l(t, r[2 * e], r[2 * e + 1])
            }
            function u(t, e) {
                var r = 0;
                do
                    r |= 1 & t,
                    t >>>= 1,
                    r <<= 1;
                while (--e > 0);return r >>> 1
            }
            function c(t) {
                16 === t.bi_valid ? (o(t, t.bi_buf),
                t.bi_buf = 0,
                t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf,
                t.bi_buf >>= 8,
                t.bi_valid -= 8)
            }
            function f(t, e) {
                var r, i, n, a, s, o, l = e.dyn_tree, h = e.max_code, u = e.stat_desc.static_tree, c = e.stat_desc.has_stree, f = e.stat_desc.extra_bits, d = e.stat_desc.extra_base, p = e.stat_desc.max_length, _ = 0;
                for (a = 0; X >= a; a++)
                    t.bl_count[a] = 0;
                for (l[2 * t.heap[t.heap_max] + 1] = 0,
                r = t.heap_max + 1; Y > r; r++)
                    i = t.heap[r],
                    a = l[2 * l[2 * i + 1] + 1] + 1,
                    a > p && (a = p,
                    _++),
                    l[2 * i + 1] = a,
                    i > h || (t.bl_count[a]++,
                    s = 0,
                    i >= d && (s = f[i - d]),
                    o = l[2 * i],
                    t.opt_len += o * (a + s),
                    c && (t.static_len += o * (u[2 * i + 1] + s)));
                if (0 !== _) {
                    do {
                        for (a = p - 1; 0 === t.bl_count[a]; )
                            a--;
                        t.bl_count[a]--,
                        t.bl_count[a + 1] += 2,
                        t.bl_count[p]--,
                        _ -= 2
                    } while (_ > 0);for (a = p; 0 !== a; a--)
                        for (i = t.bl_count[a]; 0 !== i; )
                            n = t.heap[--r],
                            n > h || (l[2 * n + 1] !== a && (t.opt_len += (a - l[2 * n + 1]) * l[2 * n],
                            l[2 * n + 1] = a),
                            i--)
                }
            }
            function d(t, e, r) {
                var i, n, a = new Array(X + 1), s = 0;
                for (i = 1; X >= i; i++)
                    a[i] = s = s + r[i - 1] << 1;
                for (n = 0; e >= n; n++) {
                    var o = t[2 * n + 1];
                    0 !== o && (t[2 * n] = u(a[o]++, o))
                }
            }
            function p() {
                var t, e, r, i, a, s = new Array(X + 1);
                for (r = 0,
                i = 0; V - 1 > i; i++)
                    for (ue[i] = r,
                    t = 0; t < 1 << ee[i]; t++)
                        he[r++] = i;
                for (he[r - 1] = i,
                a = 0,
                i = 0; 16 > i; i++)
                    for (ce[i] = a,
                    t = 0; t < 1 << re[i]; t++)
                        le[a++] = i;
                for (a >>= 7; W > i; i++)
                    for (ce[i] = a << 7,
                    t = 0; t < 1 << re[i] - 7; t++)
                        le[256 + a++] = i;
                for (e = 0; X >= e; e++)
                    s[e] = 0;
                for (t = 0; 143 >= t; )
                    se[2 * t + 1] = 8,
                    t++,
                    s[8]++;
                for (; 255 >= t; )
                    se[2 * t + 1] = 9,
                    t++,
                    s[9]++;
                for (; 279 >= t; )
                    se[2 * t + 1] = 7,
                    t++,
                    s[7]++;
                for (; 287 >= t; )
                    se[2 * t + 1] = 8,
                    t++,
                    s[8]++;
                for (d(se, G + 1, s),
                t = 0; W > t; t++)
                    oe[2 * t + 1] = 5,
                    oe[2 * t] = u(t, 5);
                fe = new n(se,ee,$ + 1,G,X),
                de = new n(oe,re,0,W,X),
                pe = new n(new Array(0),ie,0,H,q)
            }
            function _(t) {
                var e;
                for (e = 0; G > e; e++)
                    t.dyn_ltree[2 * e] = 0;
                for (e = 0; W > e; e++)
                    t.dyn_dtree[2 * e] = 0;
                for (e = 0; H > e; e++)
                    t.bl_tree[2 * e] = 0;
                t.dyn_ltree[2 * K] = 1,
                t.opt_len = t.static_len = 0,
                t.last_lit = t.matches = 0
            }
            function m(t) {
                t.bi_valid > 8 ? o(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf),
                t.bi_buf = 0,
                t.bi_valid = 0
            }
            function g(t, e, r, i) {
                m(t),
                i && (o(t, r),
                o(t, ~r)),
                I.arraySet(t.pending_buf, t.window, e, r, t.pending),
                t.pending += r
            }
            function y(t, e, r, i) {
                var n = 2 * e
                  , a = 2 * r;
                return t[n] < t[a] || t[n] === t[a] && i[e] <= i[r]
            }
            function v(t, e, r) {
                for (var i = t.heap[r], n = r << 1; n <= t.heap_len && (n < t.heap_len && y(e, t.heap[n + 1], t.heap[n], t.depth) && n++,
                !y(e, i, t.heap[n], t.depth)); )
                    t.heap[r] = t.heap[n],
                    r = n,
                    n <<= 1;
                t.heap[r] = i
            }
            function b(t, e, r) {
                var i, n, a, o, u = 0;
                if (0 !== t.last_lit)
                    do
                        i = t.pending_buf[t.d_buf + 2 * u] << 8 | t.pending_buf[t.d_buf + 2 * u + 1],
                        n = t.pending_buf[t.l_buf + u],
                        u++,
                        0 === i ? h(t, n, e) : (a = he[n],
                        h(t, a + $ + 1, e),
                        o = ee[a],
                        0 !== o && (n -= ue[a],
                        l(t, n, o)),
                        i--,
                        a = s(i),
                        h(t, a, r),
                        o = re[a],
                        0 !== o && (i -= ce[a],
                        l(t, i, o)));
                    while (u < t.last_lit);h(t, K, e)
            }
            function w(t, e) {
                var r, i, n, a = e.dyn_tree, s = e.stat_desc.static_tree, o = e.stat_desc.has_stree, l = e.stat_desc.elems, h = -1;
                for (t.heap_len = 0,
                t.heap_max = Y,
                r = 0; l > r; r++)
                    0 !== a[2 * r] ? (t.heap[++t.heap_len] = h = r,
                    t.depth[r] = 0) : a[2 * r + 1] = 0;
                for (; t.heap_len < 2; )
                    n = t.heap[++t.heap_len] = 2 > h ? ++h : 0,
                    a[2 * n] = 1,
                    t.depth[n] = 0,
                    t.opt_len--,
                    o && (t.static_len -= s[2 * n + 1]);
                for (e.max_code = h,
                r = t.heap_len >> 1; r >= 1; r--)
                    v(t, a, r);
                n = l;
                do
                    r = t.heap[1],
                    t.heap[1] = t.heap[t.heap_len--],
                    v(t, a, 1),
                    i = t.heap[1],
                    t.heap[--t.heap_max] = r,
                    t.heap[--t.heap_max] = i,
                    a[2 * n] = a[2 * r] + a[2 * i],
                    t.depth[n] = (t.depth[r] >= t.depth[i] ? t.depth[r] : t.depth[i]) + 1,
                    a[2 * r + 1] = a[2 * i + 1] = n,
                    t.heap[1] = n++,
                    v(t, a, 1);
                while (t.heap_len >= 2);t.heap[--t.heap_max] = t.heap[1],
                f(t, e),
                d(a, h, t.bl_count)
            }
            function T(t, e, r) {
                var i, n, a = -1, s = e[1], o = 0, l = 7, h = 4;
                for (0 === s && (l = 138,
                h = 3),
                e[2 * (r + 1) + 1] = 65535,
                i = 0; r >= i; i++)
                    n = s,
                    s = e[2 * (i + 1) + 1],
                    ++o < l && n === s || (h > o ? t.bl_tree[2 * n] += o : 0 !== n ? (n !== a && t.bl_tree[2 * n]++,
                    t.bl_tree[2 * J]++) : 10 >= o ? t.bl_tree[2 * Q]++ : t.bl_tree[2 * te]++,
                    o = 0,
                    a = n,
                    0 === s ? (l = 138,
                    h = 3) : n === s ? (l = 6,
                    h = 3) : (l = 7,
                    h = 4))
            }
            function D(t, e, r) {
                var i, n, a = -1, s = e[1], o = 0, u = 7, c = 4;
                for (0 === s && (u = 138,
                c = 3),
                i = 0; r >= i; i++)
                    if (n = s,
                    s = e[2 * (i + 1) + 1],
                    !(++o < u && n === s)) {
                        if (c > o) {
                            do
                                h(t, n, t.bl_tree);
                            while (0 !== --o)
                        } else
                            0 !== n ? (n !== a && (h(t, n, t.bl_tree),
                            o--),
                            h(t, J, t.bl_tree),
                            l(t, o - 3, 2)) : 10 >= o ? (h(t, Q, t.bl_tree),
                            l(t, o - 3, 3)) : (h(t, te, t.bl_tree),
                            l(t, o - 11, 7));
                        o = 0,
                        a = n,
                        0 === s ? (u = 138,
                        c = 3) : n === s ? (u = 6,
                        c = 3) : (u = 7,
                        c = 4)
                    }
            }
            function S(t) {
                var e;
                for (T(t, t.dyn_ltree, t.l_desc.max_code),
                T(t, t.dyn_dtree, t.d_desc.max_code),
                w(t, t.bl_desc),
                e = H - 1; e >= 3 && 0 === t.bl_tree[2 * ne[e] + 1]; e--)
                    ;
                return t.opt_len += 3 * (e + 1) + 5 + 5 + 4,
                e
            }
            function E(t, e, r, i) {
                var n;
                for (l(t, e - 257, 5),
                l(t, r - 1, 5),
                l(t, i - 4, 4),
                n = 0; i > n; n++)
                    l(t, t.bl_tree[2 * ne[n] + 1], 3);
                D(t, t.dyn_ltree, e - 1),
                D(t, t.dyn_dtree, r - 1)
            }
            function A(t) {
                var e, r = 4093624447;
                for (e = 0; 31 >= e; e++,
                r >>>= 1)
                    if (1 & r && 0 !== t.dyn_ltree[2 * e])
                        return B;
                if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26])
                    return M;
                for (e = 32; $ > e; e++)
                    if (0 !== t.dyn_ltree[2 * e])
                        return M;
                return B
            }
            function x(t) {
                _e || (p(),
                _e = !0),
                t.l_desc = new a(t.dyn_ltree,fe),
                t.d_desc = new a(t.dyn_dtree,de),
                t.bl_desc = new a(t.bl_tree,pe),
                t.bi_buf = 0,
                t.bi_valid = 0,
                _(t)
            }
            function P(t, e, r, i) {
                l(t, (L << 1) + (i ? 1 : 0), 3),
                g(t, e, r, !0)
            }
            function C(t) {
                l(t, N << 1, 3),
                h(t, K, se),
                c(t)
            }
            function O(t, e, r, i) {
                var n, a, s = 0;
                t.level > 0 ? (t.strm.data_type === F && (t.strm.data_type = A(t)),
                w(t, t.l_desc),
                w(t, t.d_desc),
                s = S(t),
                n = t.opt_len + 3 + 7 >>> 3,
                a = t.static_len + 3 + 7 >>> 3,
                n >= a && (n = a)) : n = a = r + 5,
                n >= r + 4 && -1 !== e ? P(t, e, r, i) : t.strategy === R || a === n ? (l(t, (N << 1) + (i ? 1 : 0), 3),
                b(t, se, oe)) : (l(t, (j << 1) + (i ? 1 : 0), 3),
                E(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, s + 1),
                b(t, t.dyn_ltree, t.dyn_dtree)),
                _(t),
                i && m(t)
            }
            function k(t, e, r) {
                return t.pending_buf[t.d_buf + 2 * t.last_lit] = e >>> 8 & 255,
                t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e,
                t.pending_buf[t.l_buf + t.last_lit] = 255 & r,
                t.last_lit++,
                0 === e ? t.dyn_ltree[2 * r]++ : (t.matches++,
                e--,
                t.dyn_ltree[2 * (he[r] + $ + 1)]++,
                t.dyn_dtree[2 * s(e)]++),
                t.last_lit === t.lit_bufsize - 1
            }
            var I = t("../utils/common")
              , R = 4
              , B = 0
              , M = 1
              , F = 2
              , L = 0
              , N = 1
              , j = 2
              , z = 3
              , U = 258
              , V = 29
              , $ = 256
              , G = $ + 1 + V
              , W = 30
              , H = 19
              , Y = 2 * G + 1
              , X = 15
              , Z = 16
              , q = 7
              , K = 256
              , J = 16
              , Q = 17
              , te = 18
              , ee = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              , re = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              , ie = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              , ne = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
              , ae = 512
              , se = new Array(2 * (G + 2));
            i(se);
            var oe = new Array(2 * W);
            i(oe);
            var le = new Array(ae);
            i(le);
            var he = new Array(U - z + 1);
            i(he);
            var ue = new Array(V);
            i(ue);
            var ce = new Array(W);
            i(ce);
            var fe, de, pe, _e = !1;
            r._tr_init = x,
            r._tr_stored_block = P,
            r._tr_flush_block = O,
            r._tr_tally = k,
            r._tr_align = C
        }
        , {
            "../utils/common": 62
        }],
        74: [function(t, e, r) {
            "use strict";
            function i() {
                this.input = null,
                this.next_in = 0,
                this.avail_in = 0,
                this.total_in = 0,
                this.output = null,
                this.next_out = 0,
                this.avail_out = 0,
                this.total_out = 0,
                this.msg = "",
                this.state = null,
                this.data_type = 2,
                this.adler = 0
            }
            e.exports = i
        }
        , {}]
    }, {}, [10])(10)
});
var saveAs = saveAs || function(t) {
    "use strict";
    if (!("undefined" == typeof t || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var e = t.document
          , r = function() {
            return t.URL || t.webkitURL || t
        }
          , i = e.createElementNS("http://www.w3.org/1999/xhtml", "a")
          , n = "download"in i
          , a = function(t) {
            var e = new MouseEvent("click");
            t.dispatchEvent(e)
        }
          , s = /constructor/i.test(t.HTMLElement) || t.safari
          , o = /CriOS\/[\d]+/.test(navigator.userAgent)
          , l = t.setImmediate || t.setTimeout
          , h = function(t) {
            l(function() {
                throw t
            }, 0)
        }
          , u = "application/octet-stream"
          , c = 4e4
          , f = function(t) {
            var e = function() {
                "string" == typeof t ? r().revokeObjectURL(t) : t.remove()
            };
            setTimeout(e, c)
        }
          , d = function(t, e, r) {
            e = [].concat(e);
            for (var i = e.length; i--; ) {
                var n = t["on" + e[i]];
                if ("function" == typeof n)
                    try {
                        n.call(t, r || t)
                    } catch (a) {
                        h(a)
                    }
            }
        }
          , p = function(t) {
            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type) ? new Blob([String.fromCharCode(65279), t],{
                type: t.type
            }) : t
        }
          , _ = function(e, h, c) {
            c || (e = p(e));
            var _, m = this, g = e.type, y = g === u, v = function() {
                d(m, "writestart progress write writeend".split(" "))
            }, b = function() {
                if ((o || y && s) && t.FileReader) {
                    var i = new FileReader;
                    return i.onloadend = function() {
                        var e = o ? i.result : i.result.replace(/^data:[^;]*;/, "data:attachment/file;")
                          , r = t.open(e, "_blank");
                        r || (t.location.href = e),
                        e = void 0,
                        m.readyState = m.DONE,
                        v()
                    }
                    ,
                    i.readAsDataURL(e),
                    void (m.readyState = m.INIT)
                }
                if (_ || (_ = r().createObjectURL(e)),
                y)
                    t.location.href = _;
                else {
                    var n = t.open(_, "_blank");
                    n || (t.location.href = _)
                }
                m.readyState = m.DONE,
                v(),
                f(_)
            };
            return m.readyState = m.INIT,
            n ? (_ = r().createObjectURL(e),
            void l(function() {
                i.href = _,
                i.download = h,
                a(i),
                v(),
                f(_),
                m.readyState = m.DONE
            }, 0)) : void b()
        }
          , m = _.prototype
          , g = function(t, e, r) {
            return new _(t,e || t.name || "download",r)
        };
        return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(t, e, r) {
            return e = e || t.name || "download",
            r || (t = p(t)),
            navigator.msSaveOrOpenBlob(t, e)
        }
        : (m.abort = function() {}
        ,
        m.readyState = m.INIT = 0,
        m.WRITING = 1,
        m.DONE = 2,
        m.error = m.onwritestart = m.onprogress = m.onwrite = m.onabort = m.onerror = m.onwriteend = null,
        g)
    }
}("undefined" != typeof self && self || "undefined" != typeof window && window || this);
!function() {
    "use strict";
    var t = function() {
        this.init()
    };
    t.prototype = {
        init: function() {
            var t = this || e;
            return t._counter = 1e3,
            t._codecs = {},
            t._howls = [],
            t._muted = !1,
            t._volume = 1,
            t._canPlayEvent = "canplaythrough",
            t._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null,
            t.masterGain = null,
            t.noAudio = !1,
            t.usingWebAudio = !0,
            t.autoSuspend = !0,
            t.ctx = null,
            t.mobileAutoEnable = !0,
            t._setup(),
            t
        },
        volume: function(t) {
            var r = this || e;
            if (t = parseFloat(t),
            r.ctx || h(),
            void 0 !== t && t >= 0 && 1 >= t) {
                if (r._volume = t,
                r._muted)
                    return r;
                r.usingWebAudio && r.masterGain.gain.setValueAtTime(t, e.ctx.currentTime);
                for (var i = 0; i < r._howls.length; i++)
                    if (!r._howls[i]._webAudio)
                        for (var n = r._howls[i]._getSoundIds(), a = 0; a < n.length; a++) {
                            var s = r._howls[i]._soundById(n[a]);
                            s && s._node && (s._node.volume = s._volume * t)
                        }
                return r
            }
            return r._volume
        },
        mute: function(t) {
            var r = this || e;
            r.ctx || h(),
            r._muted = t,
            r.usingWebAudio && r.masterGain.gain.setValueAtTime(t ? 0 : r._volume, e.ctx.currentTime);
            for (var i = 0; i < r._howls.length; i++)
                if (!r._howls[i]._webAudio)
                    for (var n = r._howls[i]._getSoundIds(), a = 0; a < n.length; a++) {
                        var s = r._howls[i]._soundById(n[a]);
                        s && s._node && (s._node.muted = !!t || s._muted)
                    }
            return r
        },
        unload: function() {
            for (var t = this || e, r = t._howls.length - 1; r >= 0; r--)
                t._howls[r].unload();
            return t.usingWebAudio && t.ctx && void 0 !== t.ctx.close && (t.ctx.close(),
            t.ctx = null,
            h()),
            t
        },
        codecs: function(t) {
            return (this || e)._codecs[t.replace(/^x-/, "")]
        },
        _setup: function() {
            var t = this || r;
            if (t.state = t.ctx ? t.ctx.state || "running" : "running",
            t._autoSuspend(),
            !t.usingWebAudio)
                if ("undefined" != typeof Audio)
                    try {
                        var e = new Audio;
                        void 0 === e.oncanplaythrough && (t._canPlayEvent = "canplay")
                    } catch (r) {
                        t.noAudio = !0
                    }
                else
                    t.noAudio = !0;
            try {
                var e = new Audio;
                e.muted && (t.noAudio = !0)
            } catch (t) {}
            return t.noAudio || t._setupCodecs(),
            t
        },
        _setupCodecs: function() {
            var t = this || r
              , e = null;
            try {
                e = "undefined" != typeof Audio ? new Audio : null
            } catch (r) {
                return t
            }
            if (!e || "function" != typeof e.canPlayType)
                return t;
            var i = e.canPlayType("audio/mpeg;").replace(/^no$/, "")
              , n = t._navigator && t._navigator.userAgent.match(/OPR\/([0-6].)/g)
              , a = n && parseInt(n[0].split("/")[1], 10) < 33;
            return t._codecs = {
                mp3: !(a || !i && !e.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!i,
                opus: !!e.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!e.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!e.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!e.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!e.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!e.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                m4a: !!(e.canPlayType("audio/x-m4a;") || e.canPlayType("audio/m4a;") || e.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(e.canPlayType("audio/x-mp4;") || e.canPlayType("audio/mp4;") || e.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!e.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!e.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                dolby: !!e.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(e.canPlayType("audio/x-flac;") || e.canPlayType("audio/flac;")).replace(/^no$/, "")
            },
            t
        },
        _enableMobileAudio: function() {
            var t = this || e
              , r = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(t._navigator && t._navigator.userAgent)
              , i = !!("ontouchend"in window || t._navigator && t._navigator.maxTouchPoints > 0 || t._navigator && t._navigator.msMaxTouchPoints > 0);
            if (!t._mobileEnabled && t.ctx && (r || i)) {
                t._mobileEnabled = !1,
                t._mobileUnloaded || 44100 === t.ctx.sampleRate || (t._mobileUnloaded = !0,
                t.unload()),
                t._scratchBuffer = t.ctx.createBuffer(1, 1, 22050);
                var n = function() {
                    e._autoResume();
                    var r = t.ctx.createBufferSource();
                    r.buffer = t._scratchBuffer,
                    r.connect(t.ctx.destination),
                    void 0 === r.start ? r.noteOn(0) : r.start(0),
                    "function" == typeof t.ctx.resume && t.ctx.resume(),
                    r.onended = function() {
                        r.disconnect(0),
                        t._mobileEnabled = !0,
                        t.mobileAutoEnable = !1,
                        document.removeEventListener("touchstart", n, !0),
                        document.removeEventListener("touchend", n, !0)
                    }
                };
                return document.addEventListener("touchstart", n, !0),
                document.addEventListener("touchend", n, !0),
                t
            }
        },
        _autoSuspend: function() {
            var t = this;
            if (t.autoSuspend && t.ctx && void 0 !== t.ctx.suspend && e.usingWebAudio) {
                for (var r = 0; r < t._howls.length; r++)
                    if (t._howls[r]._webAudio)
                        for (var i = 0; i < t._howls[r]._sounds.length; i++)
                            if (!t._howls[r]._sounds[i]._paused)
                                return t;
                return t._suspendTimer && clearTimeout(t._suspendTimer),
                t._suspendTimer = setTimeout(function() {
                    t.autoSuspend && (t._suspendTimer = null,
                    t.state = "suspending",
                    t.ctx.suspend().then(function() {
                        t.state = "suspended",
                        t._resumeAfterSuspend && (delete t._resumeAfterSuspend,
                        t._autoResume())
                    }))
                }, 3e4),
                t
            }
        },
        _autoResume: function() {
            var t = this;
            return t.ctx && void 0 !== t.ctx.resume && e.usingWebAudio ? ("running" === t.state && t._suspendTimer ? (clearTimeout(t._suspendTimer),
            t._suspendTimer = null) : "suspended" === t.state ? (t.ctx.resume().then(function() {
                t.state = "running";
                for (var e = 0; e < t._howls.length; e++)
                    t._howls[e]._emit("resume")
            }),
            t._suspendTimer && (clearTimeout(t._suspendTimer),
            t._suspendTimer = null)) : "suspending" === t.state && (t._resumeAfterSuspend = !0),
            t) : void 0
        }
    };
    var e = new t
      , r = function(t) {
        var e = this;
        return t.src && 0 !== t.src.length ? void e.init(t) : void console.error("An array of source files must be passed with any new Howl.")
    };
    r.prototype = {
        init: function(t) {
            var r = this;
            return e.ctx || h(),
            r._autoplay = t.autoplay || !1,
            r._format = "string" != typeof t.format ? t.format : [t.format],
            r._html5 = t.html5 || !1,
            r._muted = t.mute || !1,
            r._loop = t.loop || !1,
            r._pool = t.pool || 5,
            r._preload = "boolean" != typeof t.preload || t.preload,
            r._rate = t.rate || 1,
            r._sprite = t.sprite || {},
            r._src = "string" != typeof t.src ? t.src : [t.src],
            r._volume = void 0 !== t.volume ? t.volume : 1,
            r._xhrWithCredentials = t.xhrWithCredentials || !1,
            r._duration = 0,
            r._state = "unloaded",
            r._sounds = [],
            r._endTimers = {},
            r._queue = [],
            r._playLock = !1,
            r._onend = t.onend ? [{
                fn: t.onend
            }] : [],
            r._onfade = t.onfade ? [{
                fn: t.onfade
            }] : [],
            r._onload = t.onload ? [{
                fn: t.onload
            }] : [],
            r._onloaderror = t.onloaderror ? [{
                fn: t.onloaderror
            }] : [],
            r._onplayerror = t.onplayerror ? [{
                fn: t.onplayerror
            }] : [],
            r._onpause = t.onpause ? [{
                fn: t.onpause
            }] : [],
            r._onplay = t.onplay ? [{
                fn: t.onplay
            }] : [],
            r._onstop = t.onstop ? [{
                fn: t.onstop
            }] : [],
            r._onmute = t.onmute ? [{
                fn: t.onmute
            }] : [],
            r._onvolume = t.onvolume ? [{
                fn: t.onvolume
            }] : [],
            r._onrate = t.onrate ? [{
                fn: t.onrate
            }] : [],
            r._onseek = t.onseek ? [{
                fn: t.onseek
            }] : [],
            r._onresume = [],
            r._webAudio = e.usingWebAudio && !r._html5,
            void 0 !== e.ctx && e.ctx && e.mobileAutoEnable && e._enableMobileAudio(),
            e._howls.push(r),
            r._autoplay && r._queue.push({
                event: "play",
                action: function() {
                    r.play()
                }
            }),
            r._preload && r.load(),
            r
        },
        load: function() {
            var t = this
              , r = null;
            if (e.noAudio)
                return void t._emit("loaderror", null, "No audio support.");
            "string" == typeof t._src && (t._src = [t._src]);
            for (var n = 0; n < t._src.length; n++) {
                var s, o;
                if (t._format && t._format[n])
                    s = t._format[n];
                else {
                    if ("string" != typeof (o = t._src[n])) {
                        t._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                        continue
                    }
                    s = /^data:audio\/([^;,]+);/i.exec(o),
                    s || (s = /\.([^.]+)$/.exec(o.split("?", 1)[0])),
                    s && (s = s[1].toLowerCase())
                }
                if (s || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                s && e.codecs(s)) {
                    r = t._src[n];
                    break
                }
            }
            return r ? (t._src = r,
            t._state = "loading",
            "https:" === window.location.protocol && "http:" === r.slice(0, 5) && (t._html5 = !0,
            t._webAudio = !1),
            new i(t),
            t._webAudio && a(t),
            t) : void t._emit("loaderror", null, "No codec support for selected audio sources.")
        },
        play: function(t, r) {
            var i = this
              , n = null;
            if ("number" == typeof t)
                n = t,
                t = null;
            else {
                if ("string" == typeof t && "loaded" === i._state && !i._sprite[t])
                    return null;
                if (void 0 === t) {
                    t = "__default";
                    for (var a = 0, s = 0; s < i._sounds.length; s++)
                        i._sounds[s]._paused && !i._sounds[s]._ended && (a++,
                        n = i._sounds[s]._id);
                    1 === a ? t = null : n = null
                }
            }
            var o = n ? i._soundById(n) : i._inactiveSound();
            if (!o)
                return null;
            if (n && !t && (t = o._sprite || "__default"),
            "loaded" !== i._state) {
                o._sprite = t,
                o._ended = !1;
                var l = o._id;
                return i._queue.push({
                    event: "play",
                    action: function() {
                        i.play(l)
                    }
                }),
                l
            }
            if (n && !o._paused)
                return r || i._loadQueue("play"),
                o._id;
            i._webAudio && e._autoResume();
            var h = Math.max(0, o._seek > 0 ? o._seek : i._sprite[t][0] / 1e3)
              , u = Math.max(0, (i._sprite[t][0] + i._sprite[t][1]) / 1e3 - h)
              , c = 1e3 * u / Math.abs(o._rate);
            o._paused = !1,
            o._ended = !1,
            o._sprite = t,
            o._seek = h,
            o._start = i._sprite[t][0] / 1e3,
            o._stop = (i._sprite[t][0] + i._sprite[t][1]) / 1e3,
            o._loop = !(!o._loop && !i._sprite[t][2]);
            var f = o._node;
            if (i._webAudio) {
                var d = function() {
                    i._refreshBuffer(o);
                    var t = o._muted || i._muted ? 0 : o._volume;
                    f.gain.setValueAtTime(t, e.ctx.currentTime),
                    o._playStart = e.ctx.currentTime,
                    void 0 === f.bufferSource.start ? o._loop ? f.bufferSource.noteGrainOn(0, h, 86400) : f.bufferSource.noteGrainOn(0, h, u) : o._loop ? f.bufferSource.start(0, h, 86400) : f.bufferSource.start(0, h, u),
                    c !== 1 / 0 && (i._endTimers[o._id] = setTimeout(i._ended.bind(i, o), c)),
                    r || setTimeout(function() {
                        i._emit("play", o._id)
                    }, 0)
                };
                "running" === e.state ? d() : (i.once("resume", d),
                i._clearTimer(o._id))
            } else {
                var p = function() {
                    f.currentTime = h,
                    f.muted = o._muted || i._muted || e._muted || f.muted,
                    f.volume = o._volume * e.volume(),
                    f.playbackRate = o._rate;
                    try {
                        var t = f.play();
                        if ("undefined" != typeof Promise && t instanceof Promise) {
                            i._playLock = !0;
                            var n = function() {
                                i._playLock = !1,
                                r || i._emit("play", o._id)
                            };
                            t.then(n, n)
                        } else
                            r || i._emit("play", o._id);
                        if (f.playbackRate = o._rate,
                        f.paused)
                            return void i._emit("playerror", o._id, "Playback was unable to start. This is most commonly an issue on mobile devices where playback was not within a user interaction.");
                        "__default" !== a || o._loop ? i._endTimers[o._id] = setTimeout(i._ended.bind(i, o), c) : (i._endTimers[o._id] = function() {
                            i._ended(o),
                            f.removeEventListener("ended", i._endTimers[o._id], !1)
                        }
                        ,
                        f.addEventListener("ended", i._endTimers[o._id], !1))
                    } catch (a) {
                        i._emit("playerror", o._id, a)
                    }
                }
                  , _ = window && window.ejecta || !f.readyState && e._navigator.isCocoonJS;
                if (f.readyState >= 3 || _)
                    p();
                else {
                    var m = function() {
                        p(),
                        f.removeEventListener(e._canPlayEvent, m, !1)
                    };
                    f.addEventListener(e._canPlayEvent, m, !1),
                    i._clearTimer(o._id)
                }
            }
            return o._id
        },
        pause: function(t) {
            var e = this;
            if ("loaded" !== e._state || e._playLock)
                return e._queue.push({
                    event: "pause",
                    action: function() {
                        e.pause(t)
                    }
                }),
                e;
            for (var r = e._getSoundIds(t), i = 0; i < r.length; i++) {
                e._clearTimer(r[i]);
                var n = e._soundById(r[i]);
                if (n && !n._paused && (n._seek = e.seek(r[i]),
                n._rateSeek = 0,
                n._paused = !0,
                e._stopFade(r[i]),
                n._node))
                    if (e._webAudio) {
                        if (!n._node.bufferSource)
                            continue;
                        void 0 === n._node.bufferSource.stop ? n._node.bufferSource.noteOff(0) : n._node.bufferSource.stop(0),
                        e._cleanBuffer(n._node)
                    } else
                        isNaN(n._node.duration) && n._node.duration !== 1 / 0 || n._node.pause();
                arguments[1] || e._emit("pause", n ? n._id : null)
            }
            return e
        },
        stop: function(t, e) {
            var r = this;
            if ("loaded" !== r._state)
                return r._queue.push({
                    event: "stop",
                    action: function() {
                        r.stop(t)
                    }
                }),
                r;
            for (var i = r._getSoundIds(t), n = 0; n < i.length; n++) {
                r._clearTimer(i[n]);
                var a = r._soundById(i[n]);
                a && (a._seek = a._start || 0,
                a._rateSeek = 0,
                a._paused = !0,
                a._ended = !0,
                r._stopFade(i[n]),
                a._node && (r._webAudio ? a._node.bufferSource && (void 0 === a._node.bufferSource.stop ? a._node.bufferSource.noteOff(0) : a._node.bufferSource.stop(0),
                r._cleanBuffer(a._node)) : isNaN(a._node.duration) && a._node.duration !== 1 / 0 || (a._node.currentTime = a._start || 0,
                a._node.pause())),
                e || r._emit("stop", a._id))
            }
            return r
        },
        mute: function(t, r) {
            var i = this;
            if ("loaded" !== i._state)
                return i._queue.push({
                    event: "mute",
                    action: function() {
                        i.mute(t, r)
                    }
                }),
                i;
            if (void 0 === r) {
                if ("boolean" != typeof t)
                    return i._muted;
                i._muted = t
            }
            for (var n = i._getSoundIds(r), a = 0; a < n.length; a++) {
                var s = i._soundById(n[a]);
                s && (s._muted = t,
                s._interval && i._stopFade(s._id),
                i._webAudio && s._node ? s._node.gain.setValueAtTime(t ? 0 : s._volume, e.ctx.currentTime) : s._node && (s._node.muted = !!e._muted || t),
                i._emit("mute", s._id))
            }
            return i
        },
        volume: function() {
            var t, r, i = this, n = arguments;
            if (0 === n.length)
                return i._volume;
            1 === n.length || 2 === n.length && void 0 === n[1] ? i._getSoundIds().indexOf(n[0]) >= 0 ? r = parseInt(n[0], 10) : t = parseFloat(n[0]) : n.length >= 2 && (t = parseFloat(n[0]),
            r = parseInt(n[1], 10));
            var a;
            if (!(void 0 !== t && t >= 0 && 1 >= t))
                return a = r ? i._soundById(r) : i._sounds[0],
                a ? a._volume : 0;
            if ("loaded" !== i._state)
                return i._queue.push({
                    event: "volume",
                    action: function() {
                        i.volume.apply(i, n)
                    }
                }),
                i;
            void 0 === r && (i._volume = t),
            r = i._getSoundIds(r);
            for (var s = 0; s < r.length; s++)
                (a = i._soundById(r[s])) && (a._volume = t,
                n[2] || i._stopFade(r[s]),
                i._webAudio && a._node && !a._muted ? a._node.gain.setValueAtTime(t, e.ctx.currentTime) : a._node && !a._muted && (a._node.volume = t * e.volume()),
                i._emit("volume", a._id));
            return i
        },
        fade: function(t, r, i, n) {
            var a = this;
            if ("loaded" !== a._state)
                return a._queue.push({
                    event: "fade",
                    action: function() {
                        a.fade(t, r, i, n)
                    }
                }),
                a;
            a.volume(t, n);
            for (var s = a._getSoundIds(n), o = 0; o < s.length; o++) {
                var l = a._soundById(s[o]);
                if (l) {
                    if (n || a._stopFade(s[o]),
                    a._webAudio && !l._muted) {
                        var h = e.ctx.currentTime
                          , u = h + i / 1e3;
                        l._volume = t,
                        l._node.gain.setValueAtTime(t, h),
                        l._node.gain.linearRampToValueAtTime(r, u)
                    }
                    a._startFadeInterval(l, t, r, i, s[o], void 0 === n)
                }
            }
            return a
        },
        _startFadeInterval: function(t, e, r, i, n, a) {
            var s = this
              , o = e
              , l = r - e
              , h = Math.abs(l / .01)
              , u = Math.max(4, h > 0 ? i / h : i)
              , c = Date.now();
            t._fadeTo = r,
            t._interval = setInterval(function() {
                var n = (Date.now() - c) / i;
                c = Date.now(),
                o += l * n,
                o = Math.max(0, o),
                o = Math.min(1, o),
                o = Math.round(100 * o) / 100,
                s._webAudio ? t._volume = o : s.volume(o, t._id, !0),
                a && (s._volume = o),
                (e > r && r >= o || r > e && o >= r) && (clearInterval(t._interval),
                t._interval = null,
                t._fadeTo = null,
                s.volume(r, t._id),
                s._emit("fade", t._id))
            }, u)
        },
        _stopFade: function(t) {
            var r = this
              , i = r._soundById(t);
            return i && i._interval && (r._webAudio && i._node.gain.cancelScheduledValues(e.ctx.currentTime),
            clearInterval(i._interval),
            i._interval = null,
            r.volume(i._fadeTo, t),
            i._fadeTo = null,
            r._emit("fade", t)),
            r
        },
        loop: function() {
            var t, e, r, i = this, n = arguments;
            if (0 === n.length)
                return i._loop;
            if (1 === n.length) {
                if ("boolean" != typeof n[0])
                    return !!(r = i._soundById(parseInt(n[0], 10))) && r._loop;
                t = n[0],
                i._loop = t
            } else
                2 === n.length && (t = n[0],
                e = parseInt(n[1], 10));
            for (var a = i._getSoundIds(e), s = 0; s < a.length; s++)
                (r = i._soundById(a[s])) && (r._loop = t,
                i._webAudio && r._node && r._node.bufferSource && (r._node.bufferSource.loop = t,
                t && (r._node.bufferSource.loopStart = r._start || 0,
                r._node.bufferSource.loopEnd = r._stop)));
            return i
        },
        rate: function() {
            var t, r, i = this, n = arguments;
            if (0 === n.length)
                r = i._sounds[0]._id;
            else if (1 === n.length) {
                var a = i._getSoundIds()
                  , s = a.indexOf(n[0]);
                s >= 0 ? r = parseInt(n[0], 10) : t = parseFloat(n[0])
            } else
                2 === n.length && (t = parseFloat(n[0]),
                r = parseInt(n[1], 10));
            var o;
            if ("number" != typeof t)
                return o = i._soundById(r),
                o ? o._rate : i._rate;
            if ("loaded" !== i._state)
                return i._queue.push({
                    event: "rate",
                    action: function() {
                        i.rate.apply(i, n)
                    }
                }),
                i;
            void 0 === r && (i._rate = t),
            r = i._getSoundIds(r);
            for (var l = 0; l < r.length; l++)
                if (o = i._soundById(r[l])) {
                    o._rateSeek = i.seek(r[l]),
                    o._playStart = i._webAudio ? e.ctx.currentTime : o._playStart,
                    o._rate = t,
                    i._webAudio && o._node && o._node.bufferSource ? o._node.bufferSource.playbackRate.setValueAtTime(t, e.ctx.currentTime) : o._node && (o._node.playbackRate = t);
                    var h = i.seek(r[l])
                      , u = (i._sprite[o._sprite][0] + i._sprite[o._sprite][1]) / 1e3 - h
                      , c = 1e3 * u / Math.abs(o._rate);
                    !i._endTimers[r[l]] && o._paused || (i._clearTimer(r[l]),
                    i._endTimers[r[l]] = setTimeout(i._ended.bind(i, o), c)),
                    i._emit("rate", o._id)
                }
            return i
        },
        seek: function() {
            var t, r, i = this, n = arguments;
            if (0 === n.length)
                r = i._sounds[0]._id;
            else if (1 === n.length) {
                var a = i._getSoundIds()
                  , s = a.indexOf(n[0]);
                s >= 0 ? r = parseInt(n[0], 10) : i._sounds.length && (r = i._sounds[0]._id,
                t = parseFloat(n[0]))
            } else
                2 === n.length && (t = parseFloat(n[0]),
                r = parseInt(n[1], 10));
            if (void 0 === r)
                return i;
            if ("loaded" !== i._state)
                return i._queue.push({
                    event: "seek",
                    action: function() {
                        i.seek.apply(i, n)
                    }
                }),
                i;
            var o = i._soundById(r);
            if (o) {
                if (!("number" == typeof t && t >= 0)) {
                    if (i._webAudio) {
                        var l = i.playing(r) ? e.ctx.currentTime - o._playStart : 0
                          , h = o._rateSeek ? o._rateSeek - o._seek : 0;
                        return o._seek + (h + l * Math.abs(o._rate))
                    }
                    return o._node.currentTime
                }
                var u = i.playing(r);
                if (u && i.pause(r, !0),
                o._seek = t,
                o._ended = !1,
                i._clearTimer(r),
                u && i.play(r, !0),
                !i._webAudio && o._node && (o._node.currentTime = t),
                u && !i._webAudio) {
                    var c = function() {
                        i._playLock ? setTimeout(c, 0) : i._emit("seek", r)
                    };
                    setTimeout(c, 0)
                } else
                    i._emit("seek", r)
            }
            return i
        },
        playing: function(t) {
            var e = this;
            if ("number" == typeof t) {
                var r = e._soundById(t);
                return !!r && !r._paused
            }
            for (var i = 0; i < e._sounds.length; i++)
                if (!e._sounds[i]._paused)
                    return !0;
            return !1
        },
        duration: function(t) {
            var e = this
              , r = e._duration
              , i = e._soundById(t);
            return i && (r = e._sprite[i._sprite][1] / 1e3),
            r
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var t = this, r = t._sounds, i = 0; i < r.length; i++) {
                r[i]._paused || t.stop(r[i]._id),
                t._webAudio || (/MSIE |Trident\//.test(e._navigator && e._navigator.userAgent) || (r[i]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"),
                r[i]._node.removeEventListener("error", r[i]._errorFn, !1),
                r[i]._node.removeEventListener(e._canPlayEvent, r[i]._loadFn, !1)),
                delete r[i]._node,
                t._clearTimer(r[i]._id);
                var a = e._howls.indexOf(t);
                a >= 0 && e._howls.splice(a, 1)
            }
            var s = !0;
            for (i = 0; i < e._howls.length; i++)
                if (e._howls[i]._src === t._src) {
                    s = !1;
                    break
                }
            return n && s && delete n[t._src],
            e.noAudio = !1,
            t._state = "unloaded",
            t._sounds = [],
            t = null,
            null
        },
        on: function(t, e, r, i) {
            var n = this
              , a = n["_on" + t];
            return "function" == typeof e && a.push(i ? {
                id: r,
                fn: e,
                once: i
            } : {
                id: r,
                fn: e
            }),
            n
        },
        off: function(t, e, r) {
            var i = this
              , n = i["_on" + t]
              , a = 0;
            if ("number" == typeof e && (r = e,
            e = null),
            e || r)
                for (a = 0; a < n.length; a++) {
                    var s = r === n[a].id;
                    if (e === n[a].fn && s || !e && s) {
                        n.splice(a, 1);
                        break
                    }
                }
            else if (t)
                i["_on" + t] = [];
            else {
                var o = Object.keys(i);
                for (a = 0; a < o.length; a++)
                    0 === o[a].indexOf("_on") && Array.isArray(i[o[a]]) && (i[o[a]] = [])
            }
            return i
        },
        once: function(t, e, r) {
            var i = this;
            return i.on(t, e, r, 1),
            i
        },
        _emit: function(t, e, r) {
            for (var i = this, n = i["_on" + t], a = n.length - 1; a >= 0; a--)
                n[a].id && n[a].id !== e && "load" !== t || (setTimeout(function(t) {
                    t.call(this, e, r)
                }
                .bind(i, n[a].fn), 0),
                n[a].once && i.off(t, n[a].fn, n[a].id));
            return i._loadQueue(t),
            i
        },
        _loadQueue: function(t) {
            var e = this;
            if (e._queue.length > 0) {
                var r = e._queue[0];
                r.event === t && (e._queue.shift(),
                e._loadQueue()),
                t || r.action()
            }
            return e
        },
        _ended: function(t) {
            var r = this
              , i = t._sprite;
            if (!r._webAudio && t._node && !t._node.paused && !t._node.ended && t._node.currentTime < t._stop)
                return setTimeout(r._ended.bind(r, t), 100),
                r;
            var n = !(!t._loop && !r._sprite[i][2]);
            if (r._emit("end", t._id),
            !r._webAudio && n && r.stop(t._id, !0).play(t._id),
            r._webAudio && n) {
                r._emit("play", t._id),
                t._seek = t._start || 0,
                t._rateSeek = 0,
                t._playStart = e.ctx.currentTime;
                var a = 1e3 * (t._stop - t._start) / Math.abs(t._rate);
                r._endTimers[t._id] = setTimeout(r._ended.bind(r, t), a)
            }
            return r._webAudio && !n && (t._paused = !0,
            t._ended = !0,
            t._seek = t._start || 0,
            t._rateSeek = 0,
            r._clearTimer(t._id),
            r._cleanBuffer(t._node),
            e._autoSuspend()),
            r._webAudio || n || r.stop(t._id),
            r
        },
        _clearTimer: function(t) {
            var e = this;
            if (e._endTimers[t]) {
                if ("function" != typeof e._endTimers[t])
                    clearTimeout(e._endTimers[t]);
                else {
                    var r = e._soundById(t);
                    r && r._node && r._node.removeEventListener("ended", e._endTimers[t], !1)
                }
                delete e._endTimers[t]
            }
            return e
        },
        _soundById: function(t) {
            for (var e = this, r = 0; r < e._sounds.length; r++)
                if (t === e._sounds[r]._id)
                    return e._sounds[r];
            return null
        },
        _inactiveSound: function() {
            var t = this;
            t._drain();
            for (var e = 0; e < t._sounds.length; e++)
                if (t._sounds[e]._ended)
                    return t._sounds[e].reset();
            return new i(t)
        },
        _drain: function() {
            var t = this
              , e = t._pool
              , r = 0
              , i = 0;
            if (!(t._sounds.length < e)) {
                for (i = 0; i < t._sounds.length; i++)
                    t._sounds[i]._ended && r++;
                for (i = t._sounds.length - 1; i >= 0; i--) {
                    if (e >= r)
                        return;
                    t._sounds[i]._ended && (t._webAudio && t._sounds[i]._node && t._sounds[i]._node.disconnect(0),
                    t._sounds.splice(i, 1),
                    r--)
                }
            }
        },
        _getSoundIds: function(t) {
            var e = this;
            if (void 0 === t) {
                for (var r = [], i = 0; i < e._sounds.length; i++)
                    r.push(e._sounds[i]._id);
                return r
            }
            return [t]
        },
        _refreshBuffer: function(t) {
            var r = this;
            return t._node.bufferSource = e.ctx.createBufferSource(),
            t._node.bufferSource.buffer = n[r._src],
            t._panner ? t._node.bufferSource.connect(t._panner) : t._node.bufferSource.connect(t._node),
            t._node.bufferSource.loop = t._loop,
            t._loop && (t._node.bufferSource.loopStart = t._start || 0,
            t._node.bufferSource.loopEnd = t._stop),
            t._node.bufferSource.playbackRate.setValueAtTime(t._rate, e.ctx.currentTime),
            r
        },
        _cleanBuffer: function(t) {
            var r = this;
            if (e._scratchBuffer) {
                t.bufferSource.onended = null,
                t.bufferSource.disconnect(0);
                try {
                    t.bufferSource.buffer = e._scratchBuffer
                } catch (t) {}
            }
            return t.bufferSource = null,
            r
        }
    };
    var i = function(t) {
        this._parent = t,
        this.init()
    };
    i.prototype = {
        init: function() {
            var t = this
              , r = t._parent;
            return t._muted = r._muted,
            t._loop = r._loop,
            t._volume = r._volume,
            t._rate = r._rate,
            t._seek = 0,
            t._paused = !0,
            t._ended = !0,
            t._sprite = "__default",
            t._id = ++e._counter,
            r._sounds.push(t),
            t.create(),
            t
        },
        create: function() {
            var t = this
              , r = t._parent
              , i = e._muted || t._muted || t._parent._muted ? 0 : t._volume;
            return r._webAudio ? (t._node = void 0 === e.ctx.createGain ? e.ctx.createGainNode() : e.ctx.createGain(),
            t._node.gain.setValueAtTime(i, e.ctx.currentTime),
            t._node.paused = !0,
            t._node.connect(e.masterGain)) : (t._node = new Audio,
            t._errorFn = t._errorListener.bind(t),
            t._node.addEventListener("error", t._errorFn, !1),
            t._loadFn = t._loadListener.bind(t),
            t._node.addEventListener(e._canPlayEvent, t._loadFn, !1),
            t._node.src = r._src,
            t._node.preload = "auto",
            t._node.volume = i * e.volume(),
            t._node.load()),
            t
        },
        reset: function() {
            var t = this
              , r = t._parent;
            return t._muted = r._muted,
            t._loop = r._loop,
            t._volume = r._volume,
            t._rate = r._rate,
            t._seek = 0,
            t._rateSeek = 0,
            t._paused = !0,
            t._ended = !0,
            t._sprite = "__default",
            t._id = ++e._counter,
            t
        },
        _errorListener: function() {
            var t = this;
            t._parent._emit("loaderror", t._id, t._node.error ? t._node.error.code : 0),
            t._node.removeEventListener("error", t._errorFn, !1)
        },
        _loadListener: function() {
            var t = this
              , r = t._parent;
            r._duration = Math.ceil(10 * t._node.duration) / 10,
            0 === Object.keys(r._sprite).length && (r._sprite = {
                __default: [0, 1e3 * r._duration]
            }),
            "loaded" !== r._state && (r._state = "loaded",
            r._emit("load"),
            r._loadQueue()),
            t._node.removeEventListener(e._canPlayEvent, t._loadFn, !1)
        }
    };
    var n = {}
      , a = function(t) {
        var e = t._src;
        if (n[e])
            return t._duration = n[e].duration,
            void l(t);
        if (/^data:[^;]+;base64,/.test(e)) {
            for (var r = atob(e.split(",")[1]), i = new Uint8Array(r.length), a = 0; a < r.length; ++a)
                i[a] = r.charCodeAt(a);
            o(i.buffer, t)
        } else {
            var h = new XMLHttpRequest;
            h.open("GET", e, !0),
            h.withCredentials = t._xhrWithCredentials,
            h.responseType = "arraybuffer",
            h.onload = function() {
                var e = (h.status + "")[0];
                return "0" !== e && "2" !== e && "3" !== e ? void t._emit("loaderror", null, "Failed loading audio file with status: " + h.status + ".") : void o(h.response, t)
            }
            ,
            h.onerror = function() {
                t._webAudio && (t._html5 = !0,
                t._webAudio = !1,
                t._sounds = [],
                delete n[e],
                t.load())
            }
            ,
            s(h)
        }
    }
      , s = function(t) {
        try {
            t.send()
        } catch (e) {
            t.onerror()
        }
    }
      , o = function(t, r) {
        e.ctx.decodeAudioData(t, function(t) {
            t && r._sounds.length > 0 && (n[r._src] = t,
            l(r, t))
        }, function() {
            r._emit("loaderror", null, "Decoding audio data failed.")
        })
    }
      , l = function(t, e) {
        e && !t._duration && (t._duration = e.duration),
        0 === Object.keys(t._sprite).length && (t._sprite = {
            __default: [0, 1e3 * t._duration]
        }),
        "loaded" !== t._state && (t._state = "loaded",
        t._emit("load"),
        t._loadQueue())
    }
      , h = function() {
        try {
            "undefined" != typeof AudioContext ? e.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? e.ctx = new webkitAudioContext : e.usingWebAudio = !1
        } catch (t) {
            e.usingWebAudio = !1
        }
        var t = /iP(hone|od|ad)/.test(e._navigator && e._navigator.platform)
          , r = e._navigator && e._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)
          , i = r ? parseInt(r[1], 10) : null;
        if (t && i && 9 > i) {
            var n = /safari/.test(e._navigator && e._navigator.userAgent.toLowerCase());
            (e._navigator && e._navigator.standalone && !n || e._navigator && !e._navigator.standalone && !n) && (e.usingWebAudio = !1)
        }
        e.usingWebAudio && (e.masterGain = void 0 === e.ctx.createGain ? e.ctx.createGainNode() : e.ctx.createGain(),
        e.masterGain.gain.setValueAtTime(e._muted ? 0 : 1, e.ctx.currentTime),
        e.masterGain.connect(e.ctx.destination)),
        e._setup()
    };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: e,
            Howl: r
        }
    }),
    "undefined" != typeof exports && (exports.Howler = e,
    exports.Howl = r),
    "undefined" != typeof window ? (window.HowlerGlobal = t,
    window.Howler = e,
    window.Howl = r,
    window.Sound = i) : "undefined" != typeof global && (global.HowlerGlobal = t,
    global.Howler = e,
    global.Howl = r,
    global.Sound = i)
}(),
!function() {
    "use strict";
    HowlerGlobal.prototype._pos = [0, 0, 0],
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0],
    HowlerGlobal.prototype.stereo = function(t) {
        var e = this;
        if (!e.ctx || !e.ctx.listener)
            return e;
        for (var r = e._howls.length - 1; r >= 0; r--)
            e._howls[r].stereo(t);
        return e
    }
    ,
    HowlerGlobal.prototype.pos = function(t, e, r) {
        var i = this;
        return i.ctx && i.ctx.listener ? (e = "number" != typeof e ? i._pos[1] : e,
        r = "number" != typeof r ? i._pos[2] : r,
        "number" != typeof t ? i._pos : (i._pos = [t, e, r],
        void 0 !== i.ctx.listener.positionX ? (i.ctx.listener.positionX.setTargetAtTime(i._pos[0], Howler.ctx.currentTime, .1),
        i.ctx.listener.positionY.setTargetAtTime(i._pos[1], Howler.ctx.currentTime, .1),
        i.ctx.listener.positionZ.setTargetAtTime(i._pos[2], Howler.ctx.currentTime, .1)) : i.ctx.listener.setPosition(i._pos[0], i._pos[1], i._pos[2]),
        i)) : i
    }
    ,
    HowlerGlobal.prototype.orientation = function(t, e, r, i, n, a) {
        var s = this;
        if (!s.ctx || !s.ctx.listener)
            return s;
        var o = s._orientation;
        return e = "number" != typeof e ? o[1] : e,
        r = "number" != typeof r ? o[2] : r,
        i = "number" != typeof i ? o[3] : i,
        n = "number" != typeof n ? o[4] : n,
        a = "number" != typeof a ? o[5] : a,
        "number" != typeof t ? o : (s._orientation = [t, e, r, i, n, a],
        void 0 !== s.ctx.listener.forwardX ? (s.ctx.listener.forwardX.setTargetAtTime(t, Howler.ctx.currentTime, .1),
        s.ctx.listener.forwardY.setTargetAtTime(e, Howler.ctx.currentTime, .1),
        s.ctx.listener.forwardZ.setTargetAtTime(r, Howler.ctx.currentTime, .1),
        s.ctx.listener.upX.setTargetAtTime(t, Howler.ctx.currentTime, .1),
        s.ctx.listener.upY.setTargetAtTime(e, Howler.ctx.currentTime, .1),
        s.ctx.listener.upZ.setTargetAtTime(r, Howler.ctx.currentTime, .1)) : s.ctx.listener.setOrientation(t, e, r, i, n, a),
        s)
    }
    ,
    Howl.prototype.init = function(t) {
        return function(e) {
            var r = this;
            return r._orientation = e.orientation || [1, 0, 0],
            r._stereo = e.stereo || null,
            r._pos = e.pos || null,
            r._pannerAttr = {
                coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : 360,
                coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : 0,
                distanceModel: void 0 !== e.distanceModel ? e.distanceModel : "inverse",
                maxDistance: void 0 !== e.maxDistance ? e.maxDistance : 1e4,
                panningModel: void 0 !== e.panningModel ? e.panningModel : "HRTF",
                refDistance: void 0 !== e.refDistance ? e.refDistance : 1,
                rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : 1
            },
            r._onstereo = e.onstereo ? [{
                fn: e.onstereo
            }] : [],
            r._onpos = e.onpos ? [{
                fn: e.onpos
            }] : [],
            r._onorientation = e.onorientation ? [{
                fn: e.onorientation
            }] : [],
            t.call(this, e)
        }
    }(Howl.prototype.init),
    Howl.prototype.stereo = function(e, r) {
        var i = this;
        if (!i._webAudio)
            return i;
        if ("loaded" !== i._state)
            return i._queue.push({
                event: "stereo",
                action: function() {
                    i.stereo(e, r)
                }
            }),
            i;
        var n = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === r) {
            if ("number" != typeof e)
                return i._stereo;
            i._stereo = e,
            i._pos = [e, 0, 0]
        }
        for (var a = i._getSoundIds(r), s = 0; s < a.length; s++) {
            var o = i._soundById(a[s]);
            if (o) {
                if ("number" != typeof e)
                    return o._stereo;
                o._stereo = e,
                o._pos = [e, 0, 0],
                o._node && (o._pannerAttr.panningModel = "equalpower",
                o._panner && o._panner.pan || t(o, n),
                "spatial" === n ? void 0 !== o._panner.positionX ? (o._panner.positionX.setValueAtTime(e, Howler.ctx.currentTime),
                o._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime),
                o._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : o._panner.setPosition(e, 0, 0) : o._panner.pan.setValueAtTime(e, Howler.ctx.currentTime)),
                i._emit("stereo", o._id)
            }
        }
        return i
    }
    ,
    Howl.prototype.pos = function(e, r, i, n) {
        var a = this;
        if (!a._webAudio)
            return a;
        if ("loaded" !== a._state)
            return a._queue.push({
                event: "pos",
                action: function() {
                    a.pos(e, r, i, n)
                }
            }),
            a;
        if (r = "number" != typeof r ? 0 : r,
        i = "number" != typeof i ? -.5 : i,
        void 0 === n) {
            if ("number" != typeof e)
                return a._pos;
            a._pos = [e, r, i]
        }
        for (var s = a._getSoundIds(n), o = 0; o < s.length; o++) {
            var l = a._soundById(s[o]);
            if (l) {
                if ("number" != typeof e)
                    return l._pos;
                l._pos = [e, r, i],
                l._node && (l._panner && !l._panner.pan || t(l, "spatial"),
                void 0 !== l._panner.positionX ? (l._panner.positionX.setValueAtTime(e, Howler.ctx.currentTime),
                l._panner.positionY.setValueAtTime(r, Howler.ctx.currentTime),
                l._panner.positionZ.setValueAtTime(i, Howler.ctx.currentTime)) : l._panner.setOrientation(e, r, i)),
                a._emit("pos", l._id)
            }
        }
        return a
    }
    ,
    Howl.prototype.orientation = function(e, r, i, n) {
        var a = this;
        if (!a._webAudio)
            return a;
        if ("loaded" !== a._state)
            return a._queue.push({
                event: "orientation",
                action: function() {
                    a.orientation(e, r, i, n)
                }
            }),
            a;
        if (r = "number" != typeof r ? a._orientation[1] : r,
        i = "number" != typeof i ? a._orientation[2] : i,
        void 0 === n) {
            if ("number" != typeof e)
                return a._orientation;
            a._orientation = [e, r, i]
        }
        for (var s = a._getSoundIds(n), o = 0; o < s.length; o++) {
            var l = a._soundById(s[o]);
            if (l) {
                if ("number" != typeof e)
                    return l._orientation;
                l._orientation = [e, r, i],
                l._node && (l._panner || (l._pos || (l._pos = a._pos || [0, 0, -.5]),
                t(l, "spatial")),
                l._panner.orientationX.setValueAtTime(e, Howler.ctx.currentTime),
                l._panner.orientationY.setValueAtTime(r, Howler.ctx.currentTime),
                l._panner.orientationZ.setValueAtTime(i, Howler.ctx.currentTime)),
                a._emit("orientation", l._id)
            }
        }
        return a
    }
    ,
    Howl.prototype.pannerAttr = function() {
        var e, r, i, n = this, a = arguments;
        if (!n._webAudio)
            return n;
        if (0 === a.length)
            return n._pannerAttr;
        if (1 === a.length) {
            if ("object" != typeof a[0])
                return i = n._soundById(parseInt(a[0], 10)),
                i ? i._pannerAttr : n._pannerAttr;
            e = a[0],
            void 0 === r && (e.pannerAttr || (e.pannerAttr = {
                coneInnerAngle: e.coneInnerAngle,
                coneOuterAngle: e.coneOuterAngle,
                coneOuterGain: e.coneOuterGain,
                distanceModel: e.distanceModel,
                maxDistance: e.maxDistance,
                refDistance: e.refDistance,
                rolloffFactor: e.rolloffFactor,
                panningModel: e.panningModel
            }),
            n._pannerAttr = {
                coneInnerAngle: void 0 !== e.pannerAttr.coneInnerAngle ? e.pannerAttr.coneInnerAngle : n._coneInnerAngle,
                coneOuterAngle: void 0 !== e.pannerAttr.coneOuterAngle ? e.pannerAttr.coneOuterAngle : n._coneOuterAngle,
                coneOuterGain: void 0 !== e.pannerAttr.coneOuterGain ? e.pannerAttr.coneOuterGain : n._coneOuterGain,
                distanceModel: void 0 !== e.pannerAttr.distanceModel ? e.pannerAttr.distanceModel : n._distanceModel,
                maxDistance: void 0 !== e.pannerAttr.maxDistance ? e.pannerAttr.maxDistance : n._maxDistance,
                refDistance: void 0 !== e.pannerAttr.refDistance ? e.pannerAttr.refDistance : n._refDistance,
                rolloffFactor: void 0 !== e.pannerAttr.rolloffFactor ? e.pannerAttr.rolloffFactor : n._rolloffFactor,
                panningModel: void 0 !== e.pannerAttr.panningModel ? e.pannerAttr.panningModel : n._panningModel
            })
        } else
            2 === a.length && (e = a[0],
            r = parseInt(a[1], 10));
        for (var s = n._getSoundIds(r), o = 0; o < s.length; o++)
            if (i = n._soundById(s[o])) {
                var l = i._pannerAttr;
                l = {
                    coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : l.coneInnerAngle,
                    coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : l.coneOuterAngle,
                    coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : l.coneOuterGain,
                    distanceModel: void 0 !== e.distanceModel ? e.distanceModel : l.distanceModel,
                    maxDistance: void 0 !== e.maxDistance ? e.maxDistance : l.maxDistance,
                    refDistance: void 0 !== e.refDistance ? e.refDistance : l.refDistance,
                    rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : l.rolloffFactor,
                    panningModel: void 0 !== e.panningModel ? e.panningModel : l.panningModel
                };
                var h = i._panner;
                h ? (h.coneInnerAngle = l.coneInnerAngle,
                h.coneOuterAngle = l.coneOuterAngle,
                h.coneOuterGain = l.coneOuterGain,
                h.distanceModel = l.distanceModel,
                h.maxDistance = l.maxDistance,
                h.refDistance = l.refDistance,
                h.rolloffFactor = l.rolloffFactor,
                h.panningModel = l.panningModel) : (i._pos || (i._pos = n._pos || [0, 0, -.5]),
                t(i, "spatial"))
            }
        return n
    }
    ,
    Sound.prototype.init = function(t) {
        return function() {
            var e = this
              , r = e._parent;
            e._orientation = r._orientation,
            e._stereo = r._stereo,
            e._pos = r._pos,
            e._pannerAttr = r._pannerAttr,
            t.call(this),
            e._stereo ? r.stereo(e._stereo) : e._pos && r.pos(e._pos[0], e._pos[1], e._pos[2], e._id)
        }
    }(Sound.prototype.init),
    Sound.prototype.reset = function(t) {
        return function() {
            var e = this
              , r = e._parent;
            return e._orientation = r._orientation,
            e._pos = r._pos,
            e._pannerAttr = r._pannerAttr,
            t.call(this)
        }
    }(Sound.prototype.reset);
    var t = function(t, e) {
        e = e || "spatial",
        "spatial" === e ? (t._panner = Howler.ctx.createPanner(),
        t._panner.coneInnerAngle = t._pannerAttr.coneInnerAngle,
        t._panner.coneOuterAngle = t._pannerAttr.coneOuterAngle,
        t._panner.coneOuterGain = t._pannerAttr.coneOuterGain,
        t._panner.distanceModel = t._pannerAttr.distanceModel,
        t._panner.maxDistance = t._pannerAttr.maxDistance,
        t._panner.refDistance = t._pannerAttr.refDistance,
        t._panner.rolloffFactor = t._pannerAttr.rolloffFactor,
        t._panner.panningModel = t._pannerAttr.panningModel,
        void 0 !== t._panner.positionX ? (t._panner.positionX.setValueAtTime(t._pos[0], Howler.ctx.currentTime),
        t._panner.positionY.setValueAtTime(t._pos[1], Howler.ctx.currentTime),
        t._panner.positionZ.setValueAtTime(t._pos[2], Howler.ctx.currentTime)) : t._panner.setPosition(t._pos[0], t._pos[1], t._pos[2]),
        void 0 !== t._panner.orientationX ? (t._panner.orientationX.setValueAtTime(t._orientation[0], Howler.ctx.currentTime),
        t._panner.orientationY.setValueAtTime(t._orientation[1], Howler.ctx.currentTime),
        t._panner.orientationZ.setValueAtTime(t._orientation[2], Howler.ctx.currentTime)) : t._panner.setOrientation(t._orientation[0], t._orientation[1], t._orientation[2])) : (t._panner = Howler.ctx.createStereoPanner(),
        t._panner.pan.setValueAtTime(t._stereo, Howler.ctx.currentTime)),
        t._panner.connect(t._node),
        t._paused || t._parent.pause(t._id, !0).play(t._id, !0)
    }
}(),
function() {
    "use strict";
    var t = "undefined" != typeof window && "undefined" != typeof window.document ? window.document : {}
      , e = "undefined" != typeof module && module.exports
      , r = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT"in Element
      , i = function() {
        for (var e, r = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], i = 0, n = r.length, a = {}; n > i; i++)
            if (e = r[i],
            e && e[1]in t) {
                for (i = 0; i < e.length; i++)
                    a[r[0][i]] = e[i];
                return a
            }
        return !1
    }()
      , n = {
        change: i.fullscreenchange,
        error: i.fullscreenerror
    }
      , a = {
        request: function(e) {
            var n = i.requestFullscreen;
            e = e || t.documentElement,
            /5\.1[.\d]* Safari/.test(navigator.userAgent) ? e[n]() : r ? e[n](Element.ALLOW_KEYBOARD_INPUT) : e[n]({
                navigationUI: "auto"
            })
        },
        exit: function() {
            t[i.exitFullscreen]()
        },
        toggle: function(t) {
            this.isFullscreen ? this.exit() : this.request(t)
        },
        onchange: function(t) {
            this.on("change", t)
        },
        onerror: function(t) {
            this.on("error", t)
        },
        on: function(e, r) {
            var i = n[e];
            i && t.addEventListener(i, r, !1)
        },
        off: function(e, r) {
            var i = n[e];
            i && t.removeEventListener(i, r, !1)
        },
        raw: i
    };
    return i ? (Object.defineProperties(a, {
        isFullscreen: {
            get: function() {
                return Boolean(t[i.fullscreenElement])
            }
        },
        element: {
            enumerable: !0,
            get: function() {
                return t[i.fullscreenElement]
            }
        },
        enabled: {
            enumerable: !0,
            get: function() {
                return Boolean(t[i.fullscreenEnabled])
            }
        }
    }),
    void (e ? module.exports = a : window.screenfull = a)) : void (e ? module.exports = !1 : window.screenfull = !1)
}(),
function(t, e) {
    "function" == typeof define && define.amd ? define(e) : "object" == typeof exports ? module.exports = e(require, exports, module) : t.CountUp = e()
}(this, function(t, e, r) {
    var i = function(t, e, r, i, n, a) {
        function s(t) {
            var e, r, i, n, a, s, o = 0 > t, l = t > 0;
            if (t = Math.abs(t).toFixed(h.decimals),
            t += "",
            e = t.split("."),
            r = e[0],
            i = e.length > 1 ? h.options.decimal + e[1] : "",
            h.options.useGrouping) {
                for (n = "",
                a = 0,
                s = r.length; s > a; ++a)
                    0 !== a && a % 3 === 0 && (n = h.options.separator + n),
                    n = r[s - a - 1] + n;
                r = n
            }
            return h.options.numerals.length && (r = r.replace(/[0-9]/g, function(t) {
                return h.options.numerals[+t]
            }),
            i = i.replace(/[0-9]/g, function(t) {
                return h.options.numerals[+t]
            })),
            (o ? "-" : l ? "+" : "") + h.options.prefix + r + i + h.options.suffix
        }
        function o(t, e, r, i) {
            return r * (-Math.pow(2, -10 * t / i) + 1) * 1024 / 1023 + e
        }
        function l(t) {
            return "number" == typeof t && !isNaN(t)
        }
        var h = this;
        if (h.version = function() {
            return "1.9.3"
        }
        ,
        h.options = {
            useEasing: !0,
            useGrouping: !0,
            separator: ",",
            decimal: ".",
            easingFn: o,
            formattingFn: s,
            prefix: "",
            suffix: "",
            numerals: []
        },
        a && "object" == typeof a)
            for (var u in h.options)
                a.hasOwnProperty(u) && null !== a[u] && (h.options[u] = a[u]);
        "" === h.options.separator ? h.options.useGrouping = !1 : h.options.separator = "" + h.options.separator;
        for (var c = 0, f = ["webkit", "moz", "ms", "o"], d = 0; d < f.length && !window.requestAnimationFrame; ++d)
            window.requestAnimationFrame = window[f[d] + "RequestAnimationFrame"],
            window.cancelAnimationFrame = window[f[d] + "CancelAnimationFrame"] || window[f[d] + "CancelRequestAnimationFrame"];
        window.requestAnimationFrame || (window.requestAnimationFrame = function(t, e) {
            var r = (new Date).getTime()
              , i = Math.max(0, 16 - (r - c))
              , n = window.setTimeout(function() {
                t(r + i)
            }, i);
            return c = r + i,
            n
        }
        ),
        window.cancelAnimationFrame || (window.cancelAnimationFrame = function(t) {
            clearTimeout(t)
        }
        ),
        h.initialize = function() {
            return h.initialized ? !0 : (h.error = "",
            h.d = t,
            h.d ? (h.startVal = Number(e),
            h.endVal = Number(r),
            l(h.startVal) && l(h.endVal) ? (h.decimals = Math.max(0, i || 0),
            h.dec = Math.pow(10, h.decimals),
            h.duration = 1e3 * Number(n) || 2e3,
            h.countDown = h.startVal > h.endVal,
            h.frameVal = h.startVal,
            h.initialized = !0,
            !0) : (h.error = "[CountUp] startVal (" + e + ") or endVal (" + r + ") is not a number",
            !1)) : (h.error = "[CountUp] target is null or undefined",
            !1))
        }
        ,
        h.printValue = function(t) {
            var e = h.options.formattingFn(t);
            h.d.text = e
        }
        ,
        h.count = function(t) {
            h.startTime || (h.startTime = t),
            h.timestamp = t;
            var e = t - h.startTime;
            h.remaining = h.duration - e,
            h.options.useEasing ? h.countDown ? h.frameVal = h.startVal - h.options.easingFn(e, 0, h.startVal - h.endVal, h.duration) : h.frameVal = h.options.easingFn(e, h.startVal, h.endVal - h.startVal, h.duration) : h.countDown ? h.frameVal = h.startVal - (h.startVal - h.endVal) * (e / h.duration) : h.frameVal = h.startVal + (h.endVal - h.startVal) * (e / h.duration),
            h.countDown ? h.frameVal = h.frameVal < h.endVal ? h.endVal : h.frameVal : h.frameVal = h.frameVal > h.endVal ? h.endVal : h.frameVal,
            h.frameVal = Math.round(h.frameVal * h.dec) / h.dec,
            h.printValue(h.frameVal),
            e < h.duration ? h.rAF = requestAnimationFrame(h.count) : h.callback && h.callback()
        }
        ,
        h.start = function(t) {
            h.initialize() && (h.callback = t,
            h.rAF = requestAnimationFrame(h.count))
        }
        ,
        h.pauseResume = function() {
            h.paused ? (h.paused = !1,
            delete h.startTime,
            h.duration = h.remaining,
            h.startVal = h.frameVal,
            requestAnimationFrame(h.count)) : (h.paused = !0,
            cancelAnimationFrame(h.rAF))
        }
        ,
        h.reset = function() {
            h.paused = !1,
            delete h.startTime,
            h.initialized = !1,
            h.initialize() && (cancelAnimationFrame(h.rAF),
            h.printValue(h.startVal))
        }
        ,
        h.update = function(t) {
            if (h.initialize()) {
                if (t = Number(t),
                !l(t))
                    return void (h.error = "[CountUp] update() - new endVal is not a number: " + t);
                h.error = "",
                t !== h.frameVal && (cancelAnimationFrame(h.rAF),
                h.paused = !1,
                delete h.startTime,
                h.startVal = h.frameVal,
                h.endVal = t,
                h.countDown = h.startVal > h.endVal,
                h.rAF = requestAnimationFrame(h.count))
            }
        }
        ,
        h.initialize() && h.printValue(h.startVal)
    };
    return i
}),
window.CountUp = CountUp;
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, egret;
!function(t) {
    var e = function() {
        function t() {}
        return t.BINARY = "binary",
        t.TEXT = "text",
        t.VARIABLES = "variables",
        t.TEXTURE = "texture",
        t.SOUND = "sound",
        t
    }();
    t.URLLoaderDataFormat = e,
    __reflect(e.prototype, "egret.URLLoaderDataFormat")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(t) {
        function e(e, r, i) {
            var n = t.call(this) || this;
            return n._name = e,
            n._frame = 0 | r,
            i && (n._end = 0 | i),
            n
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "name", {
            get: function() {
                return this._name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "frame", {
            get: function() {
                return this._frame
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "end", {
            get: function() {
                return this._end
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.clone = function() {
            return new e(this._name,this._frame,this._end)
        }
        ,
        e
    }(t.EventDispatcher);
    t.FrameLabel = e,
    __reflect(e.prototype, "egret.FrameLabel")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r() {
            var t = e.call(this) || this;
            return t.$mcData = null,
            t.numFrames = 1,
            t.frames = [],
            t.labels = null,
            t.events = [],
            t.frameRate = 0,
            t.textureData = null,
            t.spriteSheet = null,
            t
        }
        return __extends(r, e),
        r.prototype.$init = function(t, e, r) {
            this.textureData = e,
            this.spriteSheet = r,
            this.setMCData(t)
        }
        ,
        r.prototype.getKeyFrameData = function(t) {
            var e = this.frames[t - 1];
            return e.frame && (e = this.frames[e.frame - 1]),
            e
        }
        ,
        r.prototype.getTextureByFrame = function(t) {
            var e = this.getKeyFrameData(t);
            if (e.res) {
                var r = this.getTextureByResName(e.res);
                return r
            }
            return null
        }
        ,
        r.prototype.$getOffsetByFrame = function(t, e) {
            var r = this.getKeyFrameData(t);
            r.res && e.setTo(0 | r.x, 0 | r.y)
        }
        ,
        r.prototype.getTextureByResName = function(t) {
            if (null == this.spriteSheet)
                return null;
            var e = this.spriteSheet.getTexture(t);
            if (!e) {
                var r = this.textureData[t];
                e = this.spriteSheet.createTexture(t, r.x, r.y, r.w, r.h)
            }
            return e
        }
        ,
        r.prototype.$isDataValid = function() {
            return this.frames.length > 0
        }
        ,
        r.prototype.$isTextureValid = function() {
            return null != this.textureData && null != this.spriteSheet
        }
        ,
        r.prototype.$fillMCData = function(t) {
            this.frameRate = t.frameRate || 24,
            this.fillFramesData(t.frames),
            this.fillFrameLabelsData(t.labels),
            this.fillFrameEventsData(t.events)
        }
        ,
        r.prototype.fillFramesData = function(t) {
            for (var e, r = this.frames, i = t ? t.length : 0, n = 0; i > n; n++) {
                var a = t[n];
                if (r.push(a),
                a.duration) {
                    var s = parseInt(a.duration);
                    if (s > 1) {
                        e = r.length;
                        for (var o = 1; s > o; o++)
                            r.push({
                                frame: e
                            })
                    }
                }
            }
            this.numFrames = r.length
        }
        ,
        r.prototype.fillFrameLabelsData = function(e) {
            if (e) {
                var r = e.length;
                if (r > 0) {
                    this.labels = [];
                    for (var i = 0; r > i; i++) {
                        var n = e[i];
                        this.labels.push(new t.FrameLabel(n.name,n.frame,n.end))
                    }
                }
            }
        }
        ,
        r.prototype.fillFrameEventsData = function(t) {
            if (t) {
                var e = t.length;
                if (e > 0) {
                    this.events = [];
                    for (var r = 0; e > r; r++) {
                        var i = t[r];
                        this.events[i.frame] = i.name
                    }
                }
            }
        }
        ,
        Object.defineProperty(r.prototype, "mcData", {
            get: function() {
                return this.$mcData
            },
            set: function(t) {
                this.setMCData(t)
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.setMCData = function(t) {
            this.$mcData != t && (this.$mcData = t,
            t && this.$fillMCData(t))
        }
        ,
        r
    }(t.HashObject);
    t.MovieClipData = e,
    __reflect(e.prototype, "egret.MovieClipData")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(t, r) {
            var i = e.call(this) || this;
            return i.enableCache = !0,
            i.$mcDataCache = {},
            i.$mcDataSet = t,
            i.setTexture(r),
            i
        }
        return __extends(r, e),
        r.prototype.clearCache = function() {
            this.$mcDataCache = {}
        }
        ,
        r.prototype.generateMovieClipData = function(e) {
            if (void 0 === e && (e = ""),
            "" == e && this.$mcDataSet)
                for (e in this.$mcDataSet.mc)
                    break;
            if ("" == e)
                return null;
            var r = this.findFromCache(e, this.$mcDataCache);
            return r || (r = new t.MovieClipData,
            this.fillData(e, r, this.$mcDataCache)),
            r
        }
        ,
        r.prototype.findFromCache = function(t, e) {
            return this.enableCache && e[t] ? e[t] : null
        }
        ,
        r.prototype.fillData = function(t, e, r) {
            if (this.$mcDataSet) {
                var i = this.$mcDataSet.mc[t];
                i && (e.$init(i, this.$mcDataSet.res, this.$spriteSheet),
                this.enableCache && (r[t] = e))
            }
        }
        ,
        Object.defineProperty(r.prototype, "mcDataSet", {
            get: function() {
                return this.$mcDataSet
            },
            set: function(t) {
                this.$mcDataSet = t
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "texture", {
            set: function(t) {
                this.setTexture(t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "spriteSheet", {
            get: function() {
                return this.$spriteSheet
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.setTexture = function(e) {
            this.$spriteSheet = e ? new t.SpriteSheet(e) : null
        }
        ,
        r
    }(t.EventDispatcher);
    t.MovieClipDataFactory = e,
    __reflect(e.prototype, "egret.MovieClipDataFactory")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(t, r, i, n) {
            void 0 === r && (r = !1),
            void 0 === i && (i = !1),
            void 0 === n && (n = null);
            var a = e.call(this, t, r, i) || this;
            return a.frameLabel = null,
            a.frameLabel = n,
            a
        }
        return __extends(r, e),
        r.dispatchMovieClipEvent = function(e, i, n) {
            void 0 === n && (n = null);
            var a = t.Event.create(r, i);
            a.frameLabel = n;
            var s = e.dispatchEvent(a);
            return t.Event.release(a),
            s
        }
        ,
        r.FRAME_LABEL = "frame_label",
        r
    }(t.Event);
    t.MovieClipEvent = e,
    __reflect(e.prototype, "egret.MovieClipEvent")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function() {
        function e() {
            t.$error(1014)
        }
        return e.get = function(t) {
            return -1 > t && (t = -1),
            t > 1 && (t = 1),
            function(e) {
                return 0 == t ? e : 0 > t ? e * (e * -t + 1 + t) : e * ((2 - e) * t + (1 - t))
            }
        }
        ,
        e.getPowOut = function(t) {
            return function(e) {
                return 1 - Math.pow(1 - e, t)
            }
        }
        ,
        e.quintOut = e.getPowOut(5),
        e.quartOut = e.getPowOut(4),
        e
    }();
    t.ScrollEase = e,
    __reflect(e.prototype, "egret.ScrollEase");
    var r = function(e) {
        function r(t, r, i) {
            var n = e.call(this) || this;
            return n._target = null,
            n._useTicks = !1,
            n.ignoreGlobalPause = !1,
            n.loop = !1,
            n.pluginData = null,
            n._steps = null,
            n._actions = null,
            n.paused = !1,
            n.duration = 0,
            n._prevPos = -1,
            n.position = null,
            n._prevPosition = 0,
            n._stepPosition = 0,
            n.passive = !1,
            n.initialize(t, r, i),
            n
        }
        return __extends(r, e),
        r.get = function(t, e, i, n) {
            return void 0 === e && (e = null),
            void 0 === i && (i = null),
            void 0 === n && (n = !1),
            n && r.removeTweens(t),
            new r(t,e,i)
        }
        ,
        r.removeTweens = function(t) {
            if (t.tween_count) {
                for (var e = r._tweens, i = e.length - 1; i >= 0; i--)
                    e[i]._target == t && (e[i].paused = !0,
                    e.splice(i, 1));
                t.tween_count = 0
            }
        }
        ,
        r.tick = function(t, e) {
            void 0 === e && (e = !1);
            var i = t - r._lastTime;
            r._lastTime = t;
            for (var n = r._tweens.concat(), a = n.length - 1; a >= 0; a--) {
                var s = n[a];
                e && !s.ignoreGlobalPause || s.paused || s.tick(s._useTicks ? 1 : i)
            }
            return !1
        }
        ,
        r._register = function(e, i) {
            var n = e._target
              , a = r._tweens;
            if (i)
                n && (n.tween_count = n.tween_count > 0 ? n.tween_count + 1 : 1),
                a.push(e),
                r._inited || (r._lastTime = t.getTimer(),
                t.ticker.$startTick(r.tick, null),
                r._inited = !0);
            else {
                n && n.tween_count--;
                for (var s = a.length; s--; )
                    if (a[s] == e)
                        return void a.splice(s, 1)
            }
        }
        ,
        r.prototype.initialize = function(t, e, i) {
            this._target = t,
            e && (this._useTicks = e.useTicks,
            this.ignoreGlobalPause = e.ignoreGlobalPause,
            this.loop = e.loop,
            e.onChange && this.addEventListener("change", e.onChange, e.onChangeObj),
            e.override && r.removeTweens(t)),
            this.pluginData = i || {},
            this._curQueueProps = {},
            this._initQueueProps = {},
            this._steps = [],
            this._actions = [],
            e && e.paused ? this.paused = !0 : r._register(this, !0),
            e && null != e.position && this.setPosition(e.position)
        }
        ,
        r.prototype.setPosition = function(t, e) {
            void 0 === e && (e = 1),
            0 > t && (t = 0);
            var r = t
              , i = !1;
            if (r >= this.duration && (this.loop ? r %= this.duration : (r = this.duration,
            i = !0)),
            r == this._prevPos)
                return i;
            var n = this._prevPos;
            if (this.position = this._prevPos = r,
            this._prevPosition = t,
            this._target)
                if (i)
                    this._updateTargetProps(null, 1);
                else if (this._steps.length > 0) {
                    var a = void 0
                      , s = this._steps.length;
                    for (a = 0; s > a && !(this._steps[a].t > r); a++)
                        ;
                    var o = this._steps[a - 1];
                    this._updateTargetProps(o, (this._stepPosition = r - o.t) / o.d)
                }
            return i && this.setPaused(!0),
            0 != e && this._actions.length > 0 && (this._useTicks ? this._runActions(r, r) : 1 == e && n > r ? (n != this.duration && this._runActions(n, this.duration),
            this._runActions(0, r, !0)) : this._runActions(n, r)),
            this.dispatchEventWith("change"),
            i
        }
        ,
        r.prototype._runActions = function(t, e, r) {
            void 0 === r && (r = !1);
            var i = t
              , n = e
              , a = -1
              , s = this._actions.length
              , o = 1;
            for (t > e && (i = e,
            n = t,
            a = s,
            s = o = -1); (a += o) != s; ) {
                var l = this._actions[a]
                  , h = l.t;
                (h == n || h > i && n > h || r && h == t) && l.f.apply(l.o, l.p)
            }
        }
        ,
        r.prototype._updateTargetProps = function(t, e) {
            var i, n, a, s, o, l;
            if (t || 1 != e) {
                if (this.passive = !!t.v,
                this.passive)
                    return;
                t.e && (e = t.e(e, 0, 1, 1)),
                i = t.p0,
                n = t.p1
            } else
                this.passive = !1,
                i = n = this._curQueueProps;
            for (var h in this._initQueueProps) {
                null == (s = i[h]) && (i[h] = s = this._initQueueProps[h]),
                null == (o = n[h]) && (n[h] = o = s),
                a = s == o || 0 == e || 1 == e || "number" != typeof s ? 1 == e ? o : s : s + (o - s) * e;
                var u = !1;
                if (l = r._plugins[h])
                    for (var c = 0, f = l.length; f > c; c++) {
                        var d = l[c].tween(this, h, a, i, n, e, !!t && i == n, !t);
                        d == r.IGNORE ? u = !0 : a = d
                    }
                u || (this._target[h] = a)
            }
        }
        ,
        r.prototype.setPaused = function(t) {
            return this.paused = t,
            r._register(this, !t),
            this
        }
        ,
        r.prototype._cloneProps = function(t) {
            var e = {};
            for (var r in t)
                e[r] = t[r];
            return e
        }
        ,
        r.prototype._addStep = function(t) {
            return t.d > 0 && (this._steps.push(t),
            t.t = this.duration,
            this.duration += t.d),
            this
        }
        ,
        r.prototype._appendQueueProps = function(t) {
            var e, i, n, a, s;
            for (var o in t)
                if (void 0 === this._initQueueProps[o]) {
                    if (i = this._target[o],
                    e = r._plugins[o])
                        for (n = 0,
                        a = e.length; a > n; n++)
                            i = e[n].init(this, o, i);
                    this._initQueueProps[o] = this._curQueueProps[o] = void 0 === i ? null : i
                } else
                    i = this._curQueueProps[o];
            for (var o in t) {
                if (i = this._curQueueProps[o],
                e = r._plugins[o])
                    for (s = s || {},
                    n = 0,
                    a = e.length; a > n; n++)
                        e[n].step && e[n].step(this, o, i, t[o], s);
                this._curQueueProps[o] = t[o]
            }
            return s && this._appendQueueProps(s),
            this._curQueueProps
        }
        ,
        r.prototype._addAction = function(t) {
            return t.t = this.duration,
            this._actions.push(t),
            this
        }
        ,
        r.prototype.to = function(t, e, r) {
            return void 0 === r && (r = void 0),
            (isNaN(e) || 0 > e) && (e = 0),
            this._addStep({
                d: e || 0,
                p0: this._cloneProps(this._curQueueProps),
                e: r,
                p1: this._cloneProps(this._appendQueueProps(t))
            })
        }
        ,
        r.prototype.call = function(t, e, r) {
            return void 0 === e && (e = void 0),
            void 0 === r && (r = void 0),
            this._addAction({
                f: t,
                p: r ? r : [],
                o: e ? e : this._target
            })
        }
        ,
        r.prototype.tick = function(t) {
            this.paused || this.setPosition(this._prevPosition + t)
        }
        ,
        r._tweens = [],
        r.IGNORE = {},
        r._plugins = {},
        r._inited = !1,
        r._lastTime = 0,
        r
    }(t.EventDispatcher);
    t.ScrollTween = r,
    __reflect(r.prototype, "egret.ScrollTween")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(r) {
            void 0 === r && (r = null);
            var i = e.call(this) || this;
            return i.scrollBeginThreshold = 10,
            i.scrollSpeed = 1,
            i._content = null,
            i.delayTouchBeginEvent = null,
            i.touchBeginTimer = null,
            i.touchEnabled = !0,
            i._ScrV_Props_ = new t.ScrollViewProperties,
            r && i.setContent(r),
            i
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "bounces", {
            get: function() {
                return this._ScrV_Props_._bounces
            },
            set: function(t) {
                this._ScrV_Props_._bounces = !!t
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.setContent = function(t) {
            this._content !== t && (this.removeContent(),
            t && (this._content = t,
            e.prototype.addChild.call(this, t),
            this._addEvents()))
        }
        ,
        r.prototype.removeContent = function() {
            this._content && (this._removeEvents(),
            e.prototype.removeChildAt.call(this, 0)),
            this._content = null
        }
        ,
        Object.defineProperty(r.prototype, "verticalScrollPolicy", {
            get: function() {
                return this._ScrV_Props_._verticalScrollPolicy
            },
            set: function(t) {
                t != this._ScrV_Props_._verticalScrollPolicy && (this._ScrV_Props_._verticalScrollPolicy = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "horizontalScrollPolicy", {
            get: function() {
                return this._ScrV_Props_._horizontalScrollPolicy
            },
            set: function(t) {
                t != this._ScrV_Props_._horizontalScrollPolicy && (this._ScrV_Props_._horizontalScrollPolicy = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "scrollLeft", {
            get: function() {
                return this._ScrV_Props_._scrollLeft
            },
            set: function(t) {
                t != this._ScrV_Props_._scrollLeft && (this._ScrV_Props_._scrollLeft = t,
                this._validatePosition(!1, !0),
                this._updateContentPosition())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "scrollTop", {
            get: function() {
                return this._ScrV_Props_._scrollTop
            },
            set: function(t) {
                t != this._ScrV_Props_._scrollTop && (this._ScrV_Props_._scrollTop = t,
                this._validatePosition(!0, !1),
                this._updateContentPosition())
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.setScrollPosition = function(t, e, r) {
            if (void 0 === r && (r = !1),
            (!r || 0 != t || 0 != e) && (r || this._ScrV_Props_._scrollTop != t || this._ScrV_Props_._scrollLeft != e)) {
                var i = this._ScrV_Props_._scrollTop
                  , n = this._ScrV_Props_._scrollLeft;
                if (r) {
                    var a = this.getMaxScrollLeft()
                      , s = this.getMaxScrollTop();
                    (0 >= i || i >= s) && (t /= 2),
                    (0 >= n || n >= a) && (e /= 2);
                    var o = i + t
                      , l = n + e
                      , h = this._ScrV_Props_._bounces;
                    h || ((0 >= o || o >= s) && (o = Math.max(0, Math.min(o, s))),
                    (0 >= l || l >= a) && (l = Math.max(0, Math.min(l, a)))),
                    this._ScrV_Props_._scrollTop = o,
                    this._ScrV_Props_._scrollLeft = l
                } else
                    this._ScrV_Props_._scrollTop = t,
                    this._ScrV_Props_._scrollLeft = e;
                this._validatePosition(!0, !0),
                this._updateContentPosition()
            }
        }
        ,
        r.prototype._validatePosition = function(t, e) {
            if (void 0 === t && (t = !1),
            void 0 === e && (e = !1),
            t) {
                var r = this.height
                  , i = this._getContentHeight();
                this._ScrV_Props_._scrollTop = Math.max(this._ScrV_Props_._scrollTop, (0 - r) / 2),
                this._ScrV_Props_._scrollTop = Math.min(this._ScrV_Props_._scrollTop, i > r ? i - r / 2 : r / 2)
            }
            if (e) {
                var n = this.width
                  , a = this._getContentWidth();
                this._ScrV_Props_._scrollLeft = Math.max(this._ScrV_Props_._scrollLeft, (0 - n) / 2),
                this._ScrV_Props_._scrollLeft = Math.min(this._ScrV_Props_._scrollLeft, a > n ? a - n / 2 : n / 2)
            }
        }
        ,
        r.prototype.$setWidth = function(t) {
            this.$explicitWidth != t && (e.prototype.$setWidth.call(this, t),
            this._updateContentPosition())
        }
        ,
        r.prototype.$setHeight = function(t) {
            this.$explicitHeight != t && (e.prototype.$setHeight.call(this, t),
            this._updateContentPosition())
        }
        ,
        r.prototype._updateContentPosition = function() {
            var e = this.height
              , r = this.width;
            this.scrollRect = new t.Rectangle(Math.round(this._ScrV_Props_._scrollLeft),Math.round(this._ScrV_Props_._scrollTop),r,e),
            this.dispatchEvent(new t.Event(t.Event.CHANGE))
        }
        ,
        r.prototype._checkScrollPolicy = function() {
            var t = this._ScrV_Props_._horizontalScrollPolicy
              , e = this.__checkScrollPolicy(t, this._getContentWidth(), this.width);
            this._ScrV_Props_._hCanScroll = e;
            var r = this._ScrV_Props_._verticalScrollPolicy
              , i = this.__checkScrollPolicy(r, this._getContentHeight(), this.height);
            return this._ScrV_Props_._vCanScroll = i,
            e || i
        }
        ,
        r.prototype.__checkScrollPolicy = function(t, e, r) {
            return "on" == t ? !0 : "off" == t ? !1 : e > r
        }
        ,
        r.prototype._addEvents = function() {
            this.addEventListener(t.TouchEvent.TOUCH_BEGIN, this._onTouchBegin, this),
            this.addEventListener(t.TouchEvent.TOUCH_BEGIN, this._onTouchBeginCapture, this, !0),
            this.addEventListener(t.TouchEvent.TOUCH_END, this._onTouchEndCapture, this, !0)
        }
        ,
        r.prototype._removeEvents = function() {
            this.removeEventListener(t.TouchEvent.TOUCH_BEGIN, this._onTouchBegin, this),
            this.removeEventListener(t.TouchEvent.TOUCH_BEGIN, this._onTouchBeginCapture, this, !0),
            this.removeEventListener(t.TouchEvent.TOUCH_END, this._onTouchEndCapture, this, !0)
        }
        ,
        r.prototype._onTouchBegin = function(e) {
            if (!e.$isDefaultPrevented) {
                var r = this._checkScrollPolicy();
                r && (this._ScrV_Props_._touchStartPosition.x = e.stageX,
                this._ScrV_Props_._touchStartPosition.y = e.stageY,
                (this._ScrV_Props_._isHTweenPlaying || this._ScrV_Props_._isVTweenPlaying) && this._onScrollFinished(),
                this._tempStage = this.stage,
                this._tempStage.addEventListener(t.TouchEvent.TOUCH_MOVE, this._onTouchMove, this),
                this._tempStage.addEventListener(t.TouchEvent.TOUCH_END, this._onTouchEnd, this),
                this._tempStage.addEventListener(t.TouchEvent.LEAVE_STAGE, this._onTouchEnd, this),
                this.addEventListener(t.Event.ENTER_FRAME, this._onEnterFrame, this),
                this._logTouchEvent(e),
                e.preventDefault())
            }
        }
        ,
        r.prototype._onTouchBeginCapture = function(e) {
            var r = this._checkScrollPolicy();
            if (r) {
                for (var i = e.target; i != this; ) {
                    if ("_checkScrollPolicy"in i && (r = i._checkScrollPolicy()))
                        return;
                    i = i.parent
                }
                e.stopPropagation();
                var n = this.cloneTouchEvent(e);
                this.delayTouchBeginEvent = n,
                this.touchBeginTimer || (this.touchBeginTimer = new t.Timer(100,1),
                this.touchBeginTimer.addEventListener(t.TimerEvent.TIMER_COMPLETE, this._onTouchBeginTimer, this)),
                this.touchBeginTimer.start(),
                this._onTouchBegin(e)
            }
        }
        ,
        r.prototype._onTouchEndCapture = function(e) {
            var r = this;
            if (this.delayTouchBeginEvent) {
                this._onTouchBeginTimer(),
                e.stopPropagation();
                var i = this.cloneTouchEvent(e);
                t.callLater(function() {
                    r.stage && r.dispatchPropagationEvent(i)
                }, this)
            }
        }
        ,
        r.prototype._onTouchBeginTimer = function() {
            this.touchBeginTimer.stop();
            var t = this.delayTouchBeginEvent;
            this.delayTouchBeginEvent = null,
            this.stage && this.dispatchPropagationEvent(t)
        }
        ,
        r.prototype.dispatchPropagationEvent = function(e) {
            for (var r = e.$target, i = this.$getPropagationList(r), n = i.length, a = .5 * i.length, s = -1, o = 0; n > o; o++)
                if (i[o] === this._content) {
                    s = o;
                    break
                }
            i.splice(0, s + 1),
            a -= s + 1,
            this.$dispatchPropagationEvent(e, i, a),
            t.Event.release(e)
        }
        ,
        r.prototype._onTouchMove = function(t) {
            if (this._ScrV_Props_._lastTouchPosition.x != t.stageX || this._ScrV_Props_._lastTouchPosition.y != t.stageY) {
                if (!this._ScrV_Props_._scrollStarted) {
                    var e = t.stageX - this._ScrV_Props_._touchStartPosition.x
                      , r = t.stageY - this._ScrV_Props_._touchStartPosition.y
                      , i = Math.sqrt(e * e + r * r);
                    if (i < this.scrollBeginThreshold)
                        return void this._logTouchEvent(t)
                }
                this._ScrV_Props_._scrollStarted = !0,
                this.delayTouchBeginEvent && (this.delayTouchBeginEvent = null,
                this.touchBeginTimer.stop()),
                this.touchChildren = !1;
                var n = this._getPointChange(t);
                this.setScrollPosition(n.y, n.x, !0),
                this._calcVelocitys(t),
                this._logTouchEvent(t)
            }
        }
        ,
        r.prototype._onTouchEnd = function(e) {
            this.touchChildren = !0,
            this._ScrV_Props_._scrollStarted = !1,
            this._tempStage.removeEventListener(t.TouchEvent.TOUCH_MOVE, this._onTouchMove, this),
            this._tempStage.removeEventListener(t.TouchEvent.TOUCH_END, this._onTouchEnd, this),
            this._tempStage.removeEventListener(t.TouchEvent.LEAVE_STAGE, this._onTouchEnd, this),
            this.removeEventListener(t.Event.ENTER_FRAME, this._onEnterFrame, this),
            this._moveAfterTouchEnd()
        }
        ,
        r.prototype._onEnterFrame = function(e) {
            var r = t.getTimer();
            r - this._ScrV_Props_._lastTouchTime > 100 && r - this._ScrV_Props_._lastTouchTime < 300 && this._calcVelocitys(this._ScrV_Props_._lastTouchEvent)
        }
        ,
        r.prototype._logTouchEvent = function(e) {
            this._ScrV_Props_._lastTouchPosition.x = e.stageX,
            this._ScrV_Props_._lastTouchPosition.y = e.stageY,
            this._ScrV_Props_._lastTouchEvent = this.cloneTouchEvent(e),
            this._ScrV_Props_._lastTouchTime = t.getTimer()
        }
        ,
        r.prototype._getPointChange = function(t) {
            return {
                x: this._ScrV_Props_._hCanScroll === !1 ? 0 : this._ScrV_Props_._lastTouchPosition.x - t.stageX,
                y: this._ScrV_Props_._vCanScroll === !1 ? 0 : this._ScrV_Props_._lastTouchPosition.y - t.stageY
            }
        }
        ,
        r.prototype._calcVelocitys = function(e) {
            var r = t.getTimer();
            if (0 == this._ScrV_Props_._lastTouchTime)
                return void (this._ScrV_Props_._lastTouchTime = r);
            var i = this._getPointChange(e)
              , n = r - this._ScrV_Props_._lastTouchTime;
            i.x /= n,
            i.y /= n,
            this._ScrV_Props_._velocitys.push(i),
            this._ScrV_Props_._velocitys.length > 5 && this._ScrV_Props_._velocitys.shift(),
            this._ScrV_Props_._lastTouchPosition.x = e.stageX,
            this._ScrV_Props_._lastTouchPosition.y = e.stageY
        }
        ,
        r.prototype._getContentWidth = function() {
            return this._content.$explicitWidth || this._content.width
        }
        ,
        r.prototype._getContentHeight = function() {
            return this._content.$explicitHeight || this._content.height
        }
        ,
        r.prototype.getMaxScrollLeft = function() {
            var t = this._getContentWidth() - this.width;
            return Math.max(0, t)
        }
        ,
        r.prototype.getMaxScrollTop = function() {
            var t = this._getContentHeight() - this.height;
            return Math.max(0, t)
        }
        ,
        r.prototype._moveAfterTouchEnd = function() {
            if (0 != this._ScrV_Props_._velocitys.length) {
                for (var t = {
                    x: 0,
                    y: 0
                }, e = 0, i = 0; i < this._ScrV_Props_._velocitys.length; i++) {
                    var n = this._ScrV_Props_._velocitys[i]
                      , a = r.weight[i];
                    t.x += n.x * a,
                    t.y += n.y * a,
                    e += a
                }
                this._ScrV_Props_._velocitys.length = 0,
                this.scrollSpeed <= 0 && (this.scrollSpeed = 1);
                var s = t.x / e * this.scrollSpeed
                  , o = t.y / e * this.scrollSpeed
                  , l = Math.abs(s)
                  , h = Math.abs(o)
                  , u = this.getMaxScrollLeft()
                  , c = this.getMaxScrollTop()
                  , f = l > .02 ? this.getAnimationDatas(s, this._ScrV_Props_._scrollLeft, u) : {
                    position: this._ScrV_Props_._scrollLeft,
                    duration: 1
                }
                  , d = h > .02 ? this.getAnimationDatas(o, this._ScrV_Props_._scrollTop, c) : {
                    position: this._ScrV_Props_._scrollTop,
                    duration: 1
                };
                this.setScrollLeft(f.position, f.duration),
                this.setScrollTop(d.position, d.duration)
            }
        }
        ,
        r.prototype.onTweenFinished = function(t) {
            t == this._ScrV_Props_._vScrollTween && (this._ScrV_Props_._isVTweenPlaying = !1),
            t == this._ScrV_Props_._hScrollTween && (this._ScrV_Props_._isHTweenPlaying = !1),
            0 == this._ScrV_Props_._isHTweenPlaying && 0 == this._ScrV_Props_._isVTweenPlaying && this._onScrollFinished()
        }
        ,
        r.prototype._onScrollStarted = function() {}
        ,
        r.prototype._onScrollFinished = function() {
            t.ScrollTween.removeTweens(this),
            this._ScrV_Props_._hScrollTween = null,
            this._ScrV_Props_._vScrollTween = null,
            this._ScrV_Props_._isHTweenPlaying = !1,
            this._ScrV_Props_._isVTweenPlaying = !1,
            this.dispatchEvent(new t.Event(t.Event.COMPLETE))
        }
        ,
        r.prototype.setScrollTop = function(e, r) {
            void 0 === r && (r = 0);
            var i = Math.min(this.getMaxScrollTop(), Math.max(e, 0));
            if (0 == r)
                return void (this.scrollTop = i);
            0 == this._ScrV_Props_._bounces && (e = i);
            var n = t.ScrollTween.get(this).to({
                scrollTop: e
            }, r, t.ScrollEase.quartOut);
            i != e && n.to({
                scrollTop: i
            }, 300, t.ScrollEase.quintOut),
            this._ScrV_Props_._isVTweenPlaying = !0,
            this._ScrV_Props_._vScrollTween = n,
            n.call(this.onTweenFinished, this, [n]),
            this._ScrV_Props_._isHTweenPlaying || this._onScrollStarted()
        }
        ,
        r.prototype.setScrollLeft = function(e, r) {
            void 0 === r && (r = 0);
            var i = Math.min(this.getMaxScrollLeft(), Math.max(e, 0));
            if (0 == r)
                return void (this.scrollLeft = i);
            0 == this._ScrV_Props_._bounces && (e = i);
            var n = t.ScrollTween.get(this).to({
                scrollLeft: e
            }, r, t.ScrollEase.quartOut);
            i != e && n.to({
                scrollLeft: i
            }, 300, t.ScrollEase.quintOut),
            this._ScrV_Props_._isHTweenPlaying = !0,
            this._ScrV_Props_._hScrollTween = n,
            n.call(this.onTweenFinished, this, [n]),
            this._ScrV_Props_._isVTweenPlaying || this._onScrollStarted()
        }
        ,
        r.prototype.getAnimationDatas = function(t, e, r) {
            var i = Math.abs(t)
              , n = .95
              , a = 0
              , s = .998
              , o = .02
              , l = e + 500 * t;
            if (0 > l || l > r)
                for (l = e; Math.abs(t) != 1 / 0 && Math.abs(t) > o; )
                    l += t,
                    t *= 0 > l || l > r ? s * n : s,
                    a++;
            else
                a = 500 * -Math.log(o / i);
            var h = {
                position: Math.min(r + 50, Math.max(l, -50)),
                duration: a
            };
            return h
        }
        ,
        r.prototype.cloneTouchEvent = function(e) {
            var r = new t.TouchEvent(e.type,e.bubbles,e.cancelable);
            return r.touchPointID = e.touchPointID,
            r.$stageX = e.stageX,
            r.$stageY = e.stageY,
            r.touchDown = e.touchDown,
            r.$isDefaultPrevented = !1,
            r.$target = e.target,
            r
        }
        ,
        r.prototype.throwNotSupportedError = function() {
            t.$error(1023)
        }
        ,
        r.prototype.addChild = function(t) {
            return this.throwNotSupportedError(),
            null
        }
        ,
        r.prototype.addChildAt = function(t, e) {
            return this.throwNotSupportedError(),
            null
        }
        ,
        r.prototype.removeChild = function(t) {
            return this.throwNotSupportedError(),
            null
        }
        ,
        r.prototype.removeChildAt = function(t) {
            return this.throwNotSupportedError(),
            null
        }
        ,
        r.prototype.setChildIndex = function(t, e) {
            this.throwNotSupportedError()
        }
        ,
        r.prototype.swapChildren = function(t, e) {
            this.throwNotSupportedError()
        }
        ,
        r.prototype.swapChildrenAt = function(t, e) {
            this.throwNotSupportedError()
        }
        ,
        r.weight = [1, 1.33, 1.66, 2, 2.33],
        r
    }(t.DisplayObjectContainer);
    t.ScrollView = e,
    __reflect(e.prototype, "egret.ScrollView")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function() {
        function e() {
            this._verticalScrollPolicy = "auto",
            this._horizontalScrollPolicy = "auto",
            this._scrollLeft = 0,
            this._scrollTop = 0,
            this._hCanScroll = !1,
            this._vCanScroll = !1,
            this._lastTouchPosition = new t.Point(0,0),
            this._touchStartPosition = new t.Point(0,0),
            this._scrollStarted = !1,
            this._lastTouchTime = 0,
            this._lastTouchEvent = null,
            this._velocitys = [],
            this._isHTweenPlaying = !1,
            this._isVTweenPlaying = !1,
            this._hScrollTween = null,
            this._vScrollTween = null,
            this._bounces = !0
        }
        return e
    }();
    t.ScrollViewProperties = e,
    __reflect(e.prototype, "egret.ScrollViewProperties")
}(egret || (egret = {}));
var egret;
!function(t) {
    function e(e) {
        var r = e.url;
        return -1 == r.indexOf("?") && e.method == t.URLRequestMethod.GET && e.data && e.data instanceof t.URLVariables && (r = r + "?" + e.data.toString()),
        r
    }
    var r = function(r) {
        function i(e) {
            void 0 === e && (e = null);
            var i = r.call(this) || this;
            return i.dataFormat = t.URLLoaderDataFormat.TEXT,
            i.data = null,
            i._request = null,
            i._status = -1,
            e && i.load(e),
            i
        }
        return __extends(i, r),
        i.prototype.load = function(r) {
            this._request = r,
            this.data = null;
            var i = this;
            if (i.dataFormat == t.URLLoaderDataFormat.TEXTURE)
                return void this.loadTexture(i);
            if (i.dataFormat == t.URLLoaderDataFormat.SOUND)
                return void this.loadSound(i);
            var n = e(r)
              , a = new t.HttpRequest;
            a.open(n, r.method == t.URLRequestMethod.POST ? t.HttpMethod.POST : t.HttpMethod.GET);
            var s;
            if (r.method != t.URLRequestMethod.GET && r.data)
                if (r.data instanceof t.URLVariables) {
                    a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    var o = r.data;
                    s = o.toString()
                } else
                    a.setRequestHeader("Content-Type", "multipart/form-data"),
                    s = r.data;
            for (var l = r.requestHeaders.length, h = 0; l > h; h++) {
                var u = r.requestHeaders[h];
                a.setRequestHeader(u.name, u.value)
            }
            a.addEventListener(t.Event.COMPLETE, function() {
                i.data = a.response,
                t.Event.dispatchEvent(i, t.Event.COMPLETE)
            }, this),
            a.addEventListener(t.IOErrorEvent.IO_ERROR, function() {
                t.IOErrorEvent.dispatchIOErrorEvent(i)
            }, this),
            a.responseType = i.dataFormat == t.URLLoaderDataFormat.BINARY ? t.HttpResponseType.ARRAY_BUFFER : t.HttpResponseType.TEXT,
            a.send(s)
        }
        ,
        i.prototype.getResponseType = function(e) {
            switch (e) {
            case t.URLLoaderDataFormat.TEXT:
            case t.URLLoaderDataFormat.VARIABLES:
                return t.URLLoaderDataFormat.TEXT;
            case t.URLLoaderDataFormat.BINARY:
                return "arraybuffer";
            default:
                return e
            }
        }
        ,
        i.prototype.loadSound = function(e) {
            function r(t) {
                e.dispatchEvent(t)
            }
            function i(t) {
                a(),
                e.dispatchEvent(t)
            }
            function n(r) {
                a(),
                e.data = l,
                window.setTimeout(function() {
                    e.dispatchEventWith(t.Event.COMPLETE)
                }, 0)
            }
            function a() {
                l.removeEventListener(t.Event.COMPLETE, n, s),
                l.removeEventListener(t.IOErrorEvent.IO_ERROR, i, s),
                l.removeEventListener(t.ProgressEvent.PROGRESS, r, s)
            }
            var s = this
              , o = e._request.url
              , l = new t.Sound;
            l.addEventListener(t.Event.COMPLETE, n, s),
            l.addEventListener(t.IOErrorEvent.IO_ERROR, i, s),
            l.addEventListener(t.ProgressEvent.PROGRESS, r, s),
            l.load(o)
        }
        ,
        i.prototype.loadTexture = function(e) {
            function r(t) {
                e.dispatchEvent(t)
            }
            function i(t) {
                a(),
                e.dispatchEvent(t)
            }
            function n(r) {
                a();
                var i = l.data;
                i.source.setAttribute("bitmapSrc", o);
                var n = new t.Texture;
                n._setBitmapData(i),
                e.data = n,
                window.setTimeout(function() {
                    e.dispatchEventWith(t.Event.COMPLETE)
                }, s)
            }
            function a() {
                l.removeEventListener(t.Event.COMPLETE, n, s),
                l.removeEventListener(t.IOErrorEvent.IO_ERROR, i, s),
                l.removeEventListener(t.ProgressEvent.PROGRESS, r, s)
            }
            var s = this
              , o = e._request.url
              , l = new t.ImageLoader;
            l.addEventListener(t.Event.COMPLETE, n, s),
            l.addEventListener(t.IOErrorEvent.IO_ERROR, i, s),
            l.addEventListener(t.ProgressEvent.PROGRESS, r, s),
            l.load(o)
        }
        ,
        i.prototype.__recycle = function() {
            this._request = null,
            this.data = null
        }
        ,
        i
    }(t.EventDispatcher);
    t.URLLoader = r,
    __reflect(r.prototype, "egret.URLLoader")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(r) {
            var i = e.call(this) || this;
            return i.$texture = null,
            i.offsetPoint = t.Point.create(0, 0),
            i.$movieClipData = null,
            i.frames = null,
            i.$totalFrames = 0,
            i.frameLabels = null,
            i.$frameLabelStart = 0,
            i.$frameLabelEnd = 0,
            i.frameEvents = null,
            i.frameIntervalTime = 0,
            i.$eventPool = null,
            i.$isPlaying = !1,
            i.isStopped = !0,
            i.playTimes = 0,
            i.$currentFrameNum = 0,
            i.$nextFrameNum = 1,
            i.displayedKeyFrameNum = 0,
            i.passedTime = 0,
            i.$frameRate = 0 / 0,
            i.lastTime = 0,
            i.$smoothing = t.Bitmap.defaultSmoothing,
            i.setMovieClipData(r),
            t.nativeRender || (i.$renderNode = new t.sys.NormalBitmapNode),
            i
        }
        return __extends(r, e),
        r.prototype.createNativeDisplayObject = function() {
            this.$nativeDisplayObject = new egret_native.NativeDisplayObject(11)
        }
        ,
        Object.defineProperty(r.prototype, "smoothing", {
            get: function() {
                return this.$smoothing
            },
            set: function(t) {
                t != this.$smoothing && (this.$smoothing = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.$init = function() {
            this.$reset();
            var t = this.$movieClipData;
            t && t.$isDataValid() && (this.frames = t.frames,
            this.$totalFrames = t.numFrames,
            this.frameLabels = t.labels,
            this.frameEvents = t.events,
            this.$frameRate = t.frameRate,
            this.frameIntervalTime = 1e3 / this.$frameRate,
            this._initFrame())
        }
        ,
        r.prototype.$reset = function() {
            this.frames = null,
            this.playTimes = 0,
            this.$isPlaying = !1,
            this.setIsStopped(!0),
            this.$currentFrameNum = 0,
            this.$nextFrameNum = 1,
            this.displayedKeyFrameNum = 0,
            this.passedTime = 0,
            this.$eventPool = []
        }
        ,
        r.prototype._initFrame = function() {
            this.$movieClipData.$isTextureValid() && (this.advanceFrame(),
            this.constructFrame())
        }
        ,
        r.prototype.$updateRenderNode = function() {
            var e = this.$texture;
            if (e) {
                var r = Math.round(this.offsetPoint.x)
                  , i = Math.round(this.offsetPoint.y)
                  , n = e.$bitmapWidth
                  , a = e.$bitmapHeight
                  , s = e.$getTextureWidth()
                  , o = e.$getTextureHeight()
                  , l = Math.round(e.$getScaleBitmapWidth())
                  , h = Math.round(e.$getScaleBitmapHeight())
                  , u = e.$sourceWidth
                  , c = e.$sourceHeight;
                t.sys.BitmapNode.$updateTextureData(this.$renderNode, e.$bitmapData, e.$bitmapX, e.$bitmapY, n, a, r, i, s, o, l, h, u, c, t.BitmapFillMode.SCALE, this.$smoothing)
            }
        }
        ,
        r.prototype.$measureContentBounds = function(t) {
            var e = this.$texture;
            if (e) {
                var r = this.offsetPoint.x
                  , i = this.offsetPoint.y
                  , n = e.$getTextureWidth()
                  , a = e.$getTextureHeight();
                t.setTo(r, i, n, a)
            } else
                t.setEmpty()
        }
        ,
        r.prototype.$onAddToStage = function(t, r) {
            e.prototype.$onAddToStage.call(this, t, r),
            this.$isPlaying && this.$totalFrames > 1 && this.setIsStopped(!1)
        }
        ,
        r.prototype.$onRemoveFromStage = function() {
            e.prototype.$onRemoveFromStage.call(this),
            this.setIsStopped(!0)
        }
        ,
        r.prototype.getFrameLabelByName = function(t, e) {
            void 0 === e && (e = !1),
            e && (t = t.toLowerCase());
            var r = this.frameLabels;
            if (r)
                for (var i = null, n = 0; n < r.length; n++)
                    if (i = r[n],
                    e ? i.name.toLowerCase() == t : i.name == t)
                        return i;
            return null
        }
        ,
        r.prototype.getFrameStartEnd = function(t) {
            var e = this.frameLabels;
            if (e)
                for (var r = null, i = 0; i < e.length; i++)
                    if (r = e[i],
                    t == r.name) {
                        this.$frameLabelStart = r.frame,
                        this.$frameLabelEnd = r.end;
                        break
                    }
        }
        ,
        r.prototype.getFrameLabelByFrame = function(t) {
            var e = this.frameLabels;
            if (e)
                for (var r = null, i = 0; i < e.length; i++)
                    if (r = e[i],
                    r.frame == t)
                        return r;
            return null
        }
        ,
        r.prototype.getFrameLabelForFrame = function(t) {
            var e = null
              , r = null
              , i = this.frameLabels;
            if (i)
                for (var n = 0; n < i.length; n++) {
                    if (r = i[n],
                    r.frame > t)
                        return e;
                    e = r
                }
            return e
        }
        ,
        r.prototype.play = function(e) {
            void 0 === e && (e = 0),
            this.lastTime = t.getTimer(),
            this.passedTime = 0,
            this.$isPlaying = !0,
            this.setPlayTimes(e),
            this.$totalFrames > 1 && this.$stage && this.setIsStopped(!1)
        }
        ,
        r.prototype.stop = function() {
            this.$isPlaying = !1,
            this.setIsStopped(!0)
        }
        ,
        r.prototype.prevFrame = function() {
            this.gotoAndStop(this.$currentFrameNum - 1)
        }
        ,
        r.prototype.nextFrame = function() {
            this.gotoAndStop(this.$currentFrameNum + 1)
        }
        ,
        r.prototype.gotoAndPlay = function(e, r) {
            void 0 === r && (r = 0),
            (0 == arguments.length || arguments.length > 2) && t.$error(1022, "MovieClip.gotoAndPlay()"),
            "string" == typeof e ? this.getFrameStartEnd(e) : (this.$frameLabelStart = 0,
            this.$frameLabelEnd = 0),
            this.play(r),
            this.gotoFrame(e)
        }
        ,
        r.prototype.gotoAndStop = function(e) {
            1 != arguments.length && t.$error(1022, "MovieClip.gotoAndStop()"),
            this.stop(),
            this.gotoFrame(e)
        }
        ,
        r.prototype.gotoFrame = function(e) {
            var r;
            "string" == typeof e ? r = this.getFrameLabelByName(e).frame : (r = parseInt(e + "", 10),
            r != e && t.$error(1022, "Frame Label Not Found")),
            1 > r ? r = 1 : r > this.$totalFrames && (r = this.$totalFrames),
            r != this.$nextFrameNum && (this.$nextFrameNum = r,
            this.advanceFrame(),
            this.constructFrame(),
            this.handlePendingEvent())
        }
        ,
        r.prototype.advanceTime = function(e) {
            var r = this
              , i = e - r.lastTime;
            r.lastTime = e;
            var n = r.frameIntervalTime
              , a = r.passedTime + i;
            r.passedTime = a % n;
            var s = a / n;
            if (1 > s)
                return !1;
            for (; s >= 1; ) {
                if (s--,
                r.$nextFrameNum++,
                r.$nextFrameNum > r.$totalFrames || r.$frameLabelStart > 0 && r.$nextFrameNum > r.$frameLabelEnd)
                    if (-1 == r.playTimes)
                        r.$eventPool.push(t.Event.LOOP_COMPLETE),
                        r.$nextFrameNum = 1;
                    else {
                        if (r.playTimes--,
                        !(r.playTimes > 0)) {
                            r.$nextFrameNum = r.$totalFrames,
                            r.$eventPool.push(t.Event.COMPLETE),
                            r.stop();
                            break
                        }
                        r.$eventPool.push(t.Event.LOOP_COMPLETE),
                        r.$nextFrameNum = 1
                    }
                r.$currentFrameNum == r.$frameLabelEnd && (r.$nextFrameNum = r.$frameLabelStart),
                r.advanceFrame()
            }
            return r.constructFrame(),
            r.handlePendingEvent(),
            !1
        }
        ,
        r.prototype.advanceFrame = function() {
            this.$currentFrameNum = this.$nextFrameNum;
            var e = this.frameEvents[this.$nextFrameNum];
            e && "" != e && t.MovieClipEvent.dispatchMovieClipEvent(this, t.MovieClipEvent.FRAME_LABEL, e)
        }
        ,
        r.prototype.constructFrame = function() {
            var e = this
              , r = e.$currentFrameNum;
            if (e.displayedKeyFrameNum != r) {
                var i = e.$movieClipData.getTextureByFrame(r);
                if (e.$texture = i,
                e.$movieClipData.$getOffsetByFrame(r, e.offsetPoint),
                e.displayedKeyFrameNum = r,
                e.$renderDirty = !0,
                t.nativeRender)
                    e.$nativeDisplayObject.setDataToBitmapNode(e.$nativeDisplayObject.id, i, [i.$bitmapX, i.$bitmapY, i.$bitmapWidth, i.$bitmapHeight, e.offsetPoint.x, e.offsetPoint.y, i.$getScaleBitmapWidth(), i.$getScaleBitmapHeight(), i.$sourceWidth, i.$sourceHeight]),
                    e.$nativeDisplayObject.setWidth(i.$getTextureWidth() + e.offsetPoint.x),
                    e.$nativeDisplayObject.setHeight(i.$getTextureHeight() + e.offsetPoint.y);
                else {
                    var n = e.$parent;
                    n && !n.$cacheDirty && (n.$cacheDirty = !0,
                    n.$cacheDirtyUp());
                    var a = e.$maskedObject;
                    a && !a.$cacheDirty && (a.$cacheDirty = !0,
                    a.$cacheDirtyUp())
                }
            }
        }
        ,
        r.prototype.$renderFrame = function() {
            var t = this;
            t.$texture = t.$movieClipData.getTextureByFrame(t.$currentFrameNum),
            t.$renderDirty = !0;
            var e = t.$parent;
            e && !e.$cacheDirty && (e.$cacheDirty = !0,
            e.$cacheDirtyUp());
            var r = t.$maskedObject;
            r && !r.$cacheDirty && (r.$cacheDirty = !0,
            r.$cacheDirtyUp())
        }
        ,
        r.prototype.handlePendingEvent = function() {
            if (0 != this.$eventPool.length) {
                this.$eventPool.reverse();
                for (var e = this.$eventPool, r = e.length, i = !1, n = !1, a = 0; r > a; a++) {
                    var s = e.pop();
                    s == t.Event.LOOP_COMPLETE ? n = !0 : s == t.Event.COMPLETE ? i = !0 : this.dispatchEventWith(s)
                }
                n && this.dispatchEventWith(t.Event.LOOP_COMPLETE),
                i && this.dispatchEventWith(t.Event.COMPLETE)
            }
        }
        ,
        Object.defineProperty(r.prototype, "totalFrames", {
            get: function() {
                return this.$totalFrames
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "currentFrame", {
            get: function() {
                return this.$currentFrameNum
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "currentFrameLabel", {
            get: function() {
                var t = this.getFrameLabelByFrame(this.$currentFrameNum);
                return t && t.name
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "currentLabel", {
            get: function() {
                var t = this.getFrameLabelForFrame(this.$currentFrameNum);
                return t ? t.name : null
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "frameRate", {
            get: function() {
                return this.$frameRate
            },
            set: function(t) {
                t != this.$frameRate && (this.$frameRate = t,
                this.frameIntervalTime = 1e3 / this.$frameRate)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "isPlaying", {
            get: function() {
                return this.$isPlaying
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "movieClipData", {
            get: function() {
                return this.$movieClipData
            },
            set: function(t) {
                this.setMovieClipData(t)
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.setMovieClipData = function(t) {
            this.$movieClipData != t && (this.$movieClipData = t,
            this.$init())
        }
        ,
        r.prototype.setPlayTimes = function(t) {
            (0 > t || t >= 1) && (this.playTimes = 0 > t ? -1 : Math.floor(t))
        }
        ,
        r.prototype.setIsStopped = function(e) {
            this.isStopped != e && (this.isStopped = e,
            e ? t.ticker.$stopTick(this.advanceTime, this) : (this.playTimes = 0 == this.playTimes ? 1 : this.playTimes,
            this.lastTime = t.getTimer(),
            t.ticker.$startTick(this.advanceTime, this)))
        }
        ,
        r
    }(t.DisplayObject);
    t.MovieClip = e,
    __reflect(e.prototype, "egret.MovieClip")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r(r) {
            void 0 === r && (r = null);
            var i = e.call(this) || this;
            return i.data = null,
            i.method = t.URLRequestMethod.GET,
            i.url = "",
            i.requestHeaders = [],
            i.url = r,
            i
        }
        return __extends(r, e),
        r
    }(t.HashObject);
    t.URLRequest = e,
    __reflect(e.prototype, "egret.URLRequest")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function() {
        function t(t, e) {
            this.name = "",
            this.value = "",
            this.name = t,
            this.value = e
        }
        return t
    }();
    t.URLRequestHeader = e,
    __reflect(e.prototype, "egret.URLRequestHeader")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function() {
        function t() {}
        return t.GET = "get",
        t.POST = "post",
        t
    }();
    t.URLRequestMethod = e,
    __reflect(e.prototype, "egret.URLRequestMethod")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(t) {
        function e(e) {
            void 0 === e && (e = null);
            var r = t.call(this) || this;
            return r.variables = null,
            null !== e && r.decode(e),
            r
        }
        return __extends(e, t),
        e.prototype.decode = function(t) {
            this.variables || (this.variables = {}),
            t = t.split("+").join(" ");
            for (var e, r = /[?&]?([^=]+)=([^&]*)/g; e = r.exec(t); ) {
                var i = decodeURIComponent(e[1])
                  , n = decodeURIComponent(e[2]);
                if (i in this.variables != 0) {
                    var a = this.variables[i];
                    a instanceof Array ? a.push(n) : this.variables[i] = [a, n]
                } else
                    this.variables[i] = n
            }
        }
        ,
        e.prototype.toString = function() {
            if (!this.variables)
                return "";
            var t = this.variables
              , e = [];
            for (var r in t)
                e.push(this.encodeValue(r, t[r]));
            return e.join("&")
        }
        ,
        e.prototype.encodeValue = function(t, e) {
            return e instanceof Array ? this.encodeArray(t, e) : encodeURIComponent(t) + "=" + encodeURIComponent(e)
        }
        ,
        e.prototype.encodeArray = function(t, e) {
            return t ? 0 == e.length ? encodeURIComponent(t) + "=" : e.map(function(e) {
                return encodeURIComponent(t) + "=" + encodeURIComponent(e)
            }).join("&") : ""
        }
        ,
        e
    }(t.HashObject);
    t.URLVariables = e,
    __reflect(e.prototype, "egret.URLVariables")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r() {
            var i = e.call(this) || this;
            return i._timeScale = 1,
            i._paused = !1,
            i._callIndex = -1,
            i._lastTime = 0,
            i.callBackList = [],
            null != r.instance,
            t.ticker.$startTick(i.update, i),
            i._lastTime = t.getTimer(),
            i
        }
        return __extends(r, e),
        r.prototype.update = function(t) {
            var e = t - this._lastTime;
            if (this._lastTime = t,
            this._paused)
                return !1;
            var r = e * this._timeScale;
            for (this._callList = this.callBackList.concat(),
            this._callIndex = 0; this._callIndex < this._callList.length; this._callIndex++) {
                var i = this._callList[this._callIndex];
                i.listener.call(i.thisObject, r)
            }
            return this._callIndex = -1,
            this._callList = null,
            !1
        }
        ,
        r.prototype.register = function(t, e, r) {
            void 0 === r && (r = 0),
            this.$insertEventBin(this.callBackList, "", t, e, !1, r, !1)
        }
        ,
        r.prototype.unregister = function(t, e) {
            this.$removeEventBin(this.callBackList, t, e)
        }
        ,
        r.prototype.setTimeScale = function(t) {
            this._timeScale = t
        }
        ,
        r.prototype.getTimeScale = function() {
            return this._timeScale
        }
        ,
        r.prototype.pause = function() {
            this._paused = !0
        }
        ,
        r.prototype.resume = function() {
            this._paused = !1
        }
        ,
        r.getInstance = function() {
            return null == r.instance && (r.instance = new r),
            r.instance
        }
        ,
        r
    }(t.EventDispatcher);
    t.Ticker = e,
    __reflect(e.prototype, "egret.Ticker")
}(egret || (egret = {}));
var egret;
!function(t) {
    var e = function(e) {
        function r() {
            return e.call(this) || this
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "stage", {
            get: function() {
                return t.sys.$TempStage
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "instance", {
            get: function() {
                return null == r._instance && (r._instance = new r),
                r._instance
            },
            enumerable: !0,
            configurable: !0
        }),
        r.deviceType = null,
        r.DEVICE_PC = "web",
        r.DEVICE_MOBILE = "native",
        r
    }(t.EventDispatcher);
    t.MainContext = e,
    __reflect(e.prototype, "egret.MainContext")
}(egret || (egret = {})),
egret.testDeviceType1 = function() {
    if (!window.navigator)
        return !0;
    var t = navigator.userAgent.toLowerCase();
    return -1 != t.indexOf("mobile") || -1 != t.indexOf("android")
}
,
egret.MainContext.deviceType = egret.testDeviceType1() ? egret.MainContext.DEVICE_MOBILE : egret.MainContext.DEVICE_PC,
delete egret.testDeviceType1;
var egret;
!function(t) {
    var e = function(e) {
        function r(t) {
            void 0 === t && (t = 300);
            var r = e.call(this) || this;
            return r.objectPool = [],
            r._length = 0,
            1 > t && (t = 1),
            r.autoDisposeTime = t,
            r.frameCount = 0,
            r
        }
        return __extends(r, e),
        r.$init = function() {
            t.ticker.$startTick(r.onUpdate, r)
        }
        ,
        r.onUpdate = function(t) {
            for (var e = r._callBackList, i = e.length - 1; i >= 0; i--)
                e[i].$checkFrame();
            return !1
        }
        ,
        r.prototype.$checkFrame = function() {
            this.frameCount--,
            this.frameCount <= 0 && this.dispose()
        }
        ,
        Object.defineProperty(r.prototype, "length", {
            get: function() {
                return this._length
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.push = function(t) {
            var e = this.objectPool;
            -1 == e.indexOf(t) && (e.push(t),
            t.__recycle && t.__recycle(),
            this._length++,
            0 == this.frameCount && (this.frameCount = this.autoDisposeTime,
            r._callBackList.push(this)))
        }
        ,
        r.prototype.pop = function() {
            return 0 == this._length ? null : (this._length--,
            this.objectPool.pop())
        }
        ,
        r.prototype.dispose = function() {
            this._length > 0 && (this.objectPool = [],
            this._length = 0),
            this.frameCount = 0;
            var t = r._callBackList
              , e = t.indexOf(this);
            -1 != e && t.splice(e, 1)
        }
        ,
        r._callBackList = [],
        r
    }(t.HashObject);
    t.Recycler = e,
    __reflect(e.prototype, "egret.Recycler"),
    e.$init()
}(egret || (egret = {}));
var egret;
!function(t) {
    function e(e, r, l) {
        for (var h = [], u = 3; u < arguments.length; u++)
            h[u - 3] = arguments[u];
        var c = {
            listener: e,
            thisObject: r,
            delay: l,
            originDelay: l,
            params: h
        };
        return s++,
        1 == s && (o = t.getTimer(),
        t.ticker.$startTick(i, null)),
        a++,
        n[a] = c,
        a
    }
    function r(e) {
        n[e] && (s--,
        delete n[e],
        0 == s && t.ticker.$stopTick(i, null))
    }
    function i(t) {
        var e = t - o;
        o = t;
        for (var r in n) {
            var i = n[r];
            i.delay -= e,
            i.delay <= 0 && (i.delay = i.originDelay,
            i.listener.apply(i.thisObject, i.params))
        }
        return !1
    }
    var n = {}
      , a = 0
      , s = 0
      , o = 0;
    t.setInterval = e,
    t.clearInterval = r
}(egret || (egret = {}));
var egret;
!function(t) {
    function e(e, r, l) {
        for (var h = [], u = 3; u < arguments.length; u++)
            h[u - 3] = arguments[u];
        var c = {
            listener: e,
            thisObject: r,
            delay: l,
            params: h
        };
        return s++,
        1 == s && t.ticker && (o = t.getTimer(),
        t.ticker.$startTick(i, null)),
        a++,
        n[a] = c,
        a
    }
    function r(e) {
        n[e] && (s--,
        delete n[e],
        0 == s && t.ticker && t.ticker.$stopTick(i, null))
    }
    function i(t) {
        var e = t - o;
        o = t;
        for (var i in n) {
            var a = i
              , s = n[a];
            s.delay -= e,
            s.delay <= 0 && (r(a),
            s.listener.apply(s.thisObject, s.params))
        }
        return !1
    }
    var n = {}
      , a = 0
      , s = 0
      , o = 0;
    t.setTimeout = e,
    t.clearTimeout = r
}(egret || (egret = {})),
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.ES6Promise = e()
}(this, function() {
    "use strict";
    function t(t) {
        return "function" == typeof t || "object" == typeof t && null !== t
    }
    function e(t) {
        return "function" == typeof t
    }
    function r(t) {
        H = t
    }
    function i(t) {
        Y = t
    }
    function n() {
        return function() {
            return process.nextTick(h)
        }
    }
    function a() {
        return "undefined" != typeof W ? function() {
            W(h)
        }
        : l()
    }
    function s() {
        var t = 0
          , e = new q(h)
          , r = document.createTextNode("");
        return e.observe(r, {
            characterData: !0
        }),
        function() {
            r.data = t = ++t % 2
        }
    }
    function o() {
        var t = new MessageChannel;
        return t.port1.onmessage = h,
        function() {
            return t.port2.postMessage(0)
        }
    }
    function l() {
        var t = setTimeout;
        return function() {
            return t(h, 1)
        }
    }
    function h() {
        for (var t = 0; G > t; t += 2) {
            var e = Q[t]
              , r = Q[t + 1];
            e(r),
            Q[t] = void 0,
            Q[t + 1] = void 0
        }
        G = 0
    }
    function u() {
        try {
            var t = require
              , e = t("vertx");
            return W = e.runOnLoop || e.runOnContext,
            a()
        } catch (r) {
            return l()
        }
    }
    function c(t, e) {
        var r = arguments
          , i = this
          , n = new this.constructor(d);
        void 0 === n[ee] && I(n);
        var a = i._state;
        return a ? !function() {
            var t = r[a - 1];
            Y(function() {
                return C(a, n, t, i._result)
            })
        }() : E(i, n, t, e),
        n
    }
    function f(t) {
        var e = this;
        if (t && "object" == typeof t && t.constructor === e)
            return t;
        var r = new e(d);
        return w(r, t),
        r
    }
    function d() {}
    function p() {
        return new TypeError("You cannot resolve a promise with itself")
    }
    function _() {
        return new TypeError("A promises callback cannot return that same promise.")
    }
    function m(t) {
        try {
            return t.then
        } catch (e) {
            return ae.error = e,
            ae
        }
    }
    function g(t, e, r, i) {
        try {
            t.call(e, r, i)
        } catch (n) {
            return n
        }
    }
    function y(t, e, r) {
        Y(function(t) {
            var i = !1
              , n = g(r, e, function(r) {
                i || (i = !0,
                e !== r ? w(t, r) : D(t, r))
            }, function(e) {
                i || (i = !0,
                S(t, e))
            }, "Settle: " + (t._label || " unknown promise"));
            !i && n && (i = !0,
            S(t, n))
        }, t)
    }
    function v(t, e) {
        e._state === ie ? D(t, e._result) : e._state === ne ? S(t, e._result) : E(e, void 0, function(e) {
            return w(t, e)
        }, function(e) {
            return S(t, e)
        })
    }
    function b(t, r, i) {
        r.constructor === t.constructor && i === c && r.constructor.resolve === f ? v(t, r) : i === ae ? S(t, ae.error) : void 0 === i ? D(t, r) : e(i) ? y(t, r, i) : D(t, r)
    }
    function w(e, r) {
        e === r ? S(e, p()) : t(r) ? b(e, r, m(r)) : D(e, r)
    }
    function T(t) {
        t._onerror && t._onerror(t._result),
        A(t)
    }
    function D(t, e) {
        t._state === re && (t._result = e,
        t._state = ie,
        0 !== t._subscribers.length && Y(A, t))
    }
    function S(t, e) {
        t._state === re && (t._state = ne,
        t._result = e,
        Y(T, t))
    }
    function E(t, e, r, i) {
        var n = t._subscribers
          , a = n.length;
        t._onerror = null,
        n[a] = e,
        n[a + ie] = r,
        n[a + ne] = i,
        0 === a && t._state && Y(A, t)
    }
    function A(t) {
        var e = t._subscribers
          , r = t._state;
        if (0 !== e.length) {
            for (var i = void 0, n = void 0, a = t._result, s = 0; s < e.length; s += 3)
                i = e[s],
                n = e[s + r],
                i ? C(r, i, n, a) : n(a);
            t._subscribers.length = 0
        }
    }
    function x() {
        this.error = null
    }
    function P(t, e) {
        try {
            return t(e)
        } catch (r) {
            return se.error = r,
            se
        }
    }
    function C(t, r, i, n) {
        var a = e(i)
          , s = void 0
          , o = void 0
          , l = void 0
          , h = void 0;
        if (a) {
            if (s = P(i, n),
            s === se ? (h = !0,
            o = s.error,
            s = null) : l = !0,
            r === s)
                return void S(r, _())
        } else
            s = n,
            l = !0;
        r._state !== re || (a && l ? w(r, s) : h ? S(r, o) : t === ie ? D(r, s) : t === ne && S(r, s))
    }
    function O(t, e) {
        try {
            e(function(e) {
                w(t, e)
            }, function(e) {
                S(t, e)
            })
        } catch (r) {
            S(t, r)
        }
    }
    function k() {
        return oe++
    }
    function I(t) {
        t[ee] = oe++,
        t._state = void 0,
        t._result = void 0,
        t._subscribers = []
    }
    function R(t, e) {
        this._instanceConstructor = t,
        this.promise = new t(d),
        this.promise[ee] || I(this.promise),
        $(e) ? (this._input = e,
        this.length = e.length,
        this._remaining = e.length,
        this._result = new Array(this.length),
        0 === this.length ? D(this.promise, this._result) : (this.length = this.length || 0,
        this._enumerate(),
        0 === this._remaining && D(this.promise, this._result))) : S(this.promise, B())
    }
    function B() {
        return new Error("Array Methods must be provided an Array")
    }
    function M(t) {
        return new R(this,t).promise
    }
    function F(t) {
        var e = this;
        return new e($(t) ? function(r, i) {
            for (var n = t.length, a = 0; n > a; a++)
                e.resolve(t[a]).then(r, i)
        }
        : function(t, e) {
            return e(new TypeError("You must pass an array to race."))
        }
        )
    }
    function L(t) {
        var e = this
          , r = new e(d);
        return S(r, t),
        r
    }
    function N() {
        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
    }
    function j() {
        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
    }
    function z(t) {
        this[ee] = k(),
        this._result = this._state = void 0,
        this._subscribers = [],
        d !== t && ("function" != typeof t && N(),
        this instanceof z ? O(this, t) : j())
    }
    function U() {
        var t = void 0;
        if ("undefined" != typeof global)
            t = global;
        else if ("undefined" != typeof self)
            t = self;
        else
            try {
                t = Function("return this")()
            } catch (e) {
                throw new Error("polyfill failed because global object is unavailable in this environment")
            }
        var r = t.Promise;
        if ("undefined" != typeof egret_native && egret_native.capability && !egret_native.capability("Promise") && (r = void 0),
        r) {
            var i = null;
            try {
                i = Object.prototype.toString.call(r.resolve())
            } catch (e) {}
            if ("[object Promise]" === i && !r.cast)
                return
        }
        t.Promise = z
    }
    var V = void 0;
    V = Array.isArray ? Array.isArray : function(t) {
        return "[object Array]" === Object.prototype.toString.call(t)
    }
    ;
    var $ = V
      , G = 0
      , W = void 0
      , H = void 0
      , Y = function(t, e) {
        Q[G] = t,
        Q[G + 1] = e,
        G += 2,
        2 === G && (H ? H(h) : te())
    }
      , X = "undefined" != typeof window ? window : void 0
      , Z = X || {}
      , q = Z.MutationObserver || Z.WebKitMutationObserver
      , K = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process)
      , J = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel
      , Q = new Array(1e3)
      , te = void 0;
    te = K ? n() : q ? s() : J ? o() : void 0 === X && "function" == typeof require ? u() : l();
    var ee = Math.random().toString(36).substring(16)
      , re = void 0
      , ie = 1
      , ne = 2
      , ae = new x
      , se = new x
      , oe = 0;
    return R.prototype._enumerate = function() {
        for (var t = this.length, e = this._input, r = 0; this._state === re && t > r; r++)
            this._eachEntry(e[r], r)
    }
    ,
    R.prototype._eachEntry = function(t, e) {
        var r = this._instanceConstructor
          , i = r.resolve;
        if (i === f) {
            var n = m(t);
            if (n === c && t._state !== re)
                this._settledAt(t._state, e, t._result);
            else if ("function" != typeof n)
                this._remaining--,
                this._result[e] = t;
            else if (r === z) {
                var a = new r(d);
                b(a, t, n),
                this._willSettleAt(a, e)
            } else
                this._willSettleAt(new r(function(e) {
                    return e(t)
                }
                ), e)
        } else
            this._willSettleAt(i(t), e)
    }
    ,
    R.prototype._settledAt = function(t, e, r) {
        var i = this.promise;
        i._state === re && (this._remaining--,
        t === ne ? S(i, r) : this._result[e] = r),
        0 === this._remaining && D(i, this._result)
    }
    ,
    R.prototype._willSettleAt = function(t, e) {
        var r = this;
        E(t, void 0, function(t) {
            return r._settledAt(ie, e, t)
        }, function(t) {
            return r._settledAt(ne, e, t)
        })
    }
    ,
    z.all = M,
    z.race = F,
    z.resolve = f,
    z.reject = L,
    z._setScheduler = r,
    z._setAsap = i,
    z._asap = Y,
    z.prototype = {
        constructor: z,
        then: c,
        "catch": function(t) {
            return this.then(null, t)
        }
    },
    z.polyfill = U,
    z.Promise = z,
    z
}),
ES6Promise.polyfill();
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, LibCore;
!function(t) {
    var e = function(e) {
        function r(r, i) {
            void 0 === r && (r = 0),
            void 0 === i && (i = null);
            var n = e.call(this) || this;
            n._channel = 0,
            n._isRemoved = !0,
            n._eid = r,
            n._className = t.RpcDef.getEntityClassName(n),
            n._propDefs = t.RpcDef.getClassProps(n._className);
            var a = {};
            if (i)
                for (; t.ByteArrayUtils.readAvailable(i) > 0; ) {
                    var s = t.RpcType.vintReader(i)
                      , o = n._propDefs[s];
                    if (!o) {
                        t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog(n + " initial property not defined: " + s);
                        break
                    }
                    a[o.name] = o.reader(i)
                }
            for (var l in n._propDefs)
                parseInt(l).toString() != l && (n[l] = l in a ? a[l] : n._propDefs[l].defVal);
            return n
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "channel", {
            get: function() {
                return this._channel
            },
            set: function(t) {
                this._channel != t && (this._channel = t,
                this.onChannelChange())
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "eid", {
            get: function() {
                return this._eid
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "className", {
            get: function() {
                return this._className
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "isRemoved", {
            get: function() {
                return this._isRemoved
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.readProp = function(e, r) {
            void 0 === r && (r = !1);
            var i = t.RpcType.vintReader(e)
              , n = this._propDefs[i];
            if (!n)
                return t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog(this + " property not defined: " + i),
                void n.reader(e);
            var a = n.reader(e);
            r && t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Read property: " + this + "." + n.name + " = " + a),
            this.setProp(n.name, a)
        }
        ,
        r.prototype.setProp = function(t, e) {
            var r = this[t];
            e != r && (this[t] = e,
            this.onPropChange(t, r))
        }
        ,
        r.prototype.onAdd = function() {
            this._isRemoved = !1
        }
        ,
        r.prototype.onRemove = function() {
            this._isRemoved = !0
        }
        ,
        r.prototype.onChannelChange = function() {}
        ,
        r.prototype.onPropChange = function(t, e) {}
        ,
        r.prototype.toString = function() {
            return "<Entity " + this._className + "[" + this._channel + "] eid=" + this._eid + ">"
        }
        ,
        r
    }(egret.EventDispatcher);
    t.Entity = e,
    __reflect(e.prototype, "LibCore.Entity")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r() {
            var r = null !== e && e.apply(this, arguments) || this;
            return r._content = new t.ByteArrayLittle,
            r
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "content", {
            get: function() {
                return this._content
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.read = function(e, r) {
            return this.content.length = r,
            e.readBytes(this.content, 0, r),
            this.content.position = 0,
            this.readContent() ? !0 : (t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Read packet content error: " + this),
            !1)
        }
        ,
        r.prototype.write = function() {
            if (this.content.length = 0,
            !this.writeContent())
                return t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Write packet content error: " + this),
                0;
            var e = this.content.length;
            return 0 == e && t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Write packet empty: " + this),
            e
        }
        ,
        r.prototype.readContent = function() {
            return !0
        }
        ,
        r.prototype.writeContent = function() {
            return !0
        }
        ,
        r.prototype.handle = function() {}
        ,
        r.prototype.toString = function() {
            return "<Packet len=" + this.content.length + ">"
        }
        ,
        r
    }(egret.HashObject);
    t.Packet = e,
    __reflect(e.prototype, "LibCore.Packet")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    t.functor = function(t, e) {
        void 0 === e && (e = null);
        for (var r = [], i = 2; i < arguments.length; i++)
            r[i - 2] = arguments[i];
        return function() {
            for (var i = [], n = 0; n < arguments.length; n++)
                i[n] = arguments[n];
            return t.apply(e || this, r)
        }
    }
    ,
    t.functorLeft = function(t, e) {
        void 0 === e && (e = null);
        for (var r = [], i = 2; i < arguments.length; i++)
            r[i - 2] = arguments[i];
        return function() {
            for (var i = [], n = 0; n < arguments.length; n++)
                i[n] = arguments[n];
            return t.apply(e || this, r.concat(i))
        }
    }
    ,
    t.functorRight = function(t, e) {
        void 0 === e && (e = null);
        for (var r = [], i = 2; i < arguments.length; i++)
            r[i - 2] = arguments[i];
        return function() {
            for (var i = [], n = 0; n < arguments.length; n++)
                i[n] = arguments[n];
            return t.apply(e || this, i.concat(r))
        }
    }
    ,
    t.combineMethods = function() {
        for (var e = [], r = 0; r < arguments.length; r++)
            e[r] = arguments[r];
        return t.functorLeft(t.callMethods, e)
    }
    ,
    t.callMethods = function(t, e) {
        void 0 === e && (e = null);
        for (var r = [], i = 2; i < arguments.length; i++)
            r[i - 2] = arguments[i];
        for (var n = 0, a = t; n < a.length; n++) {
            var s = a[n];
            s && s.apply(e, r)
        }
    }
    ,
    t.iterateCall = function(e, r, i, n) {
        void 0 === r && (r = null),
        void 0 === i && (i = 10),
        void 0 === n && (n = 0);
        for (var a = egret.getTimer(); egret.getTimer() - a < i; )
            if (e(r))
                return;
        setTimeout(t.iterateCall, Math.max(0, a + n - egret.getTimer()), e, r, i, n)
    }
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r() {
            var t = e.call(this) || this;
            return t.endian = egret.Endian.LITTLE_ENDIAN,
            t
        }
        return __extends(r, e),
        r.prototype.toHex = function() {
            return t.ByteArrayUtils.toHex(this, " ", ">>>")
        }
        ,
        r.prototype.toString = function() {
            return "<ByteArrayLittle len=" + this.length + ",pos=" + this.position + ">"
        }
        ,
        r
    }(egret.ByteArray);
    t.ByteArrayLittle = e,
    __reflect(e.prototype, "LibCore.ByteArrayLittle")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function t() {}
        return t.isEqual = function(e, r) {
            var i = e.length;
            if (i != r.length)
                return !1;
            for (var n = t.getBytes(e), a = t.getBytes(r), s = 0; i > s; s++)
                if (n[s] != a[s])
                    return !1;
            return !0
        }
        ,
        t.concat = function(t, e, r) {
            void 0 === r && (r = !1);
            var i = r ? new t.constructor : t
              , n = i.length;
            return i.position = n,
            i.writeBytes(e),
            i
        }
        ,
        t.toHex = function(t, e, r, i, n) {
            if (void 0 === e && (e = " "),
            void 0 === r && (r = ""),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            (i = 0 > i) ? Math.max(0, t.length + i) : Math.min(i, t.length),
            n = Math.min(t.length - i, n || 2147483647),
            n > 0) {
                for (var a = [], s = new Uint8Array(t.buffer), o = 0; n > o; o++) {
                    var l = s[o + i].toString(16);
                    a[o] = (r && o + i == t.position ? r : "") + (1 == l.length ? "0" + l : l)
                }
                return a.join(e)
            }
            return ""
        }
        ,
        t.readAvailable = function(t) {
            return t.length - t.position
        }
        ,
        t.getBytes = function(t) {
            return t.bytes ? t.bytes : new Uint8Array(t.buffer)
        }
        ,
        t
    }();
    t.ByteArrayUtils = e,
    __reflect(e.prototype, "LibCore.ByteArrayUtils")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(t) {
        function e(e, r) {
            void 0 === e && (e = null),
            void 0 === r && (r = 0);
            var i = t.call(this) || this;
            return i._port = 0,
            i.host = "127.0.0.1",
            i.ports = null,
            e && (i.host = e),
            r instanceof Array ? i.ports = r : r && (i.port = r),
            i
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "port", {
            get: function() {
                return !this._port && this.ports && this.ports.length > 0 && (this._port = this.ports[Math.floor(Math.random() * this.ports.length)]),
                this._port
            },
            set: function(t) {
                this._port = t
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.toString = function() {
            return "host=" + this.host + ",port=" + this.port
        }
        ,
        e
    }(egret.HashObject);
    t.ConnectInfo = e,
    __reflect(e.prototype, "LibCore.ConnectInfo")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(r) {
            var i = e.call(this) || this;
            i._addikey = [],
            i._index = 0,
            i._addikey = [],
            i._buffer = new t.ByteArrayLittle,
            i._addikey[0] = new AddiKey,
            i._addikey[0].sd = i.linearity(r),
            i._addikey[0].dis1 = 55,
            i._addikey[0].dis2 = 24,
            i._addikey[1] = new AddiKey,
            i._addikey[1].sd = i.linearity((2863311530 & r) >>> 1 | (1431655765 & r) << 1),
            i._addikey[1].dis1 = 57,
            i._addikey[1].dis2 = 7,
            i._addikey[2] = new AddiKey,
            i._addikey[2].sd = i.linearity(~((4042322160 & r) >>> 4 | (252645135 & r) << 4)),
            i._addikey[2].dis1 = 58,
            i._addikey[2].dis2 = 19;
            for (var n = 0; 3 > n; ++n) {
                for (var a = i._addikey[n].sd, s = 0; 64 > s; ++s) {
                    for (var o = 0; 32 > o; ++o)
                        a = i.linearity(a);
                    i._addikey[n].buffer[s] = a
                }
                i._addikey[n].carry = 0,
                i._addikey[n].index = 63
            }
            return i._index = 4096,
            i._buffer.length = 4096,
            i._bufferBytes = t.ByteArrayUtils.getBytes(i._buffer),
            i
        }
        return __extends(r, e),
        r.prototype.linearity = function(t) {
            var e = (1 & (t >>> 31 ^ t >>> 6 ^ t >>> 4 ^ t >>> 2 ^ t >>> 1 ^ t)) << 31 | t >>> 1;
            return 0 > e ? 4294967296 + e : e
        }
        ,
        r.prototype.addikeyNext = function(t) {
            t.index++,
            t.index &= 63;
            var e = (64 | t.index) - t.dis1 & 63
              , r = (64 | t.index) - t.dis2 & 63;
            t.buffer[t.index] = (t.buffer[e] + t.buffer[r]) % 4294967296,
            t.carry = t.buffer[t.index] < t.buffer[e] || t.buffer[t.index] < t.buffer[r] ? 1 : 0
        }
        ,
        r.prototype.generate = function() {
            this._buffer.position = 0,
            this._index = 0;
            for (var t = 0; 1024 > t; ++t) {
                var e = this._addikey[0].carry + this._addikey[1].carry + this._addikey[2].carry;
                if (0 == e || 3 == e)
                    this.addikeyNext(this._addikey[0]),
                    this.addikeyNext(this._addikey[1]),
                    this.addikeyNext(this._addikey[2]);
                else
                    for (var r = 2 == e ? 1 : 0, i = 0; 3 > i; ++i)
                        this._addikey[i].carry == r && this.addikeyNext(this._addikey[i]);
                this._buffer.writeUnsignedInt(this._addikey[0].buffer[this._addikey[0].index] ^ this._addikey[1].buffer[this._addikey[1].index] ^ this._addikey[2].buffer[this._addikey[2].index])
            }
        }
        ,
        r.prototype.encode = function(e, r, i) {
            if (void 0 === i && (i = 0),
            e && !(0 >= r)) {
                var n = t.ByteArrayUtils.getBytes(e);
                do {
                    var a = 4096 - this._index;
                    0 >= a && this.generate(),
                    a > r && (a = r),
                    r -= a;
                    for (var s = 0; a > s; s++,
                    i++,
                    this._index++)
                        n[i] ^= this._bufferBytes[this._index]
                } while (r > 0)
            }
        }
        ,
        r
    }(egret.HashObject);
    t.Ctx = e,
    __reflect(e.prototype, "LibCore.Ctx")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function e() {}
        return Object.defineProperty(e, "serverNow", {
            get: function() {
                return this._timeOffset ? this._timeOffset + egret.getTimer() : (new Date).getTime()
            },
            set: function(t) {
                this._timeOffset = t - egret.getTimer()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e, "serverDateTime", {
            get: function() {
                return this._timeOffset ? new Date(this._timeOffset + egret.getTimer()) : new Date
            },
            enumerable: !0,
            configurable: !0
        }),
        e.formatTimespan = function(t, e, r, i) {
            void 0 === r && (r = 0),
            void 0 === i && (i = !1);
            var n = "";
            if (e[0]) {
                if (n = this.appendTimespanPart(n, Math.floor(t / 86400), e[0]),
                i && n)
                    return n;
                t %= 86400
            }
            if (e[1]) {
                if (n = this.appendTimespanPart(n, Math.floor(t / 3600), e[1]),
                i && n)
                    return n;
                t %= 3600
            }
            if (e[2]) {
                if (n = this.appendTimespanPart(n, Math.floor(t / 60), e[2]),
                i && n)
                    return n;
                t %= 60
            }
            if (e[3]) {
                if (n = this.appendTimespanPart(n, Math.floor(t), e[3]),
                i && n)
                    return n;
                t %= 1
            }
            return r && (n += t.toFixed(r).split(".")[1]),
            n
        }
        ,
        e.appendTimespanPart = function(e, r, i) {
            var n = t.StringUtils.ltrim(i, "#");
            return n != i ? e += t.StringUtils.padLeft(r + "", i.length - n.length, "0") + n : r && (e += r + i),
            e
        }
        ,
        e.formatDigitTimespan = function(t) {
            return this.formatTimespan(t, this.DIGIT_TIMESPAN_DELIMS)
        }
        ,
        e.formatChineseTimespan = function(t) {
            return this.formatTimespan(t, this.CHINESE_TIMESPAN_DELIMS)
        }
        ,
        e.formatShortDigitTimespan = function(t) {
            return this.formatTimespan(t, this.SHORT_DIGIT_TIMESPAN_DELIMS)
        }
        ,
        e.formatShortChineseTimespan = function(t) {
            return this.formatTimespan(t, this.SHORT_CHINESE_TIMESPAN_DELIMS)
        }
        ,
        e.formatFirstChineseTimespan = function(t) {
            return this.formatTimespan(t, this.SHORT_CHINESE_TIMESPAN_DELIMS, 0, !0)
        }
        ,
        e.getWeekName = function(t, e) {
            return void 0 === t && (t = null),
            void 0 === e && (e = null),
            t = t || this.serverDateTime,
            e = e || this.WEEK_NAMES,
            e[t.getDay()]
        }
        ,
        e._timeOffset = 0,
        e.WEEK_NAMES = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
        e.CHINESE_TIME_FORMAT = "HH'时'mm'分'ss'秒'",
        e.DIGIT_TIMESPAN_DELIMS = ["", "##:", "##:", "##"],
        e.CHINESE_TIMESPAN_DELIMS = ["天", "#小时", "##分", "##秒"],
        e.SHORT_DIGIT_TIMESPAN_DELIMS = ["", ":", "##:", "##"],
        e.SHORT_CHINESE_TIMESPAN_DELIMS = ["天", "小时", "分", "#秒"],
        e
    }();
    t.DateTimeUtils = e,
    __reflect(e.prototype, "LibCore.DateTimeUtils")
}(LibCore || (LibCore = {}));
var AddiKey = function() {
    function t() {
        this.sd = 0,
        this.dis1 = 0,
        this.dis2 = 0,
        this.index = 0,
        this.carry = 0,
        this.buffer = []
    }
    return t
}();
__reflect(AddiKey.prototype, "AddiKey");
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t) {
            void 0 === t && (t = 0);
            var r = e.call(this) || this;
            return r._entities = {},
            r._classEntities = {},
            r._clientEID = 0,
            r._channel = t,
            r
        }
        return __extends(r, e),
        r.prototype.addEntity = function(e) {
            return this.getEntity(e.eid) ? (t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Entity already exist: " + e),
            !1) : (e.channel = this._channel,
            t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Adding entity: " + e),
            this._entities[e.eid] = e,
            this._classEntities[e.className] || (this._classEntities[e.className] = {}),
            this._classEntities[e.className][e.eid] = e,
            e.onAdd(),
            !0)
        }
        ,
        r.prototype.getEntity = function(t) {
            return this._entities[t]
        }
        ,
        r.prototype.removeEntity = function(e) {
            var r = this.getEntity(e);
            return r && (t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Removing entity: " + r),
            delete this._entities[e],
            delete this._classEntities[r.className][e],
            r.onRemove()),
            r
        }
        ,
        r.prototype.getEntityCount = function(e) {
            void 0 === e && (e = null);
            var r = e ? this._classEntities[e] : this._entities;
            return r ? t.ObjectUtils.getCount(r) : 0
        }
        ,
        r.prototype.getEntities = function() {
            var t = [];
            for (var e in this._entities)
                t.push(this._entities[e]);
            return t
        }
        ,
        r.prototype.getClassEntities = function(t) {
            var e = []
              , r = this._classEntities[t];
            if (r)
                for (var i in r)
                    e.push(r[i]);
            return e
        }
        ,
        r.prototype.createEntity = function(e, r, i) {
            void 0 === r && (r = 0),
            void 0 === i && (i = null);
            var n = t.RpcDef.getEntityClass(e);
            if (!n)
                throw new TypeError("Entity class not found: " + e);
            t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Creating entity: " + egret.getQualifiedClassName(n) + ", eid=" + r + ", props=" + i),
            r || (r = this.genClientEID());
            var a = new n(r,i);
            return this.addEntity(a),
            a
        }
        ,
        r.prototype.genClientEID = function() {
            for (; this.getEntity(++this._clientEID); )
                return this._clientEID
        }
        ,
        r.instance = new r,
        r
    }(egret.HashObject);
    t.EntityManager = e,
    __reflect(e.prototype, "LibCore.EntityManager")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t) {
            var r = e.call(this) || this;
            return r._valid = !0,
            r._times = {},
            r._eventMap = {},
            r._listenInfo = {},
            r.owner = t,
            r.owner._coms[r.hashCode] = r,
            r.onCreate(),
            r
        }
        return __extends(r, e),
        r.prototype.onCreate = function() {}
        ,
        r.prototype.onDestroy = function() {
            this.clearListener(),
            this.clearListening(),
            this.clearTimes(),
            this.owner && this.owner._coms && this.owner._coms[this.hashCode] && delete this.owner._coms[this.hashCode]
        }
        ,
        r.prototype.destroy = function() {
            this._valid && (this._valid = !1,
            this.onDestroy())
        }
        ,
        r.prototype.addOnceTimer = function(t, e) {
            for (var r = this, i = [], n = 2; n < arguments.length; n++)
                i[n - 2] = arguments[n];
            var a = 0;
            return a = this.owner.addOnceTimer(t, function() {
                e.call(r, i),
                delete r._times[a]
            }),
            this._times[a] = 1,
            a
        }
        ,
        r.prototype.addLoopTimer = function(t, e) {
            for (var r = this, i = [], n = 2; n < arguments.length; n++)
                i[n - 2] = arguments[n];
            var a = 0;
            return a = this.owner.addLoopTimer(t, function() {
                var t = e.call(r, i);
                t || delete r._times[a]
            }),
            this._times[a] = 2,
            a
        }
        ,
        r.prototype.delTimer = function(t) {
            if (this._times[t]) {
                var e = this.owner.delTimer(t);
                return delete this._times[t],
                e
            }
            return !1
        }
        ,
        r.prototype.clearTimes = function() {
            for (var t in this._times)
                this.owner.delTimer(parseInt(t));
            this._times = {}
        }
        ,
        r.prototype.addListen = function(t, e, r) {
            var i = this.owner.addListen(t, e, r);
            return i > 0 && (this._eventMap[i] = i),
            i
        }
        ,
        r.prototype.removeListen = function(e) {
            return this._eventMap[e] ? (this.owner.removeListen(e),
            void delete this._eventMap[e]) : void t.GameLog.log("removeListen cant have eventId ")
        }
        ,
        r.prototype.clearListener = function() {
            var t = [];
            for (var e in this._eventMap)
                t.push(parseInt(e));
            for (var r = 0; r < t.length; r++)
                this.removeListen(t[r]);
            this._eventMap = {}
        }
        ,
        r.prototype.clearListening = function() {
            var t = [];
            for (var e in this._listenInfo)
                for (var r in this._listenInfo[e])
                    t.push(this._listenInfo[e][r]);
            for (var i = 0; i < t.length; i++)
                t[i].ob.removeListen(t[i].eventId);
            this._listenInfo = {}
        }
        ,
        r.prototype.clearListeningTarget = function(t) {
            var e = [];
            if (this._listenInfo[t])
                for (var r in this._listenInfo[t])
                    e.push(this._listenInfo[t][r]);
            for (var i = 0; i < e.length; i++)
                e[i].ob.removeListen(e[i].eventId);
            this._listenInfo = {}
        }
        ,
        r.prototype.dispatch = function(t) {
            this.owner.dispatchEvent(t)
        }
        ,
        r
    }(egret.HashObject);
    t.GameCom = e,
    __reflect(e.prototype, "LibCore.GameCom")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t, r) {
            void 0 === t && (t = 0),
            void 0 === r && (r = null);
            var i = e.call(this, t, r) || this;
            return i._times = {},
            i._coms = {},
            i._valid = !0,
            i._eventId = 1,
            i._eventMap = {},
            i._listenInfo = {},
            i
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "gateway", {
            get: function() {
                return this._gateway || (this._gateway = t.Mailbox.createNew(this.className, "gateway", this.eid, this.channel)),
                this._gateway
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "hall", {
            get: function() {
                return this._hall || (this._hall = t.Mailbox.createNew(this.className, "hall", this.eid, this.channel)),
                this._hall
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.onChannelChange = function() {
            this._gateway = null,
            this._hall = null
        }
        ,
        r.prototype.addOnceTimer = function(t, e) {
            for (var r = [], i = 2; i < arguments.length; i++)
                r[i - 2] = arguments[i];
            var n = this
              , a = setTimeout(function() {
                e.call(n, r),
                delete n._times[a]
            }, 1e3 * t);
            return n._times[a] = 1,
            a
        }
        ,
        r.prototype.addLoopTimer = function(t, e) {
            for (var r, i = 2; i < arguments.length; i++)
                r[i - 2] = arguments[i];
            var n = this
              , a = setInterval(function() {
                var t = e.call(n, r);
                t || (clearInterval(a),
                delete n._times[a])
            }, 1e3 * t);
            return this._times[a] = 2,
            a
        }
        ,
        r.prototype.delTimer = function(t) {
            return this._times[t] ? (1 == this._times[t] ? (clearTimeout(t),
            delete this._times[t]) : (clearInterval(t),
            delete this._times[t]),
            !0) : !1
        }
        ,
        r.prototype.clearTimes = function() {
            for (var t in this._times)
                1 == this._times[t] ? clearTimeout(parseInt(t)) : clearInterval(parseInt(t));
            this._times = {}
        }
        ,
        r.prototype.onAdd = function() {
            e.prototype.onAdd.call(this),
            this.onCreate()
        }
        ,
        r.prototype.onRemove = function() {
            e.prototype.onRemove.call(this),
            this.onDestroy()
        }
        ,
        r.prototype.onPropChange = function(t, e) {
            var r = "on_" + t;
            this.hasOwnProperty(r) && this[r](e)
        }
        ,
        r.prototype.destroy = function() {
            this._valid && (this._valid = !1,
            t.GameService.get(this.channel).entityMgr.removeEntity(this.eid))
        }
        ,
        r.prototype.onCreate = function() {}
        ,
        r.prototype.onDestroy = function() {
            this.clearListening(),
            this.clearListener(),
            this.clearComs(),
            this.clearTimes()
        }
        ,
        r.prototype.clearComs = function() {
            var t = [];
            for (var e in this._coms)
                t.push(this._coms[e]);
            for (var r = 0; r < t.length; r++)
                t[r].destroy();
            this._coms = {}
        }
        ,
        r.prototype.addListen = function(e, r, i) {
            var n = this._eventId;
            if (this._eventId = this._eventId + 1,
            this._eventMap[n] = {
                eventId: n,
                msg: e,
                callback: i,
                target: r
            },
            this.addEventListener(e, i, r),
            r) {
                if (!r.hasOwnProperty("_listenInfo"))
                    return t.GameLog.log("target has not _listenInfo"),
                    n;
                r._listenInfo[this.hashCode] || (r._listenInfo[this.hashCode] = {}),
                r._listenInfo[this.hashCode][n] = {
                    eventId: n,
                    msg: e,
                    ob: this
                }
            }
            return n
        }
        ,
        r.prototype.removeListen = function(e) {
            if (!this._eventMap[e])
                return void t.GameLog.log("removeListen cant have eventId ");
            var r = this._eventMap[e];
            delete this._eventMap[e],
            this.removeEventListener(r.msg, r.callback, r.target);
            var i = r.target;
            i && i.hasOwnProperty("_listenInfo") && i._listenInfo[this.hashCode] && i._listenInfo[this.hashCode][e] && delete i._listenInfo[this.hashCode][e]
        }
        ,
        r.prototype.clearListener = function() {
            var t = [];
            for (var e in this._eventMap)
                t.push(parseInt(e));
            for (var r = 0; r < t.length; r++)
                this.removeListen(t[r]);
            this._eventMap = {}
        }
        ,
        r.prototype.clearListening = function() {
            var t = [];
            for (var e in this._listenInfo)
                for (var r in this._listenInfo[e])
                    t.push(this._listenInfo[e][r]);
            for (var i = 0; i < t.length; i++)
                t[i].ob.removeListen(t[i].eventId);
            this._listenInfo = {}
        }
        ,
        r.prototype.clearListeningTarget = function(t) {
            var e = [];
            if (this._listenInfo[t])
                for (var r in this._listenInfo[t])
                    e.push(this._listenInfo[t][r]);
            for (var i = 0; i < e.length; i++)
                e[i].ob.removeListen(e[i].eventId);
            this._listenInfo = {}
        }
        ,
        r.prototype.dispatch = function(t) {
            this.dispatchEvent(t)
        }
        ,
        r
    }(t.Entity);
    t.GameEntity = e,
    __reflect(e.prototype, "LibCore.GameEntity")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r() {
            var t = e.call(this) || this;
            return t.catchRecvErrors = !1,
            t._packetLen = 0,
            t._packetLen = 0,
            t.catchRecvErrors = !1,
            t
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "connected", {
            get: function() {
                return this._socket && this._socket.connected
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "encryptSeed", {
            get: function() {
                return this._encryptSeed
            },
            set: function(e) {
                e = Math.floor(e),
                this._encryptSeed != e && (this._encryptSeed = e,
                t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Set socket encrypt seed to: " + e),
                e && (this._encrypter = new t.Ctx(e ^ r.GENIUS_NUMBER),
                this._decrypter = new t.Ctx(e ^ r.GENIUS_NUMBER)))
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.connect = function(e) {
            this.disconnect();
            try {
                this._connInfo = e,
                t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Connect to socket: " + this._connInfo),
                this.initSocket();
                var r = -1 == window.location.toString().indexOf("https") ? "ws://" : "wss://";
                this._socket.connectByUrl(r + this._connInfo.host + ":" + this._connInfo.port)
            } catch (i) {
                t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Connect to socket error: " + i),
                t.SocketInterface.service = this,
                t.SocketInterface.onConnectFail && t.SocketInterface.onConnectFail()
            }
        }
        ,
        r.prototype.disconnect = function() {
            this._socket && (t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Disconnect socket: " + this._connInfo),
            this.onDisconnect(null))
        }
        ,
        r.prototype.initSocket = function() {
            this._socket || (this._socket = new egret.WebSocket,
            this._socket.type = egret.WebSocket.TYPE_BINARY,
            this._socket.addEventListener(egret.Event.CONNECT, this.onConnect, this),
            this._socket.addEventListener(egret.Event.CLOSE, this.onDisconnect, this),
            this._socket.addEventListener(egret.ProgressEvent.SOCKET_DATA, this.onData, this),
            this._socket.addEventListener(egret.IOErrorEvent.IO_ERROR, this.onError, this),
            this._readBuffer = new t.ByteArrayLittle,
            this._writeBuffer = new t.ByteArrayLittle)
        }
        ,
        r.prototype.clearSocket = function() {
            this._socket && (this._socket.removeEventListener(egret.Event.CONNECT, this.onConnect, this),
            this._socket.removeEventListener(egret.Event.CLOSE, this.onDisconnect, this),
            this._socket.removeEventListener(egret.ProgressEvent.SOCKET_DATA, this.onData, this),
            this._socket.removeEventListener(egret.IOErrorEvent.IO_ERROR, this.onError, this),
            this._socket.connected && this._socket.close(),
            this._socket = null,
            this._readBuffer.clear(),
            this._readBuffer = null,
            this._writeBuffer.clear(),
            this._writeBuffer = null,
            this._packetLen = 0,
            this._encryptSeed = 0)
        }
        ,
        r.prototype.onConnect = function(e) {
            t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Socket connected with: " + this._connInfo),
            t.SocketInterface.service = this,
            t.SocketInterface.onConnect && t.SocketInterface.onConnect()
        }
        ,
        r.prototype.onDisconnect = function(e) {
            this.clearSocket(),
            t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Socket disconnected from: " + this._connInfo),
            t.SocketInterface.service = this,
            t.SocketInterface.onDisconnect && t.SocketInterface.onDisconnect()
        }
        ,
        r.prototype.onData = function(e) {
            this._socket.readBytes(this._readBuffer, this._readBuffer.length),
            t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Receiving socket data: " + this._readBuffer.length),
            t.SocketInterface.service = this;
            var r = t.SocketInterface.createRecvPacket();
            if (this.catchRecvErrors)
                try {
                    for (; this._readBuffer && this.readPacket(r); ) {
                        t.SocketInterface.debugLog && t.SocketInterface.debugLog("Handling packet: " + r);
                        try {
                            r.handle()
                        } catch (i) {
                            t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Handling packet error: " + r)
                        }
                    }
                } catch (i) {
                    t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Receiving packet error: " + i + "\nReceived data: " + this._readBuffer + (this._readBuffer ? " " + this._readBuffer.toHex() : "")),
                    t.SocketInterface.service = this,
                    t.SocketInterface.onRecvError && t.SocketInterface.onRecvError(i, r, this._readBuffer),
                    this._readBuffer.length = 0
                }
            else
                for (; this._readBuffer && this.readPacket(r); )
                    t.GameConfig.EnableSocketLog && t.SocketInterface.debugLog("Handling packet: " + r),
                    r.handle();
            this._readBuffer && 0 == t.ByteArrayUtils.readAvailable(this._readBuffer) && (this._readBuffer.length = 0)
        }
        ,
        r.prototype.onError = function(e) {
            t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Socket connection error: " + e),
            this.connected ? (t.SocketInterface.service = this,
            t.SocketInterface.onError && t.SocketInterface.onError()) : (t.SocketInterface.service = this,
            t.SocketInterface.onConnectFail && t.SocketInterface.onConnectFail())
        }
        ,
        r.prototype.readPacket = function(e) {
            var i = this._packetLen;
            if (!i) {
                if (t.ByteArrayUtils.readAvailable(this._readBuffer) < r.INT_SIZE)
                    return !1;
                this._encryptSeed && this._decrypter.encode(this._readBuffer, r.INT_SIZE, this._readBuffer.position),
                i = this._readBuffer.readUnsignedInt();
                var n = i >> 24 & 255;
                if (i &= 16777215,
                0 == i || i > r.BAD_LEN || n != i % 255)
                    throw new Error("Invalid packet size: " + i);
                i > r.MAX_LEN && t.SocketInterface.errorLog && t.SocketInterface.errorLog("Packet too large: " + i),
                this._packetLen = i
            }
            return t.ByteArrayUtils.readAvailable(this._readBuffer) >= i ? (this._packetLen = 0,
            this._encryptSeed && this._decrypter.encode(this._readBuffer, i, this._readBuffer.position),
            e.read(this._readBuffer, i)) : !1
        }
        ,
        r.prototype.sendPacket = function(e) {
            if (!this.connected)
                return void (t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Socket not connected for sending packet"));
            try {
                var i = e.write();
                if (!i)
                    return;
                if (i > r.BAD_LEN)
                    throw new Error("Invalid packet size: " + i);
                var n = i % 255 << 24 | i;
                this._writeBuffer.length = i + r.INT_SIZE,
                this._writeBuffer.position = 0,
                this._writeBuffer.writeUnsignedInt(n),
                this._writeBuffer.writeBytes(e.content),
                this._encryptSeed && this._encrypter.encode(this._writeBuffer, this._writeBuffer.length),
                this._socket.writeBytes(this._writeBuffer),
                this._socket.flush()
            } catch (a) {
                t.GameConfig.EnableSocketLog && t.SocketInterface.errorLog("Sending packet error: ", a),
                t.SocketInterface.service = this,
                t.SocketInterface.onSendError && t.SocketInterface.onSendError(a, e)
            }
        }
        ,
        r.prototype.clearBuffer = function() {
            this._readBuffer && 0 == this._readBuffer.length && this._readBuffer.clear(),
            this._writeBuffer && this._writeBuffer.clear()
        }
        ,
        r.instance = new r,
        r.GENIUS_NUMBER = 84048153,
        r.INT_SIZE = 4,
        r.MAX_LEN = 65535,
        r.BAD_LEN = 16776960,
        r
    }(egret.HashObject);
    t.SocketService = e,
    __reflect(e.prototype, "LibCore.SocketService")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(r) {
            void 0 === r && (r = 0);
            var i = e.call(this) || this;
            return i._boundStaticMathods = {},
            i._channel = r,
            i._boundStaticMathods = {},
            i._socketSvc = r ? new t.SocketService : t.SocketService.instance,
            i._entityMgr = r ? new t.EntityManager(r) : t.EntityManager.instance,
            i
        }
        return __extends(r, e),
        Object.defineProperty(r, "socketChannel", {
            get: function() {
                return this._socketChannels[t.SocketInterface.service.hashCode]
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "channel", {
            get: function() {
                return this._channel
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "socketSvc", {
            get: function() {
                return this._socketSvc
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "entityMgr", {
            get: function() {
                return this._entityMgr
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "rpcVersion", {
            get: function() {
                return t.RpcDef.version
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "connInfo", {
            get: function() {
                return this.instance.connInfo
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "connInfo", {
            get: function() {
                return this.connInfo
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "connected", {
            get: function() {
                return this.instance.connected
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "connected", {
            get: function() {
                return this.socketSvc.connected
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "gateway", {
            get: function() {
                return this.instance.gateway
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "gateway", {
            get: function() {
                return this._gateway || (this._gateway = t.Mailbox.createNew("Gateway", "server", 0, this._channel)),
                this._gateway
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "staticMethods", {
            get: function() {
                return this._staticMethods
            },
            set: function(t) {
                this._staticMethods != t && (this._staticMethods = t,
                this._boundStaticMathods = {})
            },
            enumerable: !0,
            configurable: !0
        }),
        r.get = function(t) {
            if (void 0 === t && (t = 0),
            t) {
                var e = r._instances[t];
                return e || (e = new r(t),
                this._instances[t] = e,
                this._socketChannels[e.socketSvc.hashCode] = e.channel),
                e
            }
            return this.instance
        }
        ,
        r.initialize = function(e, r) {
            void 0 === r && (r = null),
            t.SocketInterface.createRecvPacket = this.createRecvPacket.bind(this),
            t.RpcInterface.sendRpcPacket = this.sendRpcPacket.bind(this),
            t.RpcInterface.getStaticMethod = this.getStaticMethod.bind(this),
            t.RpcInterface.getEntity = this.getEntity.bind(this),
            t.RpcDef.initialize(e),
            r && (this.instance.staticMethods = r)
        }
        ,
        r.createRecvPacket = function() {
            return new t.RpcPacket(0,0,this.socketChannel)
        }
        ,
        r.sendRpcPacket = function(t, e) {
            this.get(e).socketSvc.sendPacket(t)
        }
        ,
        r.getStaticMethod = function(t, e) {
            var r = this.get(e);
            if (!(t.name in r._boundStaticMathods)) {
                var i = r._staticMethods ? r._staticMethods[t.name] : null;
                r._boundStaticMathods[t.name] = i ? i.bind(r._staticMethods) : null
            }
            return r._boundStaticMathods[t.name]
        }
        ,
        r.connect = function(e, r) {
            void 0 === e && (e = 0),
            void 0 === r && (r = 0);
            var i = this.get(r);
            1 == e && i._connInfo || (i._connInfo = new t.ConnectInfo(t.GameConfig.SVR_HOST,t.GameConfig.SVR_PORT),
            i.socketSvc.connect(i._connInfo))
        }
        ,
        r.disconnect = function(t) {
            void 0 === t && (t = 0),
            this.get(t).socketSvc.disconnect()
        }
        ,
        r.setEncryptSeed = function(e, r) {
            void 0 === r && (r = 0),
            t.GameConfig.CTX_PACKET && (this.get(r).socketSvc.encryptSeed = e)
        }
        ,
        r.registerEntityClass = function(e, r) {
            t.RpcDef.registerEntityClass(e, r)
        }
        ,
        r.addEntity = function(t, e) {
            return void 0 === e && (e = 0),
            this.get(e).entityMgr.addEntity(t)
        }
        ,
        r.getEntity = function(t, e) {
            return void 0 === e && (e = 0),
            this.get(e).entityMgr.getEntity(t)
        }
        ,
        r.removeEntity = function(t, e) {
            return void 0 === e && (e = 0),
            this.get(e).entityMgr.removeEntity(t)
        }
        ,
        r.getEntityCount = function(t, e) {
            return void 0 === t && (t = null),
            void 0 === e && (e = 0),
            this.get(e).entityMgr.getEntityCount()
        }
        ,
        r.getEntities = function(t) {
            return void 0 === t && (t = 0),
            this.get(t).entityMgr.getEntities()
        }
        ,
        r.getClassEntities = function(t, e) {
            return void 0 === e && (e = 0),
            this.get(e).entityMgr.getClassEntities(t)
        }
        ,
        r.removeClassEntities = function(t, e) {
            void 0 === e && (e = 0);
            for (var r = this.get(e).entityMgr, i = r.getClassEntities(t), n = 0; n < i.length; n++) {
                var a = i[n];
                r.removeEntity(a.$eid)
            }
        }
        ,
        r.createEntity = function(t, e, r, i) {
            void 0 === e && (e = 0),
            void 0 === r && (r = null),
            void 0 === i && (i = 0);
            var n = this.get(i).entityMgr.createEntity(t, e, r);
            return n
        }
        ,
        r.newStruct = function(e) {
            return t.RpcDef.newStruct(e)
        }
        ,
        r.newArray = function(e) {
            return t.RpcDef.newArray(e)
        }
        ,
        r.instance = new r,
        r._instances = {},
        r._socketChannels = {},
        r
    }(egret.HashObject);
    t.GameService = e,
    __reflect(e.prototype, "LibCore.GameService")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(t) {
        function e(e) {
            var r = t.call(this) || this;
            return r.name = e.name,
            r.type = e.type,
            r
        }
        return __extends(e, t),
        e.prototype.toString = function() {
            return null == this._info && (this._info = this.name + ":" + this.type),
            this._info
        }
        ,
        e
    }(egret.HashObject);
    t.ArgDef = e,
    __reflect(e.prototype, "LibCore.ArgDef")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(r, i, n, a) {
            void 0 === n && (n = 0),
            void 0 === a && (a = 0);
            var s = e.call(this) || this;
            return s._className = r,
            s._server = i,
            s._eid = n,
            s._channel = a,
            s.methodDefs || (s.methodDefs = t.RpcDef.getClassMethods(r, i)),
            s.methodMap = {},
            s
        }
        return __extends(r, e),
        r.createNew = function(e, i, n, a) {
            void 0 === n && (n = 0),
            void 0 === a && (a = 0);
            var s = e + "@" + i
              , o = this._classMap[s];
            if (!o) {
                o = function(t) {
                    function e(e, r, i, n) {
                        return void 0 === i && (i = 0),
                        void 0 === n && (n = 0),
                        t.call(this, e, r, i, n) || this
                    }
                    return __extends(e, t),
                    e
                }(r);
                var l = t.RpcDef.getClassMethods(e, i);
                Object.defineProperty(o.prototype, "methodDefs", {
                    value: l
                });
                for (var h in l)
                    Object.defineProperty(o.prototype, h, {
                        get: t.functor(this.prototype.getMethod, null, h),
                        enumerable: !0
                    });
                this._classMap[s] = o
            }
            return new o(e,i,n,a)
        }
        ,
        Object.defineProperty(r.prototype, "$className", {
            get: function() {
                return this._className
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "$server", {
            get: function() {
                return this._server
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "$eid", {
            get: function() {
                return this._eid
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "$channel", {
            get: function() {
                return this._channel
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.getMethod = function(e) {
            var r = this.methodDefs[e];
            if (!r)
                return t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("RPC method not defined: " + this + " " + e),
                null;
            var i = this.methodMap[e];
            return i || (i = this.callRpcMethod.bind(this, r, !0),
            this.methodMap[e] = i),
            i
        }
        ,
        r.prototype.hasMethod = function(t) {
            return null != this.methodDefs[t]
        }
        ,
        r.prototype.callRpcMethod = function(e, r) {
            for (var i = [], n = 2; n < arguments.length; n++)
                i[n - 2] = arguments[n];
            if (r && (t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Calling RPC method: " + this + " " + e),
            t.RpcInterface.simSendDelayTime >= 0))
                return void setTimeout(this.callRpcMethod.bind(this, e, !1, i), t.RpcInterface.simSendDelayTime);
            var a = t.RpcInterface.createRpcPacket(e.id, this._eid, this._channel);
            try {
                a.params = r ? i : i[0],
                t.RpcInterface.sendRpcPacket(a, this._channel)
            } catch (s) {
                t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Calling RPC method error: " + this + " " + e + "\n" + s)
            }
        }
        ,
        r.prototype.toString = function() {
            return "<Mailbox " + this._className + "@" + this._server + "[" + this._channel + "] eid=" + this._eid + ">"
        }
        ,
        r._classMap = {},
        r
    }(egret.HashObject);
    t.Mailbox = e,
    __reflect(e.prototype, "LibCore.Mailbox")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(r) {
            var i = e.call(this) || this;
            i.args = [],
            i.id = r.id,
            i.name = r.name,
            i.className = r.className,
            i.server = r.server,
            i.isStatic = r.isStatic;
            for (var n = r.args, a = 0; a < n.length; a++) {
                var s = n[a];
                i.args.push(new t.ArgDef(s))
            }
            return i
        }
        return __extends(r, e),
        r.prototype.toString = function() {
            return null == this._info && (this._info = "<Method " + this.className + "@" + this.server + "." + this.name + "(" + this.args.join(",") + ")" + (this.isStatic ? " static>" : ">")),
            this._info
        }
        ,
        r
    }(egret.HashObject);
    t.MethodDef = e,
    __reflect(e.prototype, "LibCore.MethodDef")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function t() {}
        return t.isEmpty = function(t) {
            for (var e in t)
                return !1;
            return !0
        }
        ,
        t.getCount = function(t) {
            var e = 0;
            for (var r in t)
                e++;
            return e
        }
        ,
        t.getKeys = function(t) {
            var e = [];
            for (var r in t)
                e.push(r);
            return e
        }
        ,
        t.getValues = function(t, e) {
            void 0 === e && (e = null);
            var r = [];
            for (var i in t)
                r.push(e ? t[i][e] : t[i]);
            return r
        }
        ,
        t.clear = function(t) {
            for (var e = this.getKeys(t), r = 0; r < e.length; r++) {
                var i = e[r];
                delete t[i]
            }
        }
        ,
        t.find = function(t, e, r) {
            void 0 === r && (r = null);
            for (var i in t)
                if (r) {
                    if (t[i][r] == e)
                        return i
                } else if (t[i] == e)
                    return i;
            return null
        }
        ,
        t.remove = function(t, e, r, i) {
            void 0 === r && (r = null),
            void 0 === i && (i = !1);
            var n = [];
            for (var a in t) {
                if (r) {
                    if (t[a][r] != e)
                        continue
                } else if (t[a] != e)
                    continue;
                if (!i)
                    return delete t[a],
                    1;
                n.push(a)
            }
            for (var s = n, o = 0; o < s.length; o++)
                a = s[o],
                delete t[a];
            return n.length
        }
        ,
        t.merge = function(t, e, r) {
            void 0 === r && (r = !1);
            var i = r ? new t.constructor : t;
            for (var n in e)
                i[n] = e[n];
            return i
        }
        ,
        t.formatString = function(e, r, i) {
            if (void 0 === r && (r = 0),
            void 0 === i && (i = !1),
            null == e)
                return "null";
            switch (typeof e) {
            case "boolean":
                return e.toString();
            case "number":
                return isNaN(e) ? "NaN" : e.toString();
            case "string":
                return JSON.stringify(e);
            case "function":
                return "<Function>"
            }
            if (e instanceof Array) {
                if (0 == e.length)
                    return i ? "" : "[]";
                if (0 == r)
                    return i ? ".." : "[..]";
                for (var n = [], a = e, s = 0; s < a.length; s++)
                    n.push(t.formatString(a[s], r - 1));
                return i ? n.join(", ") : "[" + n.join(", ") + "]"
            }
            if (t.isEmpty(e))
                return i ? "" : "{}";
            if (0 == r)
                return i ? ".." : "{..}";
            var o = [];
            for (var l in e)
                o.push(l + ":" + t.formatString(e[l], r - 1));
            return o.sort(),
            i ? o.join(", ") : "{" + o.join(", ") + "}"
        }
        ,
        t
    }();
    t.ObjectUtils = e,
    __reflect(e.prototype, "LibCore.ObjectUtils")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function t() {}
        return t.remove = function(t, e) {
            var r = t.indexOf(e);
            return r >= 0 && t.splice(r, 1),
            r
        }
        ,
        t.randGet = function(t) {
            return t.length > 0 ? t[Math.floor(t.length * Math.random())] : null
        }
        ,
        t.swap = function(t, e, r) {
            if (e != r) {
                var i = t[e];
                t[e] = t[r],
                t[r] = i
            }
        }
        ,
        t.find = function(t, e, r) {
            void 0 === r && (r = null);
            for (var i = 0; i < t.length; i++)
                if (r) {
                    if (t[i][r] == e)
                        return i
                } else if (t[i] == e)
                    return i;
            return -1
        }
        ,
        t.bisectLocate = function(e, r, i, n, a) {
            if (void 0 === i && (i = null),
            void 0 === n && (n = 0),
            void 0 === a && (a = 2147483647),
            n >= e.length)
                return e.length;
            if (a = Math.min(a, e.length - 1),
            6 > a - n) {
                for (var s = a; s >= n; s--) {
                    var o = i ? e[s][i] : e[s];
                    if (r > o)
                        return s + 1
                }
                return n
            }
            var l = Math.floor((n + a) / 2)
              , h = i ? e[l][i] : e[l];
            return r > h ? t.bisectLocate(e, r, i, l + 1, a) : t.bisectLocate(e, r, i, n, l - 1)
        }
        ,
        t.bisectFind = function(e, r, i) {
            if (void 0 === i && (i = null),
            e.length > 0) {
                var n = t.bisectLocate(e, r, i);
                if (n < e.length) {
                    var a = i ? e[n][i] : e[n];
                    if (a == r)
                        return n
                }
            }
            return -1
        }
        ,
        t.bisectInsert = function(e, r, i, n) {
            void 0 === i && (i = null),
            void 0 === n && (n = !1);
            var a = i ? r[i] : r
              , s = e.length > 0 ? t.bisectLocate(e, a, i) : 0;
            if (s < e.length) {
                if (n && (i ? e[s][i] : e[s]) == a)
                    return -1;
                e.splice(s, 0, r)
            } else
                e.push(r);
            return s
        }
        ,
        t.forEach = function(e, r, i) {
            for (var n = e.length, a = 0; n >= a; a++)
                t.callItem(r, i, e[a], a, e)
        }
        ,
        t.map = function(e, r, i) {
            for (var n = [], a = e.length, s = 0; a > s; s++)
                n.push(t.callItem(r, i, e[s], s, e));
            return n
        }
        ,
        t.filter = function(e, r, i, n, a) {
            void 0 === n && (n = !0),
            void 0 === a && (a = !1);
            for (var s = [], o = e.length, l = 0; o >= l; l++) {
                var h = t.callItem(r, i, e[l], l, e)
                  , u = !1;
                if ("boolean" == typeof n && h && (u = !0),
                u == n) {
                    if (a)
                        continue;
                    s.push(e[l])
                } else
                    a && s.push(e[l])
            }
            return s
        }
        ,
        t.all = function(e, r, i, n) {
            void 0 === n && (n = !0);
            var a = e.length;
            if (0 == a)
                return !1;
            for (var s = 0; a >= s; s++) {
                var o = t.callItem(r, i, e[s], s, e)
                  , l = !1;
                if ("boolean" == typeof n && o && (l = !0),
                l != n)
                    return !1
            }
            return !0
        }
        ,
        t.any = function(e, r, i, n) {
            void 0 === n && (n = !0);
            for (var a = e.length, s = 0; a >= s; s++) {
                var o = t.callItem(r, i, e[s], s, e)
                  , l = !1;
                if ("boolean" == typeof n && o && (l = !0),
                l == n)
                    return !0
            }
            return !1
        }
        ,
        t.callItem = function(t, e, r, i, n) {
            var a = t.length;
            return 1 >= a ? t.call(e, r) : 2 == a ? t.call(e, r, i) : t.call(e, r, i, n)
        }
        ,
        t
    }();
    t.ArrayUtils = e,
    __reflect(e.prototype, "LibCore.ArrayUtils")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t) {
            var r = e.call(this) || this;
            return r.id = t.id,
            r.name = t.name,
            r.className = t.className,
            r.type = t.type,
            r._defVal = t.defVal,
            r
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "defVal", {
            get: function() {
                switch (this.type) {
                case "float2":
                    return new egret.Point;
                case "array":
                    return [];
                default:
                    return this._defVal
                }
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "writer", {
            get: function() {
                if (this._writer || (this._writer = t.RpcDef.getTypeWriter(this.type)),
                null == this._writer)
                    throw new TypeError("Property writer not found: " + this);
                return this._writer
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "reader", {
            get: function() {
                if (this._reader || (this._reader = t.RpcDef.getTypeReader(this.type)),
                null == this._reader)
                    throw new TypeError("Property reader not found: " + this);
                return this._reader
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.toString = function() {
            return null == this._info && (this._info = "<Prop " + this.className + "." + this.name + ":" + this.type + ">"),
            this._info
        }
        ,
        r
    }(egret.HashObject);
    t.PropDef = e,
    __reflect(e.prototype, "LibCore.PropDef")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function e() {}
        return Object.defineProperty(e, "version", {
            get: function() {
                return this._version
            },
            enumerable: !0,
            configurable: !0
        }),
        e.initialize = function(t) {
            e._version = t.Digi,
            this.initMethodList(t.MethodList),
            this.initPropList(t.PropList),
            this.initEntityList(t.EntityList),
            this.initTypeList(t.TypeList)
        }
        ,
        e.initMethodList = function(e) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r]
                  , n = new t.MethodDef(i);
                this._methodDefs[n.id] = n,
                this._classMethods[n.className] || (this._classMethods[n.className] = {}),
                this._classMethods[n.className][n.server] || (this._classMethods[n.className][n.server] = {}),
                this._classMethods[n.className][n.server][n.name] = n
            }
        }
        ,
        e.initPropList = function(e) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r];
                if ("CLIENT" == i.flag || "ALLCLIENTS" == i.flag) {
                    var n = new t.PropDef(i);
                    this._propDefs[n.id] = n,
                    this._classProps[n.className] || (this._classProps[n.className] = {}),
                    this._classProps[n.className] || (this._classProps[n.className] = {}),
                    this._classProps[n.className][n.id] = n,
                    this._classProps[n.className][n.name] = n
                }
            }
        }
        ,
        e.initEntityList = function(t) {
            for (var e = 0; e < t.length; e++) {
                var r = t[e];
                this._entityClasses[r.id] = r.className,
                this._entityClasses[r.className] = null
            }
        }
        ,
        e.initTypeList = function(e) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r]
                  , n = new t.TypeDef(i);
                this._typeDefs[n.id] = this._typeDefs[n.name] = n;
                var a = n.id < this.STRUCT_BASE_ID ? n.name : "struct"
                  , s = t.RpcType[a + "Writer"].bind(t.RpcType)
                  , o = t.RpcType[a + "Reader"].bind(t.RpcType);
                this._typeWriters[n.id] = s,
                this._typeWriters[n.name] = s,
                this._typeReaders[n.id] = o,
                this._typeReaders[n.name] = o
            }
        }
        ,
        e.getMethodDef = function(t) {
            return this._methodDefs[t]
        }
        ,
        e.getPropDef = function(t) {
            return this._propDefs[t]
        }
        ,
        e.getClassMethods = function(t, e) {
            return this._classMethods[t] ? this._classMethods[t][e] || {} : {}
        }
        ,
        e.getClassProps = function(t) {
            return this._classProps[t] || {}
        }
        ,
        e.registerEntityClass = function(t, e) {
            if (t) {
                if (!(t in this._entityClasses))
                    throw new TypeError("Entity class not defined: " + t);
                this._entityClasses[t] = e
            } else
                for (var r in this._entityClasses)
                    null == this._entityClasses[r] && (this._entityClasses[r] = e)
        }
        ,
        e.getEntityClass = function(t) {
            var e = this._entityClasses[t];
            return "string" == typeof e ? this._entityClasses[e] : e
        }
        ,
        e.getEntityClassName = function(t) {
            var e = t.constructor;
            for (var r in this._entityClasses)
                if (this._entityClasses[r] == e)
                    return r;
            return null
        }
        ,
        e.getTypeDef = function(t) {
            return this._typeDefs[t]
        }
        ,
        e.getTypeWriter = function(t) {
            return this._typeWriters[t]
        }
        ,
        e.getTypeReader = function(t) {
            return this._typeReaders[t]
        }
        ,
        e.newStruct = function(e) {
            var r = this._typeDefs[e];
            return r && r.id >= this.STRUCT_BASE_ID ? t.Struct.createNew(r) : null
        }
        ,
        e.newArray = function(e) {
            var r = this._typeDefs[e];
            return r ? new t.TypeArray(r) : null
        }
        ,
        e._version = 0,
        e._methodDefs = {},
        e._propDefs = {},
        e._classMethods = {},
        e._classProps = {},
        e._entityClasses = {},
        e._typeDefs = {},
        e.STRUCT_BASE_ID = 20,
        e._typeWriters = {},
        e._typeReaders = {},
        e
    }();
    t.RpcDef = e,
    __reflect(e.prototype, "LibCore.RpcDef")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function e() {}
        return e.createRpcPacket = function(e, r, i) {
            return new t.RpcPacket(e,r,i)
        }
        ,
        e.sendRpcPacket = function(r, i) {
            t.GameConfig.EnableRPCLog && e.debugLog("Sending RPC[" + i + "] packet: " + r)
        }
        ,
        e.getStaticMethod = function(t, e) {
            return null
        }
        ,
        e.getEntity = function(e, r) {
            return t.EntityManager.instance.getEntity(e)
        }
        ,
        e.simSendDelayTime = -1,
        e.simRecvDelayTime = -1,
        e.errorLog = console.trace,
        e.debugLog = console.info,
        e
    }();
    t.RpcInterface = e,
    __reflect(e.prototype, "LibCore.RpcInterface")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t, r, i) {
            void 0 === t && (t = 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = 0);
            var n = e.call(this) || this;
            return n._params = [],
            n.reset(t, r, i),
            n
        }
        return __extends(r, e),
        Object.defineProperty(r.prototype, "id", {
            get: function() {
                return this._id
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "eid", {
            get: function() {
                return this._eid
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "channel", {
            get: function() {
                return this._channel
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "isStatic", {
            get: function() {
                return this.method.isStatic
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r.prototype, "params", {
            get: function() {
                return this._params
            },
            set: function(t) {
                var e = this.method.args
                  , r = t.length;
                if (e.length != r)
                    throw new Error("Setting RPC params with wrong count: " + r);
                this._params = t
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.reset = function(e, r, i) {
            void 0 === e && (e = 0),
            void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            this._id = e,
            this._eid = r,
            this._channel = i,
            this._params = e ? [] : null,
            this.method = e ? t.RpcDef.getMethodDef(e) : null
        }
        ,
        r.prototype.readContent = function() {
            if (this.reset(t.RpcType.uintReader(this.content), 0, this._channel),
            !this.method)
                return t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("RPC method not found: " + this._id),
                !1;
            this._eid = this.isStatic ? 0 : t.RpcType.int48Reader(this.content);
            for (var e = 0; e < this.method.args.length; e++) {
                var r = this.method.args[e]
                  , i = t.RpcDef.getTypeReader(r.type);
                if (null == i)
                    throw new TypeError("Type reader not found: " + r.type);
                this._params.push(i(this.content))
            }
            return !0
        }
        ,
        r.prototype.writeContent = function() {
            if (!this.method)
                return t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("RPC method not found: " + this._id),
                !1;
            t.RpcType.uintWriter(this.content, this._id),
            this.isStatic || t.RpcType.int48Writer(this.content, this._eid);
            for (var e = 0; e < this.method.args.length; e++) {
                var r = this.method.args[e]
                  , i = t.RpcDef.getTypeWriter(r.type);
                if (null == i)
                    throw new TypeError("Type writer not found: " + r.type);
                i(this.content, this._params[e])
            }
            return !0
        }
        ,
        r.prototype.handle = function() {
            t.RpcInterface.simRecvDelayTime < 0 ? this.realHandle(this._eid, this._channel, this.method, this._params) : (t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Receive RPC[" + this._channel + "] method: " + this.method + ", eid=" + this._eid),
            setTimeout(this.realHandle, t.RpcInterface.simRecvDelayTime, this._eid, this._channel, this.method, this.params))
        }
        ,
        r.prototype.realHandle = function(e, r, i, n) {
            if (t.GameConfig.EnableRPCLog && t.RpcInterface.debugLog("Handling RPC[" + r + "] method: " + i + " eid=" + e),
            i.isStatic) {
                var a = t.RpcInterface.getStaticMethod(i, r);
                if (null == a)
                    return void (t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Static RPC[" + r + "] method not found: " + i));
                a.apply(null, n)
            } else {
                var s = t.RpcInterface.getEntity(e, r);
                if (!s)
                    return void (t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Entity not found: [" + r + "] eid=" + e + " " + i));
                var o = s[i.name];
                if (null == o)
                    return void (t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Entity RPC method not found: " + s + " " + i));
                o.apply(s, n)
            }
        }
        ,
        r.prototype.toString = function() {
            return "<RpcPacket[" + this._channel + "] id=" + this._id + ",eid=" + this._eid + ",method=" + this.method + ",len=" + this.content.length + ">"
        }
        ,
        r
    }(t.Packet);
    t.RpcPacket = e,
    __reflect(e.prototype, "LibCore.RpcPacket")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function e() {}
        return e.intWriter = function(t, e) {
            t.writeInt(e)
        }
        ,
        e.intReader = function(t) {
            return t.readInt()
        }
        ,
        e.int8Writer = function(t, e) {
            t.writeByte(e)
        }
        ,
        e.int8Reader = function(t) {
            return t.readByte()
        }
        ,
        e.int16Writer = function(t, e) {
            t.writeShort(e)
        }
        ,
        e.int16Reader = function(t) {
            return t.readShort()
        }
        ,
        e.int48Writer = function(t, e) {
            t.writeUnsignedInt(e),
            t.writeShort(Math.floor(e / 4294967296))
        }
        ,
        e.int48Reader = function(t) {
            return t.readUnsignedInt() + 4294967296 * t.readShort()
        }
        ,
        e.uintReader = function(t) {
            return t.readUnsignedInt()
        }
        ,
        e.uintWriter = function(t, e) {
            t.writeUnsignedInt(e)
        }
        ,
        e.uint8Writer = function(t, e) {
            t.writeByte(e)
        }
        ,
        e.uint8Reader = function(t) {
            return t.readUnsignedByte()
        }
        ,
        e.uint16Writer = function(t, e) {
            t.writeUnsignedShort(e)
        }
        ,
        e.uint16Reader = function(t) {
            return t.readUnsignedShort()
        }
        ,
        e.doubleWriter = function(t, e) {
            t.writeDouble(e)
        }
        ,
        e.doubleReader = function(t) {
            return t.readDouble()
        }
        ,
        e.floatWriter = function(t, e) {
            t.writeFloat(e)
        }
        ,
        e.floatReader = function(t) {
            return t.readFloat()
        }
        ,
        e.boolWriter = function(t, e) {
            t.writeBoolean(e)
        }
        ,
        e.boolReader = function(t) {
            return t.readBoolean()
        }
        ,
        e.stringWriter = function(t, e) {
            this._buffer.length = 0,
            this._buffer.writeUTFBytes(e),
            this._buffer.length > 65535 && (this._buffer.length = 65535),
            t.writeUnsignedShort(this._buffer.length),
            t.writeBytes(this._buffer)
        }
        ,
        e.stringReader = function(t) {
            var e = t.readUnsignedShort();
            return t.readUTFBytes(e)
        }
        ,
        e.lstringWriter = function(t, e) {
            this._buffer.length = 0,
            this._buffer.writeUTFBytes(e),
            t.writeUnsignedInt(this._buffer.length),
            t.writeBytes(this._buffer)
        }
        ,
        e.lstringReader = function(t) {
            var e = t.readUnsignedInt();
            return t.readUTFBytes(e)
        }
        ,
        e.arWriter = function(t, e) {
            t.writeBytes(e)
        }
        ,
        e.arReader = function(t) {
            var e = new t.constructor;
            return t.readBytes(e),
            e
        }
        ,
        e.vintWriter = function(t, e) {
            for (; e >= 128; )
                t.writeByte(128 | e),
                e = Math.floor(e / 128);
            t.writeByte(e)
        }
        ,
        e.vintReader = function(e) {
            for (var r = e.readByte(), i = 127 & r, n = 128; 128 & r && t.ByteArrayUtils.readAvailable(e) > 0; n *= 128)
                r = e.readByte(),
                i += (127 & r) * n;
            return i
        }
        ,
        e.float2Writer = function(t, e) {
            t.writeFloat(e.x),
            t.writeFloat(e.y)
        }
        ,
        e.float2Reader = function(t) {
            return new egret.Point(t.readFloat(),t.readFloat())
        }
        ,
        e.arrayWriter = function(e, r) {
            e.writeShort(r.$type.id),
            e.writeShort(r.length);
            var i = t.RpcDef.getTypeWriter(r.$type.name);
            if (null == i)
                throw new TypeError("Type writer not found: " + r.$type.name);
            for (var n = 0, a = r; n < a.length; n++) {
                var s = a[n];
                i(e, s)
            }
        }
        ,
        e.arrayReader = function(e) {
            var r = e.readShort()
              , i = t.RpcDef.newArray(r);
            if (!i)
                throw new TypeError("Invalid array type id: " + r);
            var n = e.readShort()
              , a = t.RpcDef.getTypeReader(i._type.name);
            if (null == a)
                throw new TypeError("Type reader not found: " + i._type.name);
            for (var s = 0; n > s; s++)
                i.push(a(e));
            return i
        }
        ,
        e.tableWriter = function(t, e) {}
        ,
        e.tableReader = function(t) {
            return null
        }
        ,
        e.lzoWriter = function(t, e) {}
        ,
        e.lzoReader = function(t) {
            return null
        }
        ,
        e.structWriter = function(e, r) {
            e.writeShort(r.$type.id);
            for (var i = r.$type.defs, n = 0, a = r.$type.fields; n < a.length; n++) {
                var s = a[n]
                  , o = t.RpcDef.getTypeWriter(i[s]);
                if (null == o)
                    throw new TypeError("Type writer not found: " + r.$type.name + "." + s + ":" + i[s]);
                o(e, r[s])
            }
        }
        ,
        e.structReader = function(e) {
            var r = e.readShort()
              , i = t.RpcDef.newStruct(r);
            if (!i)
                throw new TypeError("Invalid struct type id: " + r);
            for (var n = i.$type.defs, a = 0, s = i.$type.fields; a < s.length; a++) {
                var o = s[a]
                  , l = t.RpcDef.getTypeReader(n[o]);
                if (null == l)
                    throw new TypeError("Type reader not found: " + i.$type.name + "." + o + ":" + n[o]);
                i[o] = l(e)
            }
            return i
        }
        ,
        e.clearBuffer = function() {
            this._buffer.clear()
        }
        ,
        e._buffer = new egret.ByteArray,
        e
    }();
    t.RpcType = e,
    __reflect(e.prototype, "LibCore.RpcType")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function e() {}
        return e.createRecvPacket = function() {
            return new t.Packet
        }
        ,
        e.errorLog = console.trace,
        e.debugLog = console.info,
        e
    }();
    t.SocketInterface = e,
    __reflect(e.prototype, "LibCore.SocketInterface")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function() {
        function t() {}
        return t.trim = function(e, r) {
            return void 0 === r && (r = null),
            e ? t.ltrim(t.rtrim(e, r), r) : ""
        }
        ,
        t.ltrim = function(e, r) {
            if (void 0 === r && (r = null),
            e) {
                r = r || t.WHITESPACES;
                for (var i = e.length, n = 0; i > n; n++)
                    if (!(r.indexOf(e.charAt(n)) >= 0))
                        return e.slice(n)
            }
            return ""
        }
        ,
        t.rtrim = function(e, r) {
            if (void 0 === r && (r = null),
            e) {
                r = r || t.WHITESPACES;
                for (var i = e.length - 1; i >= 0; i--)
                    if (!(r.indexOf(e.charAt(i)) >= 0))
                        return e.slice(0, i + 1)
            }
            return ""
        }
        ,
        t.padLeft = function(e, r, i) {
            void 0 === i && (i = " ");
            var n = r - e.length;
            return n > 0 ? t.repeat(i, n) + e : e
        }
        ,
        t.padRight = function(e, r, i) {
            void 0 === i && (i = " ");
            var n = r - e.length;
            return n > 0 ? e + t.repeat(i, n) : e
        }
        ,
        t.fixNewlines = function(t) {
            return t ? t.replace(/(\r\n|\r)/g, "\n") : ""
        }
        ,
        t.isEqual = function(t, e, r) {
            return void 0 === r && (r = !1),
            r ? t.toLowerCase() == e.toLowerCase() : t == e
        }
        ,
        t.startsWith = function(e, r, i) {
            return void 0 === i && (i = !1),
            t.isEqual(r, e.slice(0, r.length), i)
        }
        ,
        t.endsWith = function(e, r, i) {
            return void 0 === i && (i = !1),
            t.isEqual(r, e.slice(-r.length), i)
        }
        ,
        t.repeat = function(t, e) {
            if (void 0 === e && (e = 2),
            !t || !e)
                return "";
            for (var r = t, i = e; i > 1; i--)
                r += t;
            return r
        }
        ,
        t.substitute = function(t, e, r) {
            if (void 0 === r && (r = 0),
            t && e)
                if (e instanceof Array)
                    for (var i = e.length, n = 0; i > n; n++)
                        t = t.replace(new RegExp("\\{" + (n + r) + "\\}","g"), e[n]);
                else
                    for (var a in e)
                        t = t.replace(new RegExp("\\{" + a + "\\}","g"), e[a]);
            return t
        }
        ,
        t.splitIntegers = function(e, r) {
            void 0 === r && (r = ",");
            var i = [];
            if (e = t.trim(e))
                for (var n = r instanceof RegExp ? e.split(r) : e.split(r), a = 0, s = n; a < s.length; a++) {
                    var o = s[a];
                    if (o = t.trim(o)) {
                        var l = parseInt(o);
                        isNaN(l) || i.push(l)
                    }
                }
            return i
        }
        ,
        t.parseJson = function(t, e) {
            void 0 === e && (e = !1);
            try {
                return e && (t = t.replace(/\/\/.*/g, "")),
                JSON.parse(t.replace(/([{,]\s*)(\w+)(\s*:)/g, '$1"$2"$3'))
            } catch (r) {
                console.log(r)
            }
            return null
        }
        ,
        t.strToJson = function(e) {
            var r = e;
            if ("string" == typeof e && (r = JSON.parse(e)),
            "object" == typeof r) {
                if (r._id_) {
                    var i = [];
                    r._v_ ? i.push(t.strToJson(r._v_)) : i.push(t.strToJson(this.getNewObject(r))),
                    r = i
                } else {
                    var n = {};
                    for (var a in r)
                        n[a] = t.strToJson(r[a]);
                    r = n
                }
                return r
            }
        }
        ,
        t.arrStrToJson = function(t) {
            for (var e = JSON.parse(t), r = {}, i = 0, n = e.length; n > i; i++) {
                var a = e[i];
                a._id_ ? r[a._id_] = a._v_ : r[i] = a
            }
            return r
        }
        ,
        t.formatJson = function(t, e, r) {
            void 0 === e && (e = null),
            void 0 === r && (r = !0);
            var i = JSON.stringify(t, null, e);
            return r && (i = i.replace(/([{,]\s*)"(\w+)"(\s*:)/g, "$1$2$3")),
            i
        }
        ,
        t.adjustSlash = function(t) {
            return t.replace(/\\/g, "/")
        }
        ,
        t.getPath = function(t, e) {
            void 0 === e && (e = !1);
            var r = t.lastIndexOf("/");
            0 > r && (r = t.lastIndexOf("\\"));
            var i = 0 > r ? "" : t.slice(0, r);
            return i && e ? this.adjustSlash(i) : i
        }
        ,
        t.getFilename = function(t, e) {
            void 0 === e && (e = !1);
            var r = t.lastIndexOf("/");
            0 > r && (r = t.lastIndexOf("\\"));
            var i = 0 > r ? t : t.slice(r + 1);
            return r = i.lastIndexOf("."),
            e && r >= 0 ? i.slice(0, r) : i
        }
        ,
        t.getExt = function(t) {
            var e = t.lastIndexOf(".")
              , r = 0 > e ? "" : t.slice(e + 1);
            return r && (r.indexOf("/") >= 0 || r.indexOf("\\") >= 0) && (r = ""),
            r
        }
        ,
        t.changeExt = function(t, e) {
            void 0 === e && (e = "");
            var r = t.lastIndexOf(".")
              , i = 0 > r ? "" : t.slice(r);
            return i && (i.indexOf("/") >= 0 || i.indexOf("\\") >= 0) && (i = ""),
            t.slice(0, -i.length) + (e ? "." + e : "")
        }
        ,
        t.getNewObject = function(t) {
            var e = {};
            for (var r in t)
                "_id_" != r && (e[r] = t[r]);
            return e
        }
        ,
        t.WHITESPACES = " 	\r\n\f",
        t
    }();
    t.StringUtils = e,
    __reflect(e.prototype, "LibCore.StringUtils")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(e) {
        function r(t) {
            var r = e.call(this) || this;
            return r._items = {},
            r._type = t,
            r
        }
        return __extends(r, e),
        r.createNew = function(e) {
            var i = r._classMap[e.name];
            if (!i) {
                i = function(t) {
                    function e(e) {
                        return t.call(this, e) || this
                    }
                    return __extends(e, t),
                    e
                }(r);
                for (var n = e.fields, a = 0; a < n.length; a++) {
                    var s = n[a];
                    Object.defineProperty(i.prototype, s, {
                        set: t.functorLeft(r.prototype.setKey, null, s),
                        get: t.functor(r.prototype.getKey, null, s),
                        enumerable: !0
                    })
                }
                r._classMap[e.name] = i
            }
            return new i(e)
        }
        ,
        Object.defineProperty(r.prototype, "$type", {
            get: function() {
                return this._type
            },
            enumerable: !0,
            configurable: !0
        }),
        r.prototype.hasKey = function(t) {
            return null != this._type.defs[t]
        }
        ,
        r.prototype.setKey = function(e, r) {
            this.hasKey(e) ? this._items[e] = r : t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Setting struct member not defined: " + e)
        }
        ,
        r.prototype.getKey = function(e) {
            return this.hasKey(e) ? this._items[e] : (t.GameConfig.EnableRPCLog && t.RpcInterface.errorLog("Getting struct member not defined: " + e),
            null)
        }
        ,
        r.prototype.toString = function() {
            for (var t = [], e = this._type.fields, r = 0; r < e.length; r++) {
                var i = e[r];
                t.push(i + "=" + this._items[i])
            }
            return "<" + this._type.name + " " + t.join(",") + ">"
        }
        ,
        r._classMap = {},
        r
    }(egret.HashObject);
    t.Struct = e,
    __reflect(e.prototype, "LibCore.Struct")
}(LibCore || (LibCore = {}));
var LibCore;
!function(LibCore) {
    var TypeArray = function(_super) {
        function TypeArray(type, arr) {
            var _this = _super.call(this) || this
              , t = eval("this");
            return t._type = type,
            arr && arr.length > 0 && t.push.apply(t, arr),
            t
        }
        return __extends(TypeArray, _super),
        Object.defineProperty(TypeArray.prototype, "$type", {
            get: function() {
                return this._type
            },
            enumerable: !0,
            configurable: !0
        }),
        TypeArray.prototype.concat = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            for (var r = new TypeArray(this._type,this), i = t, e = 0; e < i.length; e++) {
                var n = i[e];
                n instanceof Array ? r.push.apply(r, n) : r.push(n)
            }
            return r
        }
        ,
        TypeArray.prototype.slice = function(t, e) {
            return void 0 === t && (t = 0),
            void 0 === e && (e = 16777215),
            new TypeArray(this._type,_super.prototype.slice.call(this, t, e))
        }
        ,
        TypeArray.prototype.splice = function(t, e) {
            for (var r = [], i = 2; i < arguments.length; i++)
                r[i - 2] = arguments[i];
            return null == e ? new TypeArray(this._type,_super.prototype.splice.call(this, t)) : new TypeArray(this._type,_super.prototype.splice.apply(this, [t, e].concat(r)))
        }
        ,
        TypeArray.prototype.toString = function() {
            return "<TypeArray type=" + this._type.name + " [" + this.join(",") + "]>"
        }
        ,
        TypeArray
    }(Array);
    LibCore.TypeArray = TypeArray,
    __reflect(TypeArray.prototype, "LibCore.TypeArray")
}(LibCore || (LibCore = {}));
var LibCore;
!function(t) {
    var e = function(t) {
        function e(e) {
            var r = t.call(this) || this;
            r.defs = {},
            r.fields = [],
            r.id = e.id,
            r.name = e.name;
            for (var i = e.defs, n = 0; n < i.length; n++) {
                var a = i[n];
                r.fields.push(a.name),
                r.defs[a.name] = a.type
            }
            return r
        }
        return __extends(e, t),
        e.prototype.toString = function() {
            if (null == this._info) {
                for (var t = [], e = this.fields, r = 0; r < e.length; r++) {
                    var i = e[r];
                    t.push(i + ":" + this.defs[i])
                }
                this._info = "<Type " + this.name + " {" + t.join(",") + "}>"
            }
            return this._info
        }
        ,
        e
    }(egret.HashObject);
    t.TypeDef = e,
    __reflect(e.prototype, "LibCore.TypeDef")
}(LibCore || (LibCore = {}));
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
, __extends = this && this.__extends || function(t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}
, __decorate = this && this.__decorate || function(t, e, r, i) {
    var n, a = arguments.length, s = 3 > a ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
        s = Reflect.decorate(t, e, r, i);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (n = t[o]) && (s = (3 > a ? n(s) : a > 3 ? n(e, r, s) : n(e, r)) || s);
    return a > 3 && s && Object.defineProperty(e, r, s),
    s
}
, RES;
!function(t) {}(RES || (RES = {}));
var RES;
!function(t) {
    var e = function() {
        function e() {
            this.groupTotalDic = {},
            this.numLoadedDic = {},
            this.groupErrorDic = {},
            this.retryTimesDic = {},
            this.maxRetryTimes = 3,
            this.reporterDic = {},
            this.dispatcherDic = {},
            this.failedList = new Array,
            this.loadItemErrorDic = {},
            this.errorDic = {},
            this.itemListPriorityDic = {},
            this.itemLoadDic = {},
            this.promiseHash = {},
            this.lazyLoadList = new Array,
            this.loadingCount = 0,
            this.thread = 4
        }
        return e.prototype.pushResItem = function(t) {
            if (this.promiseHash[t.root + t.name])
                return this.promiseHash[t.root + t.name];
            this.lazyLoadList.push(t),
            this.itemListPriorityDic[Number.NEGATIVE_INFINITY] = this.lazyLoadList,
            this.updatelistPriority(this.lazyLoadList, Number.NEGATIVE_INFINITY);
            var e = new egret.EventDispatcher;
            this.dispatcherDic[t.root + t.name] = e;
            var r = new Promise(function(t, r) {
                e.addEventListener("complete", function(e) {
                    t(e.data)
                }, null),
                e.addEventListener("error", function(t) {
                    r(t.data)
                }, null)
            }
            );
            return this.promiseHash[t.root + t.name] = r,
            this.loadNextResource(),
            r
        }
        ,
        e.prototype.pushResGroup = function(t, e, r, i) {
            if (this.promiseHash[e])
                return this.promiseHash[e];
            for (var n = t.length, a = 0; n > a; a++) {
                var s = t[a];
                s.groupNames || (s.groupNames = []),
                s.groupNames.push(e)
            }
            this.groupTotalDic[e] = t.length,
            this.numLoadedDic[e] = 0,
            this.updatelistPriority(t, r),
            this.reporterDic[e] = i;
            var o = new egret.EventDispatcher;
            this.dispatcherDic[e] = o;
            var l = new Promise(function(t, e) {
                o.addEventListener("complete", t, null),
                o.addEventListener("error", function(t) {
                    e(t.data)
                }, null)
            }
            );
            return this.promiseHash[e] = l,
            this.loadNextResource(),
            l
        }
        ,
        e.prototype.updatelistPriority = function(t, e) {
            void 0 == this.itemListPriorityDic[e] && (this.itemListPriorityDic[e] = []);
            for (var r = 0, i = t; r < i.length; r++) {
                var n = i[r];
                if (1 != this.itemLoadDic[n.root + n.name]) {
                    var a = this.findPriorityInDic(n);
                    if (void 0 == a)
                        this.itemListPriorityDic[e].push(n);
                    else if (e > a) {
                        this.itemListPriorityDic[e].push(n);
                        var s = this.itemListPriorityDic[a].indexOf(n);
                        this.itemListPriorityDic[a].splice(s, 1)
                    }
                }
            }
        }
        ,
        e.prototype.findPriorityInDic = function(t) {
            for (var e in this.itemListPriorityDic)
                if (this.itemListPriorityDic[e].indexOf(t) > -1)
                    return parseInt(e)
        }
        ,
        e.prototype.loadNextResource = function() {
            for (; this.loadingCount < this.thread; ) {
                var t = this.loadSingleResource();
                if (!t)
                    break
            }
        }
        ,
        e.prototype.loadSingleResource = function() {
            var e = this
              , r = this.getOneResourceInfoInGroup();
            return r ? (this.itemLoadDic[r.root + r.name] = 1,
            this.loadingCount++,
            this.loadResource(r).then(function(i) {
                if (e.loadingCount--,
                delete e.itemLoadDic[r.root + r.name],
                t.host.save(r, i),
                e.promiseHash[r.root + r.name]) {
                    var n = e.deleteDispatcher(r.root + r.name);
                    n.dispatchEventWith("complete", !1, i)
                }
                var a = r.groupNames;
                if (a) {
                    delete r.groupNames;
                    for (var s = 0, o = a; s < o.length; s++) {
                        var l = o[s];
                        e.setGroupProgress(l, r) && e.loadGroupEnd(l)
                    }
                }
                e.loadNextResource()
            })["catch"](function(i) {
                if (!i)
                    throw r.name + " load fail";
                if (!i.__resource_manager_error__)
                    throw i;
                delete e.itemLoadDic[r.root + r.name],
                e.loadingCount--,
                delete t.host.state[r.root + r.name];
                var n = e.retryTimesDic[r.name] || 1;
                if (!(n > e.maxRetryTimes))
                    return e.retryTimesDic[r.name] = n + 1,
                    e.failedList.push(r),
                    void e.loadNextResource();
                if (delete e.retryTimesDic[r.name],
                e.promiseHash[r.root + r.name]) {
                    var a = e.deleteDispatcher(r.root + r.name);
                    a.dispatchEventWith("error", !1, {
                        r: r,
                        error: i
                    })
                }
                var s = r.groupNames;
                if (s) {
                    delete r.groupNames;
                    for (var o = 0, l = s; o < l.length; o++) {
                        var h = l[o];
                        e.loadItemErrorDic[h] || (e.loadItemErrorDic[h] = []),
                        -1 == e.loadItemErrorDic[h].indexOf(r) && e.loadItemErrorDic[h].push(r),
                        e.groupErrorDic[h] = !0,
                        e.setGroupProgress(h, r) ? e.loadGroupEnd(h, i) : e.errorDic[h] = i
                    }
                }
                e.loadNextResource()
            }),
            !0) : !1
        }
        ,
        e.prototype.getOneResourceInfoInGroup = function() {
            if (this.failedList.length > 0)
                return this.failedList.shift();
            var t = Number.NEGATIVE_INFINITY;
            for (var e in this.itemListPriorityDic)
                t = Math.max(t, e);
            var r = this.itemListPriorityDic[t];
            return r ? 0 == r.length ? (delete this.itemListPriorityDic[t],
            this.getOneResourceInfoInGroup()) : r.shift() : void 0
        }
        ,
        e.prototype.setGroupProgress = function(t, e) {
            var r = this.reporterDic[t];
            this.numLoadedDic[t]++;
            var i = this.numLoadedDic[t]
              , n = this.groupTotalDic[t];
            return r && r.onProgress && r.onProgress(i, n, e),
            i == n
        }
        ,
        e.prototype.loadGroupEnd = function(t, e) {
            delete this.groupTotalDic[t],
            delete this.numLoadedDic[t],
            delete this.reporterDic[t];
            var r = this.deleteDispatcher(t);
            if (e) {
                delete this.groupErrorDic[t];
                var i = this.loadItemErrorDic[t];
                delete this.loadItemErrorDic[t],
                r.dispatchEventWith("error", !1, {
                    itemList: i,
                    lastError: e
                })
            } else {
                var n = this.groupErrorDic[t];
                if (delete this.groupErrorDic[t],
                n) {
                    var i = this.loadItemErrorDic[t];
                    delete this.loadItemErrorDic[t];
                    var a = this.errorDic[t];
                    delete this.errorDic[t],
                    r.dispatchEventWith("error", !1, {
                        itemList: i,
                        error: a
                    })
                } else
                    r.dispatchEventWith("complete")
            }
        }
        ,
        e.prototype.deleteDispatcher = function(t) {
            delete this.promiseHash[t];
            var e = this.dispatcherDic[t];
            return delete this.dispatcherDic[t],
            e
        }
        ,
        e.prototype.loadResource = function(e, r) {
            if (!r) {
                if (1 == t.FEATURE_FLAG.FIX_DUPLICATE_LOAD) {
                    var i = t.host.state[e.root + e.name];
                    if (2 == i)
                        return Promise.resolve(t.host.get(e));
                    if (1 == i)
                        return e.promise
                }
                r = t.processor.isSupport(e)
            }
            if (!r)
                throw new t.ResourceManagerError(2001,e.name,e.type);
            t.host.state[e.root + e.name] = 1;
            var n = r.onLoadStart(t.host, e);
            return e.promise = n,
            n
        }
        ,
        e.prototype.unloadResource = function(e) {
            var r = t.host.get(e);
            if (!r)
                return console.warn("尝试释放不存在的资源:", e.name),
                !1;
            var i = t.processor.isSupport(e);
            return i ? (i.onRemoveStart(t.host, e),
            t.host.remove(e),
            1 == e.extra && t.config.removeResourceData(e),
            !0) : !0
        }
        ,
        e
    }();
    t.ResourceLoader = e,
    __reflect(e.prototype, "RES.ResourceLoader")
}(RES || (RES = {}));
var RES;
!function(t) {
    t.checkNull = function(t, e, r) {
        var i = r.value;
        r.value = function() {
            for (var t = [], r = 0; r < arguments.length; r++)
                t[r] = arguments[r];
            return t[0] ? i.apply(this, t) : (console.warn("方法" + e + "的参数不能为null"),
            null)
        }
    }
    ,
    t.FEATURE_FLAG = {
        FIX_DUPLICATE_LOAD: 1
    };
    var e;
    !function(t) {
        function e(t) {
            r = t
        }
        var r = "warning";
        t.setUpgradeGuideLevel = e
    }(e = t.upgrade || (t.upgrade = {}))
}(RES || (RES = {}));
var RES;
!function(t) {
    function e(e) {
        var r = t.config.config.fileSystem.getFile(e);
        return r || (e = t.resourceNameSelector(e),
        r = t.config.config.fileSystem.getFile(e)),
        r
    }
    function r(t, e) {
        var r;
        r = t.indexOf(".json") >= 0 ? "legacyResourceConfig" : "resourceConfig",
        i = {
            type: r,
            root: e,
            url: t,
            name: t
        }
    }
    t.resourceNameSelector = function(t) {
        return t
    }
    ,
    t.getResourceInfo = e;
    var i;
    t.setConfigURL = r;
    var n = function() {
        function r() {}
        return r.prototype.init = function() {
            return this.config || (this.config = {
                alias: {},
                groups: {},
                resourceRoot: i.root,
                mergeSelector: null,
                fileSystem: null,
                loadGroup: []
            }),
            t.queue.pushResItem(i)["catch"](function(e) {
                return t.isCompatible || e.__resource_manager_error__ || (e.error ? console.error(e.error.stack) : console.error(e.stack),
                e = new t.ResourceManagerError(1002)),
                t.host.remove(i),
                Promise.reject(e)
            })
        }
        ,
        r.prototype.getGroupByName = function(e) {
            var r = this.config.groups[e]
              , i = [];
            if (!r)
                return i;
            for (var n = 0, a = r; n < a.length; n++) {
                var s = a[n]
                  , o = void 0;
                if (o = t.config.getResourceWithSubkey(s),
                null != o) {
                    var l = o.r
                      , h = o.key;
                    if (null == l)
                        throw new t.ResourceManagerError(2005,h);
                    -1 == i.indexOf(l) && i.push(l)
                }
            }
            return i
        }
        ,
        r.prototype.__temp__get__type__via__url = function(e) {
            var r = this.config.alias[e];
            if (r || (r = e),
            t.typeSelector) {
                var i = t.typeSelector(r);
                if (!i)
                    throw new t.ResourceManagerError(2004,r);
                return i
            }
            return console.warn("RES.mapConfig 并未设置 typeSelector"),
            "unknown"
        }
        ,
        r.prototype.getResourceWithSubkey = function(t) {
            t = this.getKeyByAlias(t);
            var e = t.indexOf("#")
              , r = "";
            e >= 0 && (r = t.substr(e + 1),
            t = t.substr(0, e));
            var i = this.getResource(t);
            return i ? {
                r: i,
                key: t,
                subkey: r
            } : null
        }
        ,
        r.prototype.getKeyByAlias = function(t) {
            return this.config.alias[t] ? this.config.alias[t] : t
        }
        ,
        r.prototype.getResource = function(t) {
            var r = this.config.alias[t];
            r || (r = t);
            var i = e(r);
            return i ? i : null
        }
        ,
        r.prototype.createGroup = function(t, e, r) {
            if (void 0 === r && (r = !1),
            !r && this.config.groups[t] || !e || 0 == e.length)
                return !1;
            for (var i = [], n = 0, a = e; n < a.length; n++) {
                var s = a[n];
                if (this.config.groups[s]) {
                    var o = this.config.groups[s];
                    i = i.concat(o)
                } else
                    i.push(s)
            }
            return this.config.groups[t] = i,
            !0
        }
        ,
        r.prototype.addSubkey = function(t, e) {
            this.addAlias(t, e + "#" + t)
        }
        ,
        r.prototype.addAlias = function(t, e) {
            this.config.alias[e] && (e = this.config.alias[e]),
            this.config.alias[t] = e
        }
        ,
        r.prototype.addResourceData = function(e) {
            t.hasRes(e.name) || (e.type || (e.type = this.__temp__get__type__via__url(e.url)),
            t.config.config.fileSystem.addFile(e))
        }
        ,
        r.prototype.removeResourceData = function(e) {
            t.hasRes(e.name) && (t.config.config.fileSystem.removeFile(e.url),
            this.config.alias[e.name] && delete this.config.alias[e.name])
        }
        ,
        r
    }();
    t.ResourceConfig = n,
    __reflect(n.prototype, "RES.ResourceConfig")
}(RES || (RES = {}));
var RES;
!function(t) {
    function e(e) {
        return t.path.basename(e).split(".").join("_")
    }
    function r(e) {
        var r, i = e.substr(e.lastIndexOf(".") + 1);
        switch (i) {
        case t.ResourceItem.TYPE_XML:
        case t.ResourceItem.TYPE_JSON:
        case t.ResourceItem.TYPE_SHEET:
            r = i;
            break;
        case "png":
        case "jpg":
        case "gif":
        case "jpeg":
        case "bmp":
            r = t.ResourceItem.TYPE_IMAGE;
            break;
        case "fnt":
            r = t.ResourceItem.TYPE_FONT;
            break;
        case "txt":
            r = t.ResourceItem.TYPE_TEXT;
            break;
        case "mp3":
        case "ogg":
        case "mpeg":
        case "wav":
        case "m4a":
        case "mp4":
        case "aiff":
        case "wma":
        case "mid":
            r = t.ResourceItem.TYPE_SOUND;
            break;
        case "mergeJson":
        case "zip":
        case "pvr":
            r = i;
            break;
        default:
            r = t.ResourceItem.TYPE_BIN
        }
        return r
    }
    function i(e, r) {
        throw new t.ResourceManagerError(2002)
    }
    function n(e) {
        t.isCompatible = e
    }
    function a(e, r) {
        if (r.indexOf("://") >= 0) {
            var i = r.split("://");
            r = i[0] + "://" + t.path.normalize(i[1] + "/"),
            e = e.replace(r, "")
        } else
            r = t.path.normalize(r + "/"),
            e = e.replace(r, "");
        return t.setConfigURL(e, r),
        E || (E = new S),
        s(E.loadConfig())
    }
    function s(e) {
        return t.isCompatible ? void e["catch"](function(t) {}).then() : e
    }
    function o(t, e, r) {
        return void 0 === e && (e = 0),
        s(E.loadGroup(t, e, r))
    }
    function l(t) {
        return E.isGroupLoaded(t)
    }
    function h(e) {
        return E.getGroupByName(e).map(function(e) {
            return t.ResourceItem.convertToResItem(e)
        })
    }
    function u(t, e, r) {
        return void 0 === r && (r = !1),
        E.createGroup(t, e, r)
    }
    function c(t) {
        return E.hasRes(t)
    }
    function f(t) {
        return E.getRes(t)
    }
    function d(t, e, r) {
        return s(E.getResAsync.apply(E, arguments))
    }
    function p(t, e, r, i) {
        if (void 0 === i && (i = ""),
        !E) {
            var n = egret.sys.tr(3200);
            return egret.warn(n),
            Promise.reject(n)
        }
        return s(E.getResByUrl(t, e, r, i))
    }
    function _(t, e) {
        return E.destroyRes(t, e)
    }
    function m(t) {
        E || (E = new S),
        E.setMaxLoadingThread(t)
    }
    function g(t) {
        E.setMaxRetryTimes(t)
    }
    function y(t, e, r, i, n) {
        void 0 === i && (i = !1),
        void 0 === n && (n = 0),
        E || (E = new S),
        E.addEventListener(t, e, r, i, n)
    }
    function v(t, e, r, i) {
        void 0 === i && (i = !1),
        E.removeEventListener(t, e, r, i)
    }
    function b(t) {
        E.addResourceData(t)
    }
    function w() {
        return E || (E = new S),
        E.vcs
    }
    function T(t) {
        E || (E = new S),
        E.registerVersionController(t)
    }
    function D(t) {
        return E.vcs ? E.vcs.getVirtualUrl(t) : t
    }
    t.nameSelector = e,
    t.typeSelector = r,
    t.registerAnalyzer = i,
    t.setIsCompatible = n,
    t.isCompatible = !1,
    t.loadConfig = a,
    t.loadGroup = o,
    t.isGroupLoaded = l,
    t.getGroupByName = h,
    t.createGroup = u,
    t.hasRes = c,
    t.getRes = f,
    t.getResAsync = d,
    t.getResByUrl = p,
    t.destroyRes = _,
    t.setMaxLoadingThread = m,
    t.setMaxRetryTimes = g,
    t.addEventListener = y,
    t.removeEventListener = v,
    t.$addResourceData = b,
    t.getVersionController = w,
    t.registerVersionController = T,
    t.getVirtualUrl = D;
    var S = function(e) {
        function r() {
            var r = e.call(this) || this;
            return r.isVcsInit = !1,
            r.normalLoadConfig = function() {
                return t.config.init().then(function(e) {
                    t.ResourceEvent.dispatchResourceEvent(r, t.ResourceEvent.CONFIG_COMPLETE)
                }, function(e) {
                    return t.ResourceEvent.dispatchResourceEvent(r, t.ResourceEvent.CONFIG_LOAD_ERROR),
                    Promise.reject(e)
                })
            }
            ,
            t.VersionController && (r.vcs = new t.VersionController),
            r
        }
        return __extends(r, e),
        r.prototype.registerVersionController = function(t) {
            this.vcs = t,
            this.isVcsInit = !1
        }
        ,
        r.prototype.loadConfig = function() {
            var t = this;
            return !this.isVcsInit && this.vcs ? (this.isVcsInit = !0,
            this.vcs.init().then(function() {
                return t.normalLoadConfig()
            })) : this.normalLoadConfig()
        }
        ,
        r.prototype.isGroupLoaded = function(e) {
            var r = t.config.getGroupByName(e);
            return r.every(function(e) {
                return null != t.host.get(e)
            })
        }
        ,
        r.prototype.getGroupByName = function(e) {
            return t.config.getGroupByName(e)
        }
        ,
        r.prototype.loadGroup = function(e, r, i) {
            var n = this;
            void 0 === r && (r = 0);
            var a = {
                onProgress: function(r, a, s) {
                    i && i.onProgress && i.onProgress(r, a, s),
                    t.ResourceEvent.dispatchResourceEvent(n, t.ResourceEvent.GROUP_PROGRESS, e, s, r, a)
                }
            };
            return this._loadGroup(e, r, a).then(function(r) {
                -1 == t.config.config.loadGroup.indexOf(e) && t.config.config.loadGroup.push(e),
                t.ResourceEvent.dispatchResourceEvent(n, t.ResourceEvent.GROUP_COMPLETE, e)
            }, function(r) {
                if (-1 == t.config.config.loadGroup.indexOf(e) && t.config.config.loadGroup.push(e),
                r.itemList)
                    for (var i = r.itemList, a = i.length, s = 0; a > s; s++) {
                        var o = i[s];
                        delete o.promise,
                        t.ResourceEvent.dispatchResourceEvent(n, t.ResourceEvent.ITEM_LOAD_ERROR, e, o)
                    }
                return t.isCompatible && console.warn(r.error.message),
                t.ResourceEvent.dispatchResourceEvent(n, t.ResourceEvent.GROUP_LOAD_ERROR, e),
                Promise.reject(r.error)
            })
        }
        ,
        r.prototype._loadGroup = function(e, r, i) {
            void 0 === r && (r = 0);
            var n = t.config.getGroupByName(e);
            return 0 == n.length ? new Promise(function(r, i) {
                i({
                    error: new t.ResourceManagerError(2005,e)
                })
            }
            ) : t.queue.pushResGroup(n, e, r, i)
        }
        ,
        r.prototype.createGroup = function(e, r, i) {
            return void 0 === i && (i = !1),
            t.config.createGroup(e, r, i)
        }
        ,
        r.prototype.hasRes = function(e) {
            return null != t.config.getResourceWithSubkey(e)
        }
        ,
        r.prototype.getRes = function(e) {
            var r = t.config.getResourceWithSubkey(e);
            if (r) {
                var i = r.r
                  , n = r.key
                  , a = r.subkey
                  , s = t.processor.isSupport(i);
                return s && s.getData && a ? s.getData(t.host, i, n, a) : t.host.get(i)
            }
            return null
        }
        ,
        r.prototype.getResAsync = function(e, r, i) {
            var n = this
              , a = e
              , s = t.config.getResourceWithSubkey(e);
            if (null == s)
                return r && r.call(i, null, a),
                Promise.reject(new t.ResourceManagerError(2006,e));
            var o = s.r
              , l = s.subkey;
            return t.queue.pushResItem(o).then(function(n) {
                t.host.save(o, n);
                var s = t.processor.isSupport(o);
                return s && s.getData && l && (n = s.getData(t.host, o, e, l)),
                r && r.call(i, n, a),
                n
            }, function(e) {
                return t.host.remove(o),
                t.ResourceEvent.dispatchResourceEvent(n, t.ResourceEvent.ITEM_LOAD_ERROR, "", o),
                r ? (r.call(i, null, a),
                Promise.reject(null)) : Promise.reject(e)
            })
        }
        ,
        r.prototype.getResByUrl = function(e, r, i, n) {
            var a = this;
            void 0 === n && (n = "");
            var s = t.config.getResource(e);
            if (!s && (n || (n = t.config.__temp__get__type__via__url(e)),
            s = {
                name: e,
                url: e,
                type: n,
                root: "",
                extra: 1
            },
            t.config.addResourceData(s),
            s = t.config.getResource(e),
            !s))
                throw "never";
            return t.queue.pushResItem(s).then(function(e) {
                return t.host.save(s, e),
                r && s && r.call(i, e, s.url),
                e
            }, function(n) {
                return t.host.remove(s),
                t.ResourceEvent.dispatchResourceEvent(a, t.ResourceEvent.ITEM_LOAD_ERROR, "", s),
                r ? (r.call(i, null, e),
                Promise.reject(null)) : Promise.reject(n)
            })
        }
        ,
        r.prototype.destroyRes = function(e, r) {
            void 0 === r && (r = !0);
            var i = t.config.getGroupByName(e);
            if (i && i.length > 0) {
                var n = t.config.config.loadGroup.indexOf(e);
                if (-1 == n)
                    return !1;
                if (r || 1 == t.config.config.loadGroup.length && t.config.config.loadGroup[0] == e) {
                    for (var a = 0, s = i; a < s.length; a++) {
                        var o = s[a];
                        t.queue.unloadResource(o)
                    }
                    t.config.config.loadGroup.splice(n, 1)
                } else {
                    for (var l = {}, h = 0, u = t.config.config.loadGroup; h < u.length; h++) {
                        var c = u[h];
                        for (var f in t.config.config.groups[c]) {
                            var d = t.config.config.groups[c][f];
                            l[d] ? l[d]++ : l[d] = 1
                        }
                    }
                    for (var p = 0, _ = i; p < _.length; p++) {
                        var o = _[p];
                        l[o.name] && 1 == l[o.name] && t.queue.unloadResource(o)
                    }
                    t.config.config.loadGroup.splice(n, 1)
                }
                return !0
            }
            var o = t.config.getResource(e);
            return o ? t.queue.unloadResource(o) : (console.warn("在内存" + e + "资源不存在"),
            !1)
        }
        ,
        r.prototype.setMaxLoadingThread = function(e) {
            1 > e && (e = 1),
            t.queue.thread = e
        }
        ,
        r.prototype.setMaxRetryTimes = function(e) {
            e = Math.max(e, 0),
            t.queue.maxRetryTimes = e
        }
        ,
        r.prototype.addResourceData = function(e) {
            e.root = "",
            t.config.addResourceData(e)
        }
        ,
        __decorate([t.checkNull], r.prototype, "hasRes", null),
        __decorate([t.checkNull], r.prototype, "getRes", null),
        __decorate([t.checkNull], r.prototype, "getResAsync", null),
        __decorate([t.checkNull], r.prototype, "getResByUrl", null),
        r
    }(egret.EventDispatcher);
    t.Resource = S,
    __reflect(S.prototype, "RES.Resource");
    var E
}(RES || (RES = {}));
var RES;
!function(t) {
    var e;
    !function(t) {
        function e(t) {
            var e = t.split("/");
            return e.filter(function(t, r) {
                return !!t || r == e.length - 1
            }).join("/")
        }
        function r(t) {
            return t.substr(t.lastIndexOf("/") + 1)
        }
        function i(t) {
            return t.substr(0, t.lastIndexOf("/"))
        }
        t.normalize = e,
        t.basename = r,
        t.dirname = i
    }(e = t.path || (t.path = {}))
}(RES || (RES = {}));
var RES;
!function(t) {
    function e() {
        t.config.config.fileSystem.profile(),
        console.log(r);
        var e = 0;
        for (var i in r) {
            var n = r[i];
            n instanceof egret.Texture && (e += n.$bitmapWidth * n.$bitmapHeight * 4)
        }
        console.log("gpu size : " + (e / 1024).toFixed(3) + "kb")
    }
    var r = {};
    t.profile = e,
    t.host = {
        state: {},
        get resourceConfig() {
            return t.config
        },
        load: function(e, r) {
            var i = "string" == typeof r ? t.processor._map[r] : r;
            return t.queue.loadResource(e, i)
        },
        unload: function(e) {
            return t.queue.unloadResource(e)
        },
        save: function(e, i) {
            t.host.state[e.root + e.name] = 2,
            delete e.promise,
            r[e.root + e.name] = i
        },
        get: function(t) {
            return r[t.root + t.name]
        },
        remove: function(e) {
            delete t.host.state[e.root + e.name],
            delete r[e.root + e.name]
        }
    },
    t.config = new t.ResourceConfig,
    t.queue = new t.ResourceLoader;
    var i = function(t) {
        function e(r, i, n) {
            var a = t.call(this) || this;
            return a.__resource_manager_error__ = !0,
            a.name = r.toString(),
            a.message = e.errorMessage[r].replace("{0}", i).replace("{1}", n),
            a
        }
        return __extends(e, t),
        e.errorMessage = {
            1001: "文件加载失败:{0}",
            1002: "ResourceManager 初始化失败：配置文件加载失败",
            2001: "{0}解析失败,不支持指定解析类型:'{1}'，请编写自定义 Processor ，更多内容请参见 https://github.com/egret-labs/resourcemanager/blob/master/docs/README.md#processor",
            2002: "Analyzer 相关API 在 ResourceManager 中不再支持，请编写自定义 Processor ，更多内容请参见 https://github.com/egret-labs/resourcemanager/blob/master/docs/README.md#processor",
            2003: "{0}解析失败,错误原因:{1}",
            2004: "无法找到文件类型:{0}",
            2005: 'RES加载了不存在或空的资源组:"{0}"',
            2006: "资源配置文件中无法找到特定的资源:{0}"
        },
        e
    }(Error);
    t.ResourceManagerError = i,
    __reflect(i.prototype, "RES.ResourceManagerError")
}(RES || (RES = {}));
var RES;
!function(t) {
    var e;
    !function(e) {
        function r(t) {
            return e._map[t.type]
        }
        function i(t, r) {
            e._map[t] = r
        }
        function n(e, r) {
            var i = this;
            return new Promise(function(n, a) {
                var s = function() {
                    var t = e.data ? e.data : e.response;
                    n(t)
                }
                  , o = function() {
                    var e = new t.ResourceManagerError(1001,r.url);
                    a(e)
                };
                e.addEventListener(egret.Event.COMPLETE, s, i),
                e.addEventListener(egret.IOErrorEvent.IO_ERROR, o, i)
            }
            )
        }
        function a(t, e) {
            if (-1 != e.indexOf("://"))
                return e;
            t = t.split("\\").join("/");
            var r = t.match(/#.*|\?.*/)
              , i = "";
            r && (i = r[0]);
            var n = t.lastIndexOf("/");
            return t = -1 != n ? t.substring(0, n + 1) + e : e,
            t + i
        }
        e.isSupport = r,
        e.map = i,
        e.getRelativePath = a,
        e.ImageProcessor = {
            onLoadStart: function(e, r) {
                var i = new egret.ImageLoader;
                return i.load(t.getVirtualUrl(r.root + r.url)),
                n(i, r).then(function(t) {
                    var i = new egret.Texture;
                    i._setBitmapData(t);
                    var n = e.resourceConfig.getResource(r.name);
                    if (n && n.scale9grid) {
                        var a = n.scale9grid.split(",");
                        i.scale9Grid = new egret.Rectangle(parseInt(a[0]),parseInt(a[1]),parseInt(a[2]),parseInt(a[3]))
                    }
                    return i
                })
            },
            onRemoveStart: function(t, e) {
                var r = t.get(e);
                r.dispose()
            }
        },
        e.BinaryProcessor = {
            onLoadStart: function(e, r) {
                var i = new egret.HttpRequest;
                return i.responseType = egret.HttpResponseType.ARRAY_BUFFER,
                i.open(t.getVirtualUrl(r.root + r.url), "get"),
                i.send(),
                n(i, r)
            },
            onRemoveStart: function(t, e) {}
        },
        e.TextProcessor = {
            onLoadStart: function(e, r) {
                var i = new egret.HttpRequest;
                return i.responseType = egret.HttpResponseType.TEXT,
                i.open(t.getVirtualUrl(r.root + r.url), "get"),
                i.send(),
                n(i, r)
            },
            onRemoveStart: function(t, e) {
                return !0
            }
        },
        e.JsonProcessor = {
            onLoadStart: function(t, e) {
                return t.load(e, "text").then(function(t) {
                    var e = JSON.parse(t);
                    return e
                })
            },
            onRemoveStart: function(t, e) {}
        },
        e.XMLProcessor = {
            onLoadStart: function(t, e) {
                return t.load(e, "text").then(function(t) {
                    var e = egret.XML.parse(t);
                    return e
                })
            },
            onRemoveStart: function(t, e) {
                return !0
            }
        },
        e.CommonJSProcessor = {
            onLoadStart: function(e, r) {
                return e.load(r, "text").then(function(e) {
                    var i = new Function("require","exports",e)
                      , n = function() {}
                      , a = {};
                    try {
                        i(n, a)
                    } catch (s) {
                        throw new t.ResourceManagerError(2003,r.name,s.message)
                    }
                    return a
                })
            },
            onRemoveStart: function(t, e) {}
        },
        e.SheetProcessor = {
            onLoadStart: function(e, r) {
                return e.load(r, "json").then(function(i) {
                    var n = e.resourceConfig.getResource(t.nameSelector(i.file));
                    if (!n) {
                        var s = a(r.url, i.file);
                        n = {
                            name: s,
                            url: s,
                            type: "image",
                            root: r.root
                        }
                    }
                    return e.load(n).then(function(t) {
                        var r = i.frames
                          , a = new egret.SpriteSheet(t);
                        a.$resourceInfo = n;
                        for (var s in r) {
                            var o = r[s]
                              , l = a.createTexture(s, o.x, o.y, o.w, o.h, o.offX, o.offY, o.sourceW, o.sourceH);
                            if (o.scale9grid) {
                                var h = o.scale9grid
                                  , u = h.split(",");
                                l.scale9Grid = new egret.Rectangle(parseInt(u[0]),parseInt(u[1]),parseInt(u[2]),parseInt(u[3]))
                            }
                        }
                        return e.save(n, t),
                        a
                    }, function(t) {
                        throw e.remove(n),
                        t
                    })
                })
            },
            getData: function(t, e, r, i) {
                var n = t.get(e);
                return n ? n.getTexture(i) : null
            },
            onRemoveStart: function(t, e) {
                var r = t.get(e)
                  , i = r.$resourceInfo;
                r.dispose(),
                t.unload(i)
            }
        };
        var s = function(t, e) {
            var r = ""
              , i = e.split("\n")
              , n = i[2]
              , a = n.indexOf('file="');
            -1 != a && (n = n.substring(a + 6),
            a = n.indexOf('"'),
            r = n.substring(0, a)),
            t = t.split("\\").join("/");
            var a = t.lastIndexOf("/");
            return t = -1 != a ? t.substring(0, a + 1) + r : r
        };
        e.FontProcessor = {
            onLoadStart: function(e, r) {
                return e.load(r, "text").then(function(i) {
                    var n;
                    try {
                        n = JSON.parse(i)
                    } catch (o) {
                        n = i
                    }
                    var l;
                    l = "string" == typeof n ? s(r.url, n) : a(r.url, n.file);
                    var h = e.resourceConfig.getResource(t.nameSelector(l));
                    return h || (h = {
                        name: l,
                        url: l,
                        type: "image",
                        root: r.root
                    }),
                    e.load(h).then(function(t) {
                        var r = new egret.BitmapFont(t,n);
                        return r.$resourceInfo = h,
                        e.save(h, t),
                        r
                    }, function(t) {
                        throw e.remove(h),
                        t
                    })
                })
            },
            onRemoveStart: function(t, e) {
                var r = t.get(e)
                  , i = r.$resourceInfo;
                t.unload(i)
            }
        },
        e.SoundProcessor = {
            onLoadStart: function(e, r) {
                var i = new egret.Sound;
                return i.load(t.getVirtualUrl(r.root + r.url)),
                n(i, r).then(function() {
                    return i
                })
            },
            onRemoveStart: function(t, e) {}
        },
        e.MovieClipProcessor = {
            onLoadStart: function(e, r) {
                var i, n;
                return e.load(r, "json").then(function(a) {
                    i = a;
                    var s = r.name
                      , o = s.substring(0, s.lastIndexOf(".")) + ".png";
                    if (n = e.resourceConfig.getResource(o),
                    !n)
                        throw new t.ResourceManagerError(1001,o);
                    return e.load(n)
                }).then(function(t) {
                    e.save(n, t);
                    var r = t
                      , a = new egret.MovieClipDataFactory(i,r);
                    return a
                })
            },
            onRemoveStart: function(t, e) {
                var r = t.get(e);
                r.clearCache(),
                r.$spriteSheet.dispose();
                var i = e.name
                  , n = i.substring(0, i.lastIndexOf(".")) + ".png"
                  , a = t.resourceConfig.getResource(n);
                a && t.unload(a)
            }
        },
        e.MergeJSONProcessor = {
            onLoadStart: function(e, r) {
                return e.load(r, "json").then(function(e) {
                    for (var i in e)
                        t.config.addSubkey(i, r.name);
                    return e
                })
            },
            getData: function(t, e, r, i) {
                var n = t.get(e);
                return n ? n[i] : (console.error("missing resource :" + e.name),
                null)
            },
            onRemoveStart: function(t, e) {}
        },
        e.LegacyResourceConfigProcessor = {
            onLoadStart: function(e, r) {
                return e.load(r, "json").then(function(i) {
                    var n = t.config.config
                      , a = r.root
                      , s = n.fileSystem;
                    s || (s = {
                        fsData: {},
                        getFile: function(t) {
                            return f[t]
                        },
                        addFile: function(t) {
                            t.type || (t.type = ""),
                            void 0 == a && (t.root = ""),
                            f[t.name] = t
                        },
                        profile: function() {
                            console.log(f)
                        },
                        removeFile: function(t) {
                            delete f[t]
                        }
                    },
                    n.fileSystem = s);
                    for (var o = n.groups, l = 0, h = i.groups; l < h.length; l++) {
                        var u = h[l];
                        "" == u.keys ? o[u.name] = [] : o[u.name] = u.keys.split(",")
                    }
                    for (var c = n.alias, f = s.fsData, d = function(t) {
                        f[t.name] = t,
                        f[t.name].root = a,
                        t.subkeys && t.subkeys.split(",").forEach(function(e) {
                            c[e] = t.name + "#" + e,
                            c[t.name + "." + e] = t.name + "#" + e
                        })
                    }, p = 0, _ = i.resources; p < _.length; p++) {
                        var m = _[p];
                        d(m)
                    }
                    return e.save(r, i),
                    i
                })
            },
            onRemoveStart: function() {}
        },
        e._map = {
            image: e.ImageProcessor,
            json: e.JsonProcessor,
            text: e.TextProcessor,
            xml: e.XMLProcessor,
            sheet: e.SheetProcessor,
            font: e.FontProcessor,
            bin: e.BinaryProcessor,
            commonjs: e.CommonJSProcessor,
            sound: e.SoundProcessor,
            movieclip: e.MovieClipProcessor,
            mergeJson: e.MergeJSONProcessor,
            legacyResourceConfig: e.LegacyResourceConfigProcessor
        }
    }(e = t.processor || (t.processor = {}))
}(RES || (RES = {}));
var RES;
!function(t) {
    var e = function(e) {
        function r(t, r, i) {
            void 0 === r && (r = !1),
            void 0 === i && (i = !1);
            var n = e.call(this, t, r, i) || this;
            return n.itemsLoaded = 0,
            n.itemsTotal = 0,
            n.groupName = "",
            n
        }
        return __extends(r, e),
        r.dispatchResourceEvent = function(e, i, n, a, s, o) {
            void 0 === n && (n = ""),
            void 0 === a && (a = void 0),
            void 0 === s && (s = 0),
            void 0 === o && (o = 0);
            var l = egret.Event.create(r, i);
            l.groupName = n,
            a && (l.resItem = t.ResourceItem.convertToResItem(a)),
            l.itemsLoaded = s,
            l.itemsTotal = o;
            var h = e.dispatchEvent(l);
            return egret.Event.release(l),
            h
        }
        ,
        r.ITEM_LOAD_ERROR = "itemLoadError",
        r.CONFIG_COMPLETE = "configComplete",
        r.CONFIG_LOAD_ERROR = "configLoadError",
        r.GROUP_PROGRESS = "groupProgress",
        r.GROUP_COMPLETE = "groupComplete",
        r.GROUP_LOAD_ERROR = "groupLoadError",
        r
    }(egret.Event);
    t.ResourceEvent = e,
    __reflect(e.prototype, "RES.ResourceEvent")
}(RES || (RES = {}));
var RES;
!function(t) {
    var e;
    !function(e) {
        function r(e) {
            var r = e.name;
            if (t.config.config)
                for (var i in t.config.config.alias)
                    t.config.config.alias[i] == e.url && (r = i);
            else
                r = e.url;
            var n = {
                name: r,
                url: e.url,
                type: e.type,
                data: e,
                root: e.root
            };
            return n
        }
        e.TYPE_XML = "xml",
        e.TYPE_IMAGE = "image",
        e.TYPE_BIN = "bin",
        e.TYPE_TEXT = "text",
        e.TYPE_JSON = "json",
        e.TYPE_SHEET = "sheet",
        e.TYPE_FONT = "font",
        e.TYPE_SOUND = "sound",
        e.convertToResItem = r
    }(e = t.ResourceItem || (t.ResourceItem = {}))
}(RES || (RES = {}));
var RES;
!function(t) {
    var e = function() {
        function e(t) {
            this.data = t
        }
        return e.prototype.profile = function() {
            console.log(this.data)
        }
        ,
        e.prototype.addFile = function(e, r) {
            r || (r = ""),
            e = t.path.normalize(e);
            var i = t.path.basename(e)
              , n = t.path.dirname(e);
            this.exists(n) || this.mkdir(n);
            var a = this.resolve(n);
            a[i] = {
                url: e,
                type: r
            }
        }
        ,
        e.prototype.getFile = function(t) {
            var e = this.resolve(t);
            return e && (e.name = t),
            e
        }
        ,
        e.prototype.resolve = function(e) {
            if ("" == e)
                return this.data;
            e = t.path.normalize(e);
            for (var r = e.split("/"), i = this.data, n = 0, a = r; n < a.length; n++) {
                var s = a[n];
                if (!i)
                    return i;
                i = i[s]
            }
            return i
        }
        ,
        e.prototype.mkdir = function(e) {
            e = t.path.normalize(e);
            for (var r = e.split("/"), i = this.data, n = 0, a = r; n < a.length; n++) {
                var s = a[n];
                i[s] || (i[s] = {}),
                i = i[s]
            }
        }
        ,
        e.prototype.exists = function(e) {
            if ("" == e)
                return !0;
            e = t.path.normalize(e);
            for (var r = e.split("/"), i = this.data, n = 0, a = r; n < a.length; n++) {
                var s = a[n];
                if (!i[s])
                    return !1;
                i = i[s]
            }
            return !0
        }
        ,
        e
    }();
    t.NewFileSystem = e,
    __reflect(e.prototype, "RES.NewFileSystem")
}(RES || (RES = {}));
var RES;
!function(t) {
    var e = function() {
        function t() {}
        return t.prototype.init = function() {
            return this.versionInfo = this.getLocalData("all.manifest"),
            Promise.resolve()
        }
        ,
        t.prototype.getVirtualUrl = function(t) {
            return t
        }
        ,
        t.prototype.getLocalData = function(t) {
            if (egret_native.readUpdateFileSync && egret_native.readResourceFileSync) {
                var e = egret_native.readUpdateFileSync(t);
                if (null != e)
                    return JSON.parse(e);
                if (e = egret_native.readResourceFileSync(t),
                null != e)
                    return JSON.parse(e)
            }
            return null
        }
        ,
        t
    }();
    t.NativeVersionController = e,
    __reflect(e.prototype, "RES.NativeVersionController", ["RES.IVersionController"]),
    egret.Capabilities.runtimeType == egret.RuntimeType.NATIVE && (t.VersionController = e)
}(RES || (RES = {}));
var __reflect = this && this.__reflect || function(t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}
  , VersionController = function() {
    function t() {
        this.versionPath = "resource/",
        this.versionConfigPath = "resource/resVer.dm",
        this.canUseCRC = !1,
        this.lang = null,
        this.domain = null
    }
    return t.prototype.init = function() {
        var t = this;
        return new Promise(function(e, r) {
            var i = new egret.HttpRequest
              , n = t.domain + "/" + t.versionConfigPath + "?v=" + 999999 * Math.random();
            i.responseType = egret.HttpResponseType.ARRAY_BUFFER,
            i.open(n, egret.HttpMethod.GET),
            i.send(),
            i.addEventListener(egret.Event.COMPLETE, function(r) {
                var i = r.currentTarget;
                JSZip.loadAsync(i.response).then(function(t) {
                    return t.file("resVer.json").async("text")
                }).then(function(r) {
                    t.versionConfig = JSON.parse(r),
                    console.info("Load RES manifest done"),
                    t.canUseCRC = !0,
                    e()
                })
            }, t),
            i.addEventListener(egret.IOErrorEvent.IO_ERROR, function(r) {
                console.info("Load RES manifest error, no version control"),
                t.canUseCRC = !1,
                e()
            }, t)
        }
        )
    }
    ,
    t.prototype.setDomain = function(t) {
        this.domain = t
    }
    ,
    t.prototype.setLang = function(t) {
        this.lang = t
    }
    ,
    t.prototype.getVirtualUrl = function(t) {
        if (null != this.lang) {
            var e = t.indexOf("/language/");
            if (-1 != e) {
                var r = /\/.._..\//
                  , i = "/" + this.lang + "/";
                t = t.replace(r, i)
            }
        }
        return this.canUseCRC ? this.getResUrlByVersion(t) : t
    }
    ,
    t.prototype.getResUrlByVersion = function(t) {
        if (-1 == t.indexOf(this.versionPath))
            return t;
        this.domain && (t = this.domain + "/" + t);
        var e = t.split(this.versionPath)[1];
        if (this.versionConfig && this.versionConfig[e]) {
            var r = this.versionConfig[e];
            t = t + "?crc=" + r
        }
        return t
    }
    ,
    t
}();
__reflect(VersionController.prototype, "VersionController", ["RES.IVersionController"]),
RES.registerVersionController(new VersionController);
